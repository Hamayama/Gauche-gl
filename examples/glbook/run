#!/usr/bin/env gosh

;; Run through all examples.

(use file.util)
(use gauche.process)

(define (get-scripts)
  (sort (sys-glob "example*.scm")
        (^[a b]
          (let ([ma (#/example(\d+)-(\d+)/ a)]
                [mb (#/example(\d+)-(\d+)/ b)])
            (or (< (x->integer (ma 1)) (x->integer (mb 1)))
                (and (= (x->integer (ma 1)) (x->integer (mb 1)))
                     (< (x->integer (ma 2)) (x->integer (mb 2)))))))))

(define (get-script-titles scripts)
  (map (^f (cond [(#/^\;\;\s*/ (with-input-from-file f read-line))
                  => (^m (m 'after))]
                 [else f]))
       scripts))

(define (main args)
  (let* ([scripts (if (null? (cdr args))
                    (get-scripts)
                    (cdr args))]
         [titles  (get-script-titles scripts)])
    (for-each
     (^[script title]
       (print title)
       (do-process! `(gosh -I../../lib -I../../src/ ,script)))
     scripts titles))
  0)

;; Local variables:
;; mode: scheme
;; end:
