;;;
;;; gl-syms.stub - GL constants
;;;
;;;  Copyright(C) 2002 by Shiro Kawai (shiro@acm.org)
;;;
;;;  Permission to use, copy, modify, distribute this software and
;;;  accompanying documentation for any purpose is hereby granted,
;;;  provided that existing copyright notices are retained in all
;;;  copies and that this notice is included verbatim in all
;;;  distributions.
;;;  This software is provided as is, without express or implied
;;;  warranty.  In no circumstances the author(s) shall be liable
;;;  for any damages arising out of the use of this software.
;;;
;;;  $Id: gl-syms.stub,v 1.6 2002-09-01 19:51:32 shirok Exp $
;;;

"
#include \"gauche-gl.h\"
"

;;=============================================================
;; Constants
;;

(if "defined(GL_VERSION_1_1)"
    (define-constant GL_VERSION_1_1 #t))
(if "defined(GL_VERSION_1_2)"
    (define-constant GL_VERSION_1_2 #t))
(if "defined(GL_VERSION_1_3)"
    (define-constant GL_VERSION_1_3 #t))

(define-enum GL_FALSE)
(define-enum GL_TRUE)
(define-enum GL_BYTE)
(define-enum GL_UNSIGNED_BYTE)
(define-enum GL_SHORT)
(define-enum GL_UNSIGNED_SHORT)
(define-enum GL_INT)
(define-enum GL_UNSIGNED_INT)
(define-enum GL_FLOAT)
(define-enum GL_DOUBLE)
(define-enum GL_2_BYTES)
(define-enum GL_3_BYTES)
(define-enum GL_4_BYTES)
(define-enum GL_LINES)
(define-enum GL_POINTS)
(define-enum GL_LINE_STRIP)
(define-enum GL_LINE_LOOP)
(define-enum GL_TRIANGLES)
(define-enum GL_TRIANGLE_STRIP)
(define-enum GL_TRIANGLE_FAN)
(define-enum GL_QUADS)
(define-enum GL_QUAD_STRIP)
(define-enum GL_POLYGON)
(define-enum GL_EDGE_FLAG)
(define-enum GL_VERTEX_ARRAY)
(define-enum GL_NORMAL_ARRAY)
(define-enum GL_COLOR_ARRAY)
(define-enum GL_INDEX_ARRAY)
(define-enum GL_TEXTURE_COORD_ARRAY)
(define-enum GL_EDGE_FLAG_ARRAY)
(define-enum GL_VERTEX_ARRAY_SIZE)
(define-enum GL_VERTEX_ARRAY_TYPE)
(define-enum GL_VERTEX_ARRAY_STRIDE)
(define-enum GL_NORMAL_ARRAY_TYPE)
(define-enum GL_NORMAL_ARRAY_STRIDE)
(define-enum GL_COLOR_ARRAY_SIZE)
(define-enum GL_COLOR_ARRAY_TYPE)
(define-enum GL_COLOR_ARRAY_STRIDE)
(define-enum GL_INDEX_ARRAY_TYPE)
(define-enum GL_INDEX_ARRAY_STRIDE)
(define-enum GL_TEXTURE_COORD_ARRAY_SIZE)
(define-enum GL_TEXTURE_COORD_ARRAY_TYPE)
(define-enum GL_TEXTURE_COORD_ARRAY_STRIDE)
(define-enum GL_EDGE_FLAG_ARRAY_STRIDE)
(define-enum GL_VERTEX_ARRAY_POINTER)
(define-enum GL_NORMAL_ARRAY_POINTER)
(define-enum GL_COLOR_ARRAY_POINTER)
(define-enum GL_INDEX_ARRAY_POINTER)
(define-enum GL_TEXTURE_COORD_ARRAY_POINTER)
(define-enum GL_EDGE_FLAG_ARRAY_POINTER)
(define-enum GL_V2F)
(define-enum GL_V3F)
(define-enum GL_C4UB_V2F)
(define-enum GL_C4UB_V3F)
(define-enum GL_C3F_V3F)
(define-enum GL_N3F_V3F)
(define-enum GL_C4F_N3F_V3F)
(define-enum GL_T2F_V3F)
(define-enum GL_T4F_V4F)
(define-enum GL_T2F_C4UB_V3F)
(define-enum GL_T2F_C3F_V3F)
(define-enum GL_T2F_N3F_V3F)
(define-enum GL_T2F_C4F_N3F_V3F)
(define-enum GL_T4F_C4F_N3F_V4F)
(define-enum GL_MATRIX_MODE)
(define-enum GL_MODELVIEW)
(define-enum GL_PROJECTION)
(define-enum GL_TEXTURE)
(define-enum GL_POINT_SMOOTH)
(define-enum GL_POINT_SIZE)
(define-enum GL_POINT_SIZE_GRANULARITY)
(define-enum GL_POINT_SIZE_RANGE)
(define-enum GL_LINE_SMOOTH)
(define-enum GL_LINE_STIPPLE)
(define-enum GL_LINE_STIPPLE_PATTERN)
(define-enum GL_LINE_STIPPLE_REPEAT)
(define-enum GL_LINE_WIDTH)
(define-enum GL_LINE_WIDTH_GRANULARITY)
(define-enum GL_LINE_WIDTH_RANGE)
(define-enum GL_POINT)
(define-enum GL_LINE)
(define-enum GL_FILL)
(define-enum GL_CCW)
(define-enum GL_CW)
(define-enum GL_FRONT)
(define-enum GL_BACK)
(define-enum GL_CULL_FACE)
(define-enum GL_CULL_FACE_MODE)
(define-enum GL_POLYGON_SMOOTH)
(define-enum GL_POLYGON_STIPPLE)
(define-enum GL_FRONT_FACE)
(define-enum GL_POLYGON_MODE)
(define-enum GL_POLYGON_OFFSET_FACTOR)
(define-enum GL_POLYGON_OFFSET_UNITS)
(define-enum GL_POLYGON_OFFSET_POINT)
(define-enum GL_POLYGON_OFFSET_LINE)
(define-enum GL_POLYGON_OFFSET_FILL)
(define-enum GL_COMPILE)
(define-enum GL_COMPILE_AND_EXECUTE)
(define-enum GL_LIST_BASE)
(define-enum GL_LIST_INDEX)
(define-enum GL_LIST_MODE)
(define-enum GL_NEVER)
(define-enum GL_LESS)
(define-enum GL_GEQUAL)
(define-enum GL_LEQUAL)
(define-enum GL_GREATER)
(define-enum GL_NOTEQUAL)
(define-enum GL_EQUAL)
(define-enum GL_ALWAYS)
(define-enum GL_DEPTH_TEST)
(define-enum GL_DEPTH_BITS)
(define-enum GL_DEPTH_CLEAR_VALUE)
(define-enum GL_DEPTH_FUNC)
(define-enum GL_DEPTH_RANGE)
(define-enum GL_DEPTH_WRITEMASK)
(define-enum GL_DEPTH_COMPONENT)
(define-enum GL_LIGHTING)
(define-enum GL_LIGHT0)
(define-enum GL_LIGHT1)
(define-enum GL_LIGHT2)
(define-enum GL_LIGHT3)
(define-enum GL_LIGHT4)
(define-enum GL_LIGHT5)
(define-enum GL_LIGHT6)
(define-enum GL_LIGHT7)
(define-enum GL_SPOT_EXPONENT)
(define-enum GL_SPOT_CUTOFF)
(define-enum GL_CONSTANT_ATTENUATION)
(define-enum GL_LINEAR_ATTENUATION)
(define-enum GL_QUADRATIC_ATTENUATION)
(define-enum GL_AMBIENT)
(define-enum GL_DIFFUSE)
(define-enum GL_SPECULAR)
(define-enum GL_SHININESS)
(define-enum GL_EMISSION)
(define-enum GL_POSITION)
(define-enum GL_SPOT_DIRECTION)
(define-enum GL_AMBIENT_AND_DIFFUSE)
(define-enum GL_COLOR_INDEXES)
(define-enum GL_LIGHT_MODEL_TWO_SIDE)
(define-enum GL_LIGHT_MODEL_LOCAL_VIEWER)
(define-enum GL_LIGHT_MODEL_AMBIENT)
(define-enum GL_FRONT_AND_BACK)
(define-enum GL_SHADE_MODEL)
(define-enum GL_FLAT)
(define-enum GL_SMOOTH)
(define-enum GL_COLOR_MATERIAL)
(define-enum GL_COLOR_MATERIAL_FACE)
(define-enum GL_COLOR_MATERIAL_PARAMETER)
(define-enum GL_NORMALIZE)
(define-enum GL_CLIP_PLANE0)
(define-enum GL_CLIP_PLANE1)
(define-enum GL_CLIP_PLANE2)
(define-enum GL_CLIP_PLANE3)
(define-enum GL_CLIP_PLANE4)
(define-enum GL_CLIP_PLANE5)
(define-enum GL_ACCUM_RED_BITS)
(define-enum GL_ACCUM_GREEN_BITS)
(define-enum GL_ACCUM_BLUE_BITS)
(define-enum GL_ACCUM_ALPHA_BITS)
(define-enum GL_ACCUM_CLEAR_VALUE)
(define-enum GL_ACCUM)
(define-enum GL_ADD)
(define-enum GL_LOAD)
(define-enum GL_MULT)
(define-enum GL_RETURN)
(define-enum GL_ALPHA_TEST)
(define-enum GL_ALPHA_TEST_REF)
(define-enum GL_ALPHA_TEST_FUNC)
(define-enum GL_BLEND)
(define-enum GL_BLEND_SRC)
(define-enum GL_BLEND_DST)
(define-enum GL_ZERO)
(define-enum GL_ONE)
(define-enum GL_SRC_COLOR)
(define-enum GL_ONE_MINUS_SRC_COLOR)
(define-enum GL_DST_COLOR)
(define-enum GL_ONE_MINUS_DST_COLOR)
(define-enum GL_SRC_ALPHA)
(define-enum GL_ONE_MINUS_SRC_ALPHA)
(define-enum GL_DST_ALPHA)
(define-enum GL_ONE_MINUS_DST_ALPHA)
(define-enum GL_SRC_ALPHA_SATURATE)
(define-enum GL_CONSTANT_COLOR)
(define-enum GL_ONE_MINUS_CONSTANT_COLOR)
(define-enum GL_CONSTANT_ALPHA)
(define-enum GL_ONE_MINUS_CONSTANT_ALPHA)
(define-enum GL_FEEDBACK)
(define-enum GL_RENDER)
(define-enum GL_SELECT)
(define-enum GL_2D)
(define-enum GL_3D)
(define-enum GL_3D_COLOR)
(define-enum GL_3D_COLOR_TEXTURE)
(define-enum GL_4D_COLOR_TEXTURE)
(define-enum GL_POINT_TOKEN)
(define-enum GL_LINE_TOKEN)
(define-enum GL_LINE_RESET_TOKEN)
(define-enum GL_POLYGON_TOKEN)
(define-enum GL_BITMAP_TOKEN)
(define-enum GL_DRAW_PIXEL_TOKEN)
(define-enum GL_COPY_PIXEL_TOKEN)
(define-enum GL_PASS_THROUGH_TOKEN)
(define-enum GL_FEEDBACK_BUFFER_POINTER)
(define-enum GL_FEEDBACK_BUFFER_SIZE)
(define-enum GL_FEEDBACK_BUFFER_TYPE)
(define-enum GL_SELECTION_BUFFER_POINTER)
(define-enum GL_SELECTION_BUFFER_SIZE)
(define-enum GL_FOG)
(define-enum GL_FOG_MODE)
(define-enum GL_FOG_DENSITY)
(define-enum GL_FOG_COLOR)
(define-enum GL_FOG_INDEX)
(define-enum GL_FOG_START)
(define-enum GL_FOG_END)
(define-enum GL_LINEAR)
(define-enum GL_EXP)
(define-enum GL_EXP2)
(define-enum GL_LOGIC_OP)
(define-enum GL_INDEX_LOGIC_OP)
(define-enum GL_COLOR_LOGIC_OP)
(define-enum GL_LOGIC_OP_MODE)
(define-enum GL_CLEAR)
(define-enum GL_SET)
(define-enum GL_COPY)
(define-enum GL_COPY_INVERTED)
(define-enum GL_NOOP)
(define-enum GL_INVERT)
(define-enum GL_AND)
(define-enum GL_NAND)
(define-enum GL_OR)
(define-enum GL_NOR)
(define-enum GL_XOR)
(define-enum GL_EQUIV)
(define-enum GL_AND_REVERSE)
(define-enum GL_AND_INVERTED)
(define-enum GL_OR_REVERSE)
(define-enum GL_OR_INVERTED)
(define-enum GL_STENCIL_TEST)
(define-enum GL_STENCIL_WRITEMASK)
(define-enum GL_STENCIL_BITS)
(define-enum GL_STENCIL_FUNC)
(define-enum GL_STENCIL_VALUE_MASK)
(define-enum GL_STENCIL_REF)
(define-enum GL_STENCIL_FAIL)
(define-enum GL_STENCIL_PASS_DEPTH_PASS)
(define-enum GL_STENCIL_PASS_DEPTH_FAIL)
(define-enum GL_STENCIL_CLEAR_VALUE)
(define-enum GL_STENCIL_INDEX)
(define-enum GL_KEEP)
(define-enum GL_REPLACE)
(define-enum GL_INCR)
(define-enum GL_DECR)
(define-enum GL_NONE)
(define-enum GL_LEFT)
(define-enum GL_RIGHT)
(define-enum GL_FRONT_LEFT)
(define-enum GL_FRONT_RIGHT)
(define-enum GL_BACK_LEFT)
(define-enum GL_BACK_RIGHT)
(define-enum GL_AUX0)
(define-enum GL_AUX1)
(define-enum GL_AUX2)
(define-enum GL_AUX3)
(define-enum GL_COLOR_INDEX)
(define-enum GL_RED)
(define-enum GL_GREEN)
(define-enum GL_BLUE)
(define-enum GL_ALPHA)
(define-enum GL_LUMINANCE)
(define-enum GL_LUMINANCE_ALPHA)
(define-enum GL_ALPHA_BITS)
(define-enum GL_RED_BITS)
(define-enum GL_GREEN_BITS)
(define-enum GL_BLUE_BITS)
(define-enum GL_INDEX_BITS)
(define-enum GL_SUBPIXEL_BITS)
(define-enum GL_AUX_BUFFERS)
(define-enum GL_READ_BUFFER)
(define-enum GL_DRAW_BUFFER)
(define-enum GL_DOUBLEBUFFER)
(define-enum GL_STEREO)
(define-enum GL_BITMAP)
(define-enum GL_COLOR)
(define-enum GL_DEPTH)
(define-enum GL_STENCIL)
(define-enum GL_DITHER)
(define-enum GL_RGB)
(define-enum GL_RGBA)
(define-enum GL_MAX_LIST_NESTING)
(define-enum GL_MAX_ATTRIB_STACK_DEPTH)
(define-enum GL_MAX_MODELVIEW_STACK_DEPTH)
(define-enum GL_MAX_NAME_STACK_DEPTH)
(define-enum GL_MAX_PROJECTION_STACK_DEPTH)
(define-enum GL_MAX_TEXTURE_STACK_DEPTH)
(define-enum GL_MAX_EVAL_ORDER)
(define-enum GL_MAX_LIGHTS)
(define-enum GL_MAX_CLIP_PLANES)
(define-enum GL_MAX_TEXTURE_SIZE)
(define-enum GL_MAX_PIXEL_MAP_TABLE)
(define-enum GL_MAX_VIEWPORT_DIMS)
(define-enum GL_MAX_CLIENT_ATTRIB_STACK_DEPTH)
(define-enum GL_ATTRIB_STACK_DEPTH)
(define-enum GL_CLIENT_ATTRIB_STACK_DEPTH)
(define-enum GL_COLOR_CLEAR_VALUE)
(define-enum GL_COLOR_WRITEMASK)
(define-enum GL_CURRENT_INDEX)
(define-enum GL_CURRENT_COLOR)
(define-enum GL_CURRENT_NORMAL)
(define-enum GL_CURRENT_RASTER_COLOR)
(define-enum GL_CURRENT_RASTER_DISTANCE)
(define-enum GL_CURRENT_RASTER_INDEX)
(define-enum GL_CURRENT_RASTER_POSITION)
(define-enum GL_CURRENT_RASTER_TEXTURE_COORDS)
(define-enum GL_CURRENT_RASTER_POSITION_VALID)
(define-enum GL_CURRENT_TEXTURE_COORDS)
(define-enum GL_INDEX_CLEAR_VALUE)
(define-enum GL_INDEX_MODE)
(define-enum GL_INDEX_WRITEMASK)
(define-enum GL_MODELVIEW_MATRIX)
(define-enum GL_MODELVIEW_STACK_DEPTH)
(define-enum GL_NAME_STACK_DEPTH)
(define-enum GL_PROJECTION_MATRIX)
(define-enum GL_PROJECTION_STACK_DEPTH)
(define-enum GL_RENDER_MODE)
(define-enum GL_RGBA_MODE)
(define-enum GL_TEXTURE_MATRIX)
(define-enum GL_TEXTURE_STACK_DEPTH)
(define-enum GL_VIEWPORT)
(define-enum GL_AUTO_NORMAL)
(define-enum GL_MAP1_COLOR_4)
(define-enum GL_MAP1_GRID_DOMAIN)
(define-enum GL_MAP1_GRID_SEGMENTS)
(define-enum GL_MAP1_INDEX)
(define-enum GL_MAP1_NORMAL)
(define-enum GL_MAP1_TEXTURE_COORD_1)
(define-enum GL_MAP1_TEXTURE_COORD_2)
(define-enum GL_MAP1_TEXTURE_COORD_3)
(define-enum GL_MAP1_TEXTURE_COORD_4)
(define-enum GL_MAP1_VERTEX_3)
(define-enum GL_MAP1_VERTEX_4)
(define-enum GL_MAP2_COLOR_4)
(define-enum GL_MAP2_GRID_DOMAIN)
(define-enum GL_MAP2_GRID_SEGMENTS)
(define-enum GL_MAP2_INDEX)
(define-enum GL_MAP2_NORMAL)
(define-enum GL_MAP2_TEXTURE_COORD_1)
(define-enum GL_MAP2_TEXTURE_COORD_2)
(define-enum GL_MAP2_TEXTURE_COORD_3)
(define-enum GL_MAP2_TEXTURE_COORD_4)
(define-enum GL_MAP2_VERTEX_3)
(define-enum GL_MAP2_VERTEX_4)
(define-enum GL_COEFF)
(define-enum GL_DOMAIN)
(define-enum GL_ORDER)
(define-enum GL_FOG_HINT)
(define-enum GL_LINE_SMOOTH_HINT)
(define-enum GL_PERSPECTIVE_CORRECTION_HINT)
(define-enum GL_POINT_SMOOTH_HINT)
(define-enum GL_POLYGON_SMOOTH_HINT)
(define-enum GL_DONT_CARE)
(define-enum GL_FASTEST)
(define-enum GL_NICEST)
(define-enum GL_SCISSOR_TEST)
(define-enum GL_SCISSOR_BOX)
(define-enum GL_MAP_COLOR)
(define-enum GL_MAP_STENCIL)
(define-enum GL_INDEX_SHIFT)
(define-enum GL_INDEX_OFFSET)
(define-enum GL_RED_SCALE)
(define-enum GL_RED_BIAS)
(define-enum GL_GREEN_SCALE)
(define-enum GL_GREEN_BIAS)
(define-enum GL_BLUE_SCALE)
(define-enum GL_BLUE_BIAS)
(define-enum GL_ALPHA_SCALE)
(define-enum GL_ALPHA_BIAS)
(define-enum GL_DEPTH_SCALE)
(define-enum GL_DEPTH_BIAS)
(define-enum GL_PIXEL_MAP_S_TO_S_SIZE)
(define-enum GL_PIXEL_MAP_I_TO_I_SIZE)
(define-enum GL_PIXEL_MAP_I_TO_R_SIZE)
(define-enum GL_PIXEL_MAP_I_TO_G_SIZE)
(define-enum GL_PIXEL_MAP_I_TO_B_SIZE)
(define-enum GL_PIXEL_MAP_I_TO_A_SIZE)
(define-enum GL_PIXEL_MAP_R_TO_R_SIZE)
(define-enum GL_PIXEL_MAP_G_TO_G_SIZE)
(define-enum GL_PIXEL_MAP_B_TO_B_SIZE)
(define-enum GL_PIXEL_MAP_A_TO_A_SIZE)
(define-enum GL_PIXEL_MAP_S_TO_S)
(define-enum GL_PIXEL_MAP_I_TO_I)
(define-enum GL_PIXEL_MAP_I_TO_R)
(define-enum GL_PIXEL_MAP_I_TO_G)
(define-enum GL_PIXEL_MAP_I_TO_B)
(define-enum GL_PIXEL_MAP_I_TO_A)
(define-enum GL_PIXEL_MAP_R_TO_R)
(define-enum GL_PIXEL_MAP_G_TO_G)
(define-enum GL_PIXEL_MAP_B_TO_B)
(define-enum GL_PIXEL_MAP_A_TO_A)
(define-enum GL_PACK_ALIGNMENT)
(define-enum GL_PACK_LSB_FIRST)
(define-enum GL_PACK_ROW_LENGTH)
(define-enum GL_PACK_SKIP_PIXELS)
(define-enum GL_PACK_SKIP_ROWS)
(define-enum GL_PACK_SWAP_BYTES)
(define-enum GL_UNPACK_ALIGNMENT)
(define-enum GL_UNPACK_LSB_FIRST)
(define-enum GL_UNPACK_ROW_LENGTH)
(define-enum GL_UNPACK_SKIP_PIXELS)
(define-enum GL_UNPACK_SKIP_ROWS)
(define-enum GL_UNPACK_SWAP_BYTES)
(define-enum GL_ZOOM_X)
(define-enum GL_ZOOM_Y)
(define-enum GL_TEXTURE_ENV)
(define-enum GL_TEXTURE_ENV_MODE)
(define-enum GL_TEXTURE_1D)
(define-enum GL_TEXTURE_2D)
(define-enum GL_TEXTURE_WRAP_S)
(define-enum GL_TEXTURE_WRAP_T)
(define-enum GL_TEXTURE_MAG_FILTER)
(define-enum GL_TEXTURE_MIN_FILTER)
(define-enum GL_TEXTURE_ENV_COLOR)
(define-enum GL_TEXTURE_GEN_S)
(define-enum GL_TEXTURE_GEN_T)
(define-enum GL_TEXTURE_GEN_MODE)
(define-enum GL_TEXTURE_BORDER_COLOR)
(define-enum GL_TEXTURE_WIDTH)
(define-enum GL_TEXTURE_HEIGHT)
(define-enum GL_TEXTURE_BORDER)
(define-enum GL_TEXTURE_COMPONENTS)
(define-enum GL_TEXTURE_RED_SIZE)
(define-enum GL_TEXTURE_GREEN_SIZE)
(define-enum GL_TEXTURE_BLUE_SIZE)
(define-enum GL_TEXTURE_ALPHA_SIZE)
(define-enum GL_TEXTURE_LUMINANCE_SIZE)
(define-enum GL_TEXTURE_INTENSITY_SIZE)
(define-enum GL_NEAREST_MIPMAP_NEAREST)
(define-enum GL_NEAREST_MIPMAP_LINEAR)
(define-enum GL_LINEAR_MIPMAP_NEAREST)
(define-enum GL_LINEAR_MIPMAP_LINEAR)
(define-enum GL_OBJECT_LINEAR)
(define-enum GL_OBJECT_PLANE)
(define-enum GL_EYE_LINEAR)
(define-enum GL_EYE_PLANE)
(define-enum GL_SPHERE_MAP)
(define-enum GL_DECAL)
(define-enum GL_MODULATE)
(define-enum GL_NEAREST)
(define-enum GL_REPEAT)
(define-enum GL_CLAMP)
(define-enum GL_S)
(define-enum GL_T)
(define-enum GL_R)
(define-enum GL_Q)
(define-enum GL_TEXTURE_GEN_R)
(define-enum GL_TEXTURE_GEN_Q)
;; GL 1.1 texturing
(if "defined(GL_VERSION_1_1)"
    (begin
      (define-enum GL_PROXY_TEXTURE_1D)
      (define-enum GL_PROXY_TEXTURE_2D)
      (define-enum GL_TEXTURE_PRIORITY)
      (define-enum GL_TEXTURE_RESIDENT)
      (define-enum GL_TEXTURE_BINDING_1D)
      (define-enum GL_TEXTURE_BINDING_2D)
      (define-enum GL_TEXTURE_INTERNAL_FORMAT)))
;; GL 1.2 texturing
(if "defined(GL_VERSION_1_2)"
    (begin
      (define-enum GL_PACK_SKIP_IMAGES)
      (define-enum GL_PACK_IMAGE_HEIGHT)
      (define-enum GL_UNPACK_SKIP_IMAGES)
      (define-enum GL_UNPACK_IMAGE_HEIGHT)
      (define-enum GL_TEXTURE_3D)
      (define-enum GL_PROXY_TEXTURE_3D)
      (define-enum GL_TEXTURE_DEPTH)
      (define-enum GL_TEXTURE_WRAP_R)
      (define-enum GL_MAX_3D_TEXTURE_SIZE)
      (define-enum GL_TEXTURE_BINDING_3D)))
;; GL 1.1 Internal texture formats
(if "defined(GL_VERSION_1_1)"
    (begin
      (define-enum GL_ALPHA4)
      (define-enum GL_ALPHA8)
      (define-enum GL_ALPHA12)
      (define-enum GL_ALPHA16)
      (define-enum GL_LUMINANCE4)
      (define-enum GL_LUMINANCE8)
      (define-enum GL_LUMINANCE12)
      (define-enum GL_LUMINANCE16)
      (define-enum GL_LUMINANCE4_ALPHA4)
      (define-enum GL_LUMINANCE6_ALPHA2)
      (define-enum GL_LUMINANCE8_ALPHA8)
      (define-enum GL_LUMINANCE12_ALPHA4)
      (define-enum GL_LUMINANCE12_ALPHA12)
      (define-enum GL_LUMINANCE16_ALPHA16)
      (define-enum GL_INTENSITY)
      (define-enum GL_INTENSITY4)
      (define-enum GL_INTENSITY8)
      (define-enum GL_INTENSITY12)
      (define-enum GL_INTENSITY16)
      (define-enum GL_R3_G3_B2)
      (define-enum GL_RGB4)
      (define-enum GL_RGB5)
      (define-enum GL_RGB8)
      (define-enum GL_RGB10)
      (define-enum GL_RGB12)
      (define-enum GL_RGB16)
      (define-enum GL_RGBA2)
      (define-enum GL_RGBA4)
      (define-enum GL_RGB5_A1)
      (define-enum GL_RGBA8)
      (define-enum GL_RGB10_A2)
      (define-enum GL_RGBA12)
      (define-enum GL_RGBA16)
      ))

;; Utility
(define-enum GL_VENDOR)
(define-enum GL_RENDERER)
(define-enum GL_VERSION)
(define-enum GL_EXTENSIONS)

;; Errors
(define-enum GL_NO_ERROR)
(define-enum GL_INVALID_VALUE)
(define-enum GL_INVALID_ENUM)
(define-enum GL_INVALID_OPERATION)
(define-enum GL_STACK_OVERFLOW)
(define-enum GL_STACK_UNDERFLOW)
(define-enum GL_OUT_OF_MEMORY)

;; GL 1.2
(if "defined(GL_VERSION_1_2)"
    (begin
      (define-enum GL_RESCALE_NORMAL)
      (define-enum GL_CLAMP_TO_EDGE)
      (define-enum GL_MAX_ELEMENTS_VERTICES)
      (define-enum GL_MAX_ELEMENTS_INDICES)
      (define-enum GL_BGR)
      (define-enum GL_BGRA)
      (define-enum GL_UNSIGNED_BYTE_3_3_2)
      (define-enum GL_UNSIGNED_BYTE_2_3_3_REV)
      (define-enum GL_UNSIGNED_SHORT_5_6_5)
      (define-enum GL_UNSIGNED_SHORT_5_6_5_REV)
      (define-enum GL_UNSIGNED_SHORT_4_4_4_4)
      (define-enum GL_UNSIGNED_SHORT_4_4_4_4_REV)
      (define-enum GL_UNSIGNED_SHORT_5_5_5_1)
      (define-enum GL_UNSIGNED_SHORT_1_5_5_5_REV)
      (define-enum GL_UNSIGNED_INT_8_8_8_8)
      (define-enum GL_UNSIGNED_INT_8_8_8_8_REV)
      (define-enum GL_UNSIGNED_INT_10_10_10_2)
      (define-enum GL_UNSIGNED_INT_2_10_10_10_REV)
      (define-enum GL_LIGHT_MODEL_COLOR_CONTROL)
      (define-enum GL_SINGLE_COLOR)
      (define-enum GL_SEPARATE_SPECULAR_COLOR)
      (define-enum GL_TEXTURE_MIN_LOD)
      (define-enum GL_TEXTURE_MAX_LOD)
      (define-enum GL_TEXTURE_BASE_LEVEL)
      (define-enum GL_TEXTURE_MAX_LEVEL)
      (define-enum GL_SMOOTH_POINT_SIZE_RANGE)
      (define-enum GL_SMOOTH_POINT_SIZE_GRANULARITY)
      (define-enum GL_SMOOTH_LINE_WIDTH_RANGE)
      (define-enum GL_SMOOTH_LINE_WIDTH_GRANULARITY)
      (define-enum GL_ALIASED_POINT_SIZE_RANGE)
      (define-enum GL_ALIASED_LINE_WIDTH_RANGE)
      ))

;; Extensions
(if "defined(GL_EXT_blend_color)"
    (begin
      (define-constant GL_EXT_blend_color #t)
      (define-enum GL_BLEND_COLOR_EXT)
      (define-enum GL_CONSTANT_COLOR_EXT)
      (define-enum GL_ONE_MINUS_CONSTANT_COLOR_EXT)
      (define-enum GL_CONSTANT_ALPHA_EXT)
      (define-enum GL_ONE_MINUS_CONSTANT_ALPHA_EXT)
      (define-enum GL_BLEND_EQUATION_EXT)))
(if "defined(GL_EXT_blend_minmax)"
    (begin
      (define-constant GL_EXT_blend_minmax #t)
      (define-enum GL_MIN_EXT)
      (define-enum GL_MAX_EXT)
      (define-enum GL_FUNC_ADD_EXT)))
(if "defined(GL_EXT_blend_subtract)"
    (begin
      (define-constant GL_EXT_blend_subtract #t)
      (define-enum GL_FUNC_SUBTRACT_EXT)
      (define-enum GL_FUNC_REVERSE_SUBTRACT_EXT)))
(if "defined(GL_EXT_polygon_offset)"
    (begin
      (define-constant GL_EXT_polygon_offset #t)
      (define-enum GL_POLYGON_OFFSET_EXT)
      (define-enum GL_POLYGON_OFFSET_FACTOR_EXT)
      (define-enum GL_POLYGON_OFFSET_BIAS_EXT)))
(if "defined(GL_EXT_vertex_array)"
    (begin
      (define-constant GL_EXT_vertex_array #t)
      (define-enum GL_VERTEX_ARRAY_EXT)
      (define-enum GL_NORMAL_ARRAY_EXT)
      (define-enum GL_COLOR_ARRAY_EXT)
      (define-enum GL_INDEX_ARRAY_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_EXT)
      (define-enum GL_EDGE_FLAG_ARRAY_EXT)
      (define-enum GL_VERTEX_ARRAY_SIZE_EXT)
      (define-enum GL_VERTEX_ARRAY_TYPE_EXT)
      (define-enum GL_VERTEX_ARRAY_STRIDE_EXT)
      (define-enum GL_VERTEX_ARRAY_COUNT_EXT)
      (define-enum GL_NORMAL_ARRAY_TYPE_EXT)
      (define-enum GL_NORMAL_ARRAY_STRIDE_EXT)
      (define-enum GL_NORMAL_ARRAY_COUNT_EXT)
      (define-enum GL_COLOR_ARRAY_SIZE_EXT)
      (define-enum GL_COLOR_ARRAY_TYPE_EXT)
      (define-enum GL_COLOR_ARRAY_STRIDE_EXT)
      (define-enum GL_COLOR_ARRAY_COUNT_EXT)
      (define-enum GL_INDEX_ARRAY_TYPE_EXT)
      (define-enum GL_INDEX_ARRAY_STRIDE_EXT)
      (define-enum GL_INDEX_ARRAY_COUNT_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_SIZE_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_TYPE_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_STRIDE_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_COUNT_EXT)
      (define-enum GL_EDGE_FLAG_ARRAY_STRIDE_EXT)
      (define-enum GL_EDGE_FLAG_ARRAY_COUNT_EXT)
      (define-enum GL_VERTEX_ARRAY_POINTER_EXT)
      (define-enum GL_NORMAL_ARRAY_POINTER_EXT)
      (define-enum GL_COLOR_ARRAY_POINTER_EXT)
      (define-enum GL_INDEX_ARRAY_POINTER_EXT)
      (define-enum GL_TEXTURE_COORD_ARRAY_POINTER_EXT)
      (define-enum GL_EDGE_FLAG_ARRAY_POINTER_EXT)))
(if "defined(GL_EXT_texture_object)"
    (begin
      (define-constant GL_EXT_texture_object #t)
      (if "defined(GL_TEXTURE_PRIORITY_EXT)"
          (define-enum GL_TEXTURE_PRIORITY_EXT))
      (if "defined(GL_TEXTURE_RESIDENT_EXT)"
          (define-enum GL_TEXTURE_RESIDENT_EXT))
      (if "defined(GL_TEXTURE_1D_BINDING_EXT)"
          (define-enum GL_TEXTURE_1D_BINDING_EXT))
      (if "defined(GL_TEXTURE_2D_BINDING_EXT)"
          (define-enum GL_TEXTURE_2D_BINDING_EXT))))
(if "defined(GL_EXT_texture3D)"
    (begin
      (define-constant GL_EXT_texture3D #t)
      (if "defined(GL_TEXTURE_3D_BINDING_EXT)"
          (define-enum GL_TEXTURE_3D_BINDING_EXT))
      (define-enum GL_PACK_SKIP_IMAGES_EXT)
      (define-enum GL_PACK_IMAGE_HEIGHT_EXT)
      (define-enum GL_UNPACK_SKIP_IMAGES_EXT)
      (define-enum GL_UNPACK_IMAGE_HEIGHT_EXT)
      (define-enum GL_TEXTURE_3D_EXT)
      (define-enum GL_PROXY_TEXTURE_3D_EXT)
      (define-enum GL_TEXTURE_DEPTH_EXT)
      (define-enum GL_TEXTURE_WRAP_R_EXT)
      (define-enum GL_MAX_3D_TEXTURE_SIZE_EXT)))
(if "defined(GL_EXT_paletted_texture)"
    (begin
      (define-constant GL_EXT_paletted_texture #t)
      (if "defined(GL_TABLE_TOO_LARGE_EXT)"
	  (define-enum GL_TABLE_TOO_LARGE_EXT))
      (if "defined(GL_COLOR_TABLE_FORMAT_EXT)"
	  (begin 
            (define-enum GL_COLOR_TABLE_FORMAT_EXT)
            (define-enum GL_COLOR_TABLE_WIDTH_EXT)
            (define-enum GL_COLOR_TABLE_RED_SIZE_EXT)
            (define-enum GL_COLOR_TABLE_GREEN_SIZE_EXT)
            (define-enum GL_COLOR_TABLE_BLUE_SIZE_EXT)
            (define-enum GL_COLOR_TABLE_ALPHA_SIZE_EXT)
            (define-enum GL_COLOR_TABLE_LUMINANCE_SIZE_EXT)
            (define-enum GL_COLOR_TABLE_INTENSITY_SIZE_EXT)))
      (define-enum GL_TEXTURE_INDEX_SIZE_EXT)
      (define-enum GL_COLOR_INDEX1_EXT)
      (define-enum GL_COLOR_INDEX2_EXT)
      (define-enum GL_COLOR_INDEX4_EXT)
      (define-enum GL_COLOR_INDEX8_EXT)
      (define-enum GL_COLOR_INDEX12_EXT)
      (define-enum GL_COLOR_INDEX16_EXT)))
(if "defined(GL_EXT_rescale_normal)"
    (begin
      (define-constant GL_EXT_rescale_normal #t)
      (define-enum GL_RESCALE_NORMAL_EXT)))
(if "defined(GL_EXT_abgr)"
    (begin
      (define-constant GL_EXT_abgr #t)
      (define-enum GL_ABGR_EXT)))
(if "defined(GL_SGIS_texture_edge_clamp)"
    (begin
      (define-constant GL_SGIS_texture_edge_clamp #t)
      (define-enum GL_CLAMP_TO_EDGE_SGIS)))

;; glPush/PopAttrib bits
(define-enum GL_CURRENT_BIT)
(define-enum GL_POINT_BIT)
(define-enum GL_LINE_BIT)
(define-enum GL_POLYGON_BIT)
(define-enum GL_POLYGON_STIPPLE_BIT)
(define-enum GL_PIXEL_MODE_BIT)
(define-enum GL_LIGHTING_BIT)
(define-enum GL_FOG_BIT)
(define-enum GL_DEPTH_BUFFER_BIT)
(define-enum GL_ACCUM_BUFFER_BIT)
(define-enum GL_STENCIL_BUFFER_BIT)
(define-enum GL_VIEWPORT_BIT)
(define-enum GL_TRANSFORM_BIT)
(define-enum GL_ENABLE_BIT)
(define-enum GL_COLOR_BUFFER_BIT)
(define-enum GL_HINT_BIT)
(define-enum GL_EVAL_BIT)
(define-enum GL_LIST_BIT)
(define-enum GL_TEXTURE_BIT)
(define-enum GL_SCISSOR_BIT)
(define-enum GL_ALL_ATTRIB_BITS)
(define-enum GL_CLIENT_PIXEL_STORE_BIT)
(define-enum GL_CLIENT_VERTEX_ARRAY_BIT)
(if "defined(GL_ALL_CLIENT_ATTRIB_BITS)"
  (define-enum GL_ALL_CLIENT_ATTRIB_BITS)
  )

;; GL ARB multitexture extensionx
(if "defined(GL_ARB_multitexture)"
    (begin
      (define-constant GL_ARB_multitexture #t)
      (define-enum GL_TEXTURE0_ARB)
      (define-enum GL_TEXTURE1_ARB)
      (define-enum GL_TEXTURE2_ARB)
      (define-enum GL_TEXTURE3_ARB)
      (define-enum GL_TEXTURE4_ARB)
      (define-enum GL_TEXTURE5_ARB)
      (define-enum GL_TEXTURE6_ARB)
      (define-enum GL_TEXTURE7_ARB)
      (define-enum GL_TEXTURE8_ARB)
      (define-enum GL_TEXTURE9_ARB)
      (define-enum GL_TEXTURE10_ARB)
      (define-enum GL_TEXTURE11_ARB)
      (define-enum GL_TEXTURE12_ARB)
      (define-enum GL_TEXTURE13_ARB)
      (define-enum GL_TEXTURE14_ARB)
      (define-enum GL_TEXTURE15_ARB)
      (define-enum GL_TEXTURE16_ARB)
      (define-enum GL_TEXTURE17_ARB)
      (define-enum GL_TEXTURE18_ARB)
      (define-enum GL_TEXTURE19_ARB)
      (define-enum GL_TEXTURE20_ARB)
      (define-enum GL_TEXTURE21_ARB)
      (define-enum GL_TEXTURE22_ARB)
      (define-enum GL_TEXTURE23_ARB)
      (define-enum GL_TEXTURE24_ARB)
      (define-enum GL_TEXTURE25_ARB)
      (define-enum GL_TEXTURE26_ARB)
      (define-enum GL_TEXTURE27_ARB)
      (define-enum GL_TEXTURE28_ARB)
      (define-enum GL_TEXTURE29_ARB)
      (define-enum GL_TEXTURE30_ARB)
      (define-enum GL_TEXTURE31_ARB)
      (define-enum GL_ACTIVE_TEXTURE_ARB)
      (define-enum GL_CLIENT_ACTIVE_TEXTURE_ARB)
      (define-enum GL_MAX_TEXTURE_UNITS_ARB)
      ))

;; OpenGL1.3 texture
(if "defined(GL_VERSION_1_3)"
    (begin
      (define-enum GL_ACTIVE_TEXTURE)
      (define-enum GL_CLIENT_ACTIVE_TEXTURE)
      (define-enum GL_MAX_TEXTURE_UNITS)
      (define-enum GL_TEXTURE0)
      (define-enum GL_TEXTURE1)
      (define-enum GL_TEXTURE2)
      (define-enum GL_TEXTURE3)
      (define-enum GL_TEXTURE4)
      (define-enum GL_TEXTURE5)
      (define-enum GL_TEXTURE6)
      (define-enum GL_TEXTURE7)
      (define-enum GL_TEXTURE8)
      (define-enum GL_TEXTURE9)
      (define-enum GL_TEXTURE10)
      (define-enum GL_TEXTURE11)
      (define-enum GL_TEXTURE12)
      (define-enum GL_TEXTURE13)
      (define-enum GL_TEXTURE14)
      (define-enum GL_TEXTURE15)
      (define-enum GL_TEXTURE16)
      (define-enum GL_TEXTURE17)
      (define-enum GL_TEXTURE18)
      (define-enum GL_TEXTURE19)
      (define-enum GL_TEXTURE20)
      (define-enum GL_TEXTURE21)
      (define-enum GL_TEXTURE22)
      (define-enum GL_TEXTURE23)
      (define-enum GL_TEXTURE24)
      (define-enum GL_TEXTURE25)
      (define-enum GL_TEXTURE26)
      (define-enum GL_TEXTURE27)
      (define-enum GL_TEXTURE28)
      (define-enum GL_TEXTURE29)
      (define-enum GL_TEXTURE30)
      (define-enum GL_TEXTURE31)
      (define-enum GL_NORMAL_MAP)
      (define-enum GL_REFLECTION_MAP)
      (define-enum GL_TEXTURE_CUBE_MAP)
      (define-enum GL_TEXTURE_BINDING_CUBE_MAP)
      (define-enum GL_TEXTURE_CUBE_MAP_POSITIVE_X)
      (define-enum GL_TEXTURE_CUBE_MAP_NEGATIVE_X)
      (define-enum GL_TEXTURE_CUBE_MAP_POSITIVE_Y)
      (define-enum GL_TEXTURE_CUBE_MAP_NEGATIVE_Y)
      (define-enum GL_TEXTURE_CUBE_MAP_POSITIVE_Z)
      (define-enum GL_TEXTURE_CUBE_MAP_NEGATIVE_Z)
      (define-enum GL_PROXY_TEXTURE_CUBE_MAP)
      (define-enum GL_MAX_CUBE_MAP_TEXTURE_SIZE)
      (define-enum GL_COMBINE)
      (define-enum GL_COMBINE_RGB)
      (define-enum GL_COMBINE_ALPHA)
      (define-enum GL_RGB_SCALE)
      (define-enum GL_ADD_SIGNED)
      (define-enum GL_INTERPOLATE)
      (define-enum GL_CONSTANT)
      (define-enum GL_PRIMARY_COLOR)
      (define-enum GL_PREVIOUS)
      (define-enum GL_SOURCE0_RGB)
      (define-enum GL_SOURCE1_RGB)
      (define-enum GL_SOURCE2_RGB)
      (define-enum GL_SOURCE0_ALPHA)
      (define-enum GL_SOURCE1_ALPHA)
      (define-enum GL_SOURCE2_ALPHA)
      (define-enum GL_OPERAND0_RGB)
      (define-enum GL_OPERAND1_RGB)
      (define-enum GL_OPERAND2_RGB)
      (define-enum GL_OPERAND0_ALPHA)
      (define-enum GL_OPERAND1_ALPHA)
      (define-enum GL_OPERAND2_ALPHA)
      (define-enum GL_SUBTRACT)
      (define-enum GL_TRANSPOSE_MODELVIEW_MATRIX)
      (define-enum GL_TRANSPOSE_PROJECTION_MATRIX)
      (define-enum GL_TRANSPOSE_TEXTURE_MATRIX)
      (define-enum GL_TRANSPOSE_COLOR_MATRIX)
      (define-enum GL_COMPRESSED_ALPHA)
      (define-enum GL_COMPRESSED_LUMINANCE)
      (define-enum GL_COMPRESSED_LUMINANCE_ALPHA)
      (define-enum GL_COMPRESSED_INTENSITY)
      (define-enum GL_COMPRESSED_RGB)
      (define-enum GL_COMPRESSED_RGBA)
      (define-enum GL_TEXTURE_COMPRESSION_HINT)
      (if "defined(GL_TEXTURE_COMPRESSED_IMAGE_SIZE)"
	  (define-enum GL_TEXTURE_COMPRESSED_IMAGE_SIZE))
      (define-enum GL_TEXTURE_COMPRESSED)
      (define-enum GL_NUM_COMPRESSED_TEXTURE_FORMATS)
      (define-enum GL_COMPRESSED_TEXTURE_FORMATS)
      (define-enum GL_DOT3_RGB)
      (define-enum GL_DOT3_RGBA)
      (define-enum GL_CLAMP_TO_BORDER)
      (define-enum GL_MULTISAMPLE)
      (define-enum GL_SAMPLE_ALPHA_TO_COVERAGE)
      (define-enum GL_SAMPLE_ALPHA_TO_ONE)
      (define-enum GL_SAMPLE_COVERAGE)
      (define-enum GL_SAMPLE_BUFFERS)
      (define-enum GL_SAMPLES)
      (define-enum GL_SAMPLE_COVERAGE_VALUE)
      (define-enum GL_SAMPLE_COVERAGE_INVERT)
      (define-enum GL_MULTISAMPLE_BIT)
      ))

;; Local variables:
;; mode: scheme
;; end:
