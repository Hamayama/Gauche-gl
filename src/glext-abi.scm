;; This file should reflect the newest OpenGL extension ABI
;; You can regenarate this by feeding glext.h to extract-abi.scm
;; To obtain the newest glext.h, see
;;   http://oss.sgi.com/projects/ogl-sample/ABI/

;; Extensions
(define-extension-name GL_VERSION_1_2)
(define-extension-name GL_ARB_imaging)
(define-extension-name GL_VERSION_1_3)
(define-extension-name GL_VERSION_1_4)
(define-extension-name GL_VERSION_1_5)
(define-extension-name GL_VERSION_2_0)
(define-extension-name GL_ARB_multitexture)
(define-extension-name GL_ARB_transpose_matrix)
(define-extension-name GL_ARB_multisample)
(define-extension-name GL_ARB_texture_env_add)
(define-extension-name GL_ARB_texture_cube_map)
(define-extension-name GL_ARB_texture_compression)
(define-extension-name GL_ARB_texture_border_clamp)
(define-extension-name GL_ARB_point_parameters)
(define-extension-name GL_ARB_vertex_blend)
(define-extension-name GL_ARB_matrix_palette)
(define-extension-name GL_ARB_texture_env_combine)
(define-extension-name GL_ARB_texture_env_crossbar)
(define-extension-name GL_ARB_texture_env_dot3)
(define-extension-name GL_ARB_texture_mirrored_repeat)
(define-extension-name GL_ARB_depth_texture)
(define-extension-name GL_ARB_shadow)
(define-extension-name GL_ARB_shadow_ambient)
(define-extension-name GL_ARB_window_pos)
(define-extension-name GL_ARB_vertex_program)
(define-extension-name GL_ARB_fragment_program)
(define-extension-name GL_ARB_vertex_buffer_object)
(define-extension-name GL_ARB_occlusion_query)
(define-extension-name GL_ARB_shader_objects)
(define-extension-name GL_ARB_vertex_shader)
(define-extension-name GL_ARB_fragment_shader)
(define-extension-name GL_ARB_shading_language_100)
(define-extension-name GL_ARB_texture_non_power_of_two)
(define-extension-name GL_ARB_point_sprite)
(define-extension-name GL_ARB_fragment_program_shadow)
(define-extension-name GL_ARB_draw_buffers)
(define-extension-name GL_ARB_texture_rectangle)
(define-extension-name GL_ARB_color_buffer_float)
(define-extension-name GL_ARB_half_float_pixel)
(define-extension-name GL_ARB_texture_float)
(define-extension-name GL_ARB_pixel_buffer_object)
(define-extension-name GL_EXT_abgr)
(define-extension-name GL_EXT_blend_color)
(define-extension-name GL_EXT_polygon_offset)
(define-extension-name GL_EXT_texture)
(define-extension-name GL_EXT_texture3D)
(define-extension-name GL_SGIS_texture_filter4)
(define-extension-name GL_EXT_subtexture)
(define-extension-name GL_EXT_copy_texture)
(define-extension-name GL_EXT_histogram)
(define-extension-name GL_EXT_convolution)
(define-extension-name GL_SGI_color_matrix)
(define-extension-name GL_SGI_color_table)
(define-extension-name GL_SGIS_pixel_texture)
(define-extension-name GL_SGIX_pixel_texture)
(define-extension-name GL_SGIS_texture4D)
(define-extension-name GL_SGI_texture_color_table)
(define-extension-name GL_EXT_cmyka)
(define-extension-name GL_EXT_texture_object)
(define-extension-name GL_SGIS_detail_texture)
(define-extension-name GL_SGIS_sharpen_texture)
(define-extension-name GL_EXT_packed_pixels)
(define-extension-name GL_SGIS_texture_lod)
(define-extension-name GL_SGIS_multisample)
(define-extension-name GL_EXT_rescale_normal)
(define-extension-name GL_EXT_vertex_array)
(define-extension-name GL_EXT_misc_attribute)
(define-extension-name GL_SGIS_generate_mipmap)
(define-extension-name GL_SGIX_clipmap)
(define-extension-name GL_SGIX_shadow)
(define-extension-name GL_SGIS_texture_edge_clamp)
(define-extension-name GL_SGIS_texture_border_clamp)
(define-extension-name GL_EXT_blend_minmax)
(define-extension-name GL_EXT_blend_subtract)
(define-extension-name GL_EXT_blend_logic_op)
(define-extension-name GL_SGIX_interlace)
(define-extension-name GL_SGIX_pixel_tiles)
(define-extension-name GL_SGIS_texture_select)
(define-extension-name GL_SGIX_sprite)
(define-extension-name GL_SGIX_texture_multi_buffer)
(define-extension-name GL_EXT_point_parameters)
(define-extension-name GL_SGIS_point_parameters)
(define-extension-name GL_SGIX_instruments)
(define-extension-name GL_SGIX_texture_scale_bias)
(define-extension-name GL_SGIX_framezoom)
(define-extension-name GL_SGIX_tag_sample_buffer)
(define-extension-name GL_FfdMaskSGIX)
(define-extension-name GL_SGIX_polynomial_ffd)
(define-extension-name GL_SGIX_reference_plane)
(define-extension-name GL_SGIX_flush_raster)
(define-extension-name GL_SGIX_depth_texture)
(define-extension-name GL_SGIS_fog_function)
(define-extension-name GL_SGIX_fog_offset)
(define-extension-name GL_HP_image_transform)
(define-extension-name GL_HP_convolution_border_modes)
(define-extension-name GL_INGR_palette_buffer)
(define-extension-name GL_SGIX_texture_add_env)
(define-extension-name GL_EXT_color_subtable)
(define-extension-name GL_PGI_vertex_hints)
(define-extension-name GL_PGI_misc_hints)
(define-extension-name GL_EXT_paletted_texture)
(define-extension-name GL_EXT_clip_volume_hint)
(define-extension-name GL_SGIX_list_priority)
(define-extension-name GL_SGIX_ir_instrument1)
(define-extension-name GL_SGIX_calligraphic_fragment)
(define-extension-name GL_SGIX_texture_lod_bias)
(define-extension-name GL_SGIX_shadow_ambient)
(define-extension-name GL_EXT_index_texture)
(define-extension-name GL_EXT_index_material)
(define-extension-name GL_EXT_index_func)
(define-extension-name GL_EXT_index_array_formats)
(define-extension-name GL_EXT_compiled_vertex_array)
(define-extension-name GL_EXT_cull_vertex)
(define-extension-name GL_SGIX_ycrcb)
(define-extension-name GL_SGIX_fragment_lighting)
(define-extension-name GL_IBM_rasterpos_clip)
(define-extension-name GL_HP_texture_lighting)
(define-extension-name GL_EXT_draw_range_elements)
(define-extension-name GL_WIN_phong_shading)
(define-extension-name GL_WIN_specular_fog)
(define-extension-name GL_EXT_light_texture)
(define-extension-name GL_SGIX_blend_alpha_minmax)
(define-extension-name GL_SGIX_impact_pixel_texture)
(define-extension-name GL_EXT_bgra)
(define-extension-name GL_SGIX_async)
(define-extension-name GL_SGIX_async_pixel)
(define-extension-name GL_SGIX_async_histogram)
(define-extension-name GL_INTEL_texture_scissor)
(define-extension-name GL_INTEL_parallel_arrays)
(define-extension-name GL_HP_occlusion_test)
(define-extension-name GL_EXT_pixel_transform)
(define-extension-name GL_EXT_pixel_transform_color_table)
(define-extension-name GL_EXT_shared_texture_palette)
(define-extension-name GL_EXT_separate_specular_color)
(define-extension-name GL_EXT_secondary_color)
(define-extension-name GL_EXT_texture_perturb_normal)
(define-extension-name GL_EXT_multi_draw_arrays)
(define-extension-name GL_EXT_fog_coord)
(define-extension-name GL_REND_screen_coordinates)
(define-extension-name GL_EXT_coordinate_frame)
(define-extension-name GL_EXT_texture_env_combine)
(define-extension-name GL_APPLE_specular_vector)
(define-extension-name GL_APPLE_transform_hint)
(define-extension-name GL_SGIX_fog_scale)
(define-extension-name GL_SUNX_constant_data)
(define-extension-name GL_SUN_global_alpha)
(define-extension-name GL_SUN_triangle_list)
(define-extension-name GL_SUN_vertex)
(define-extension-name GL_EXT_blend_func_separate)
(define-extension-name GL_INGR_color_clamp)
(define-extension-name GL_INGR_interlace_read)
(define-extension-name GL_EXT_stencil_wrap)
(define-extension-name GL_EXT_422_pixels)
(define-extension-name GL_NV_texgen_reflection)
(define-extension-name GL_EXT_texture_cube_map)
(define-extension-name GL_SUN_convolution_border_modes)
(define-extension-name GL_EXT_texture_env_add)
(define-extension-name GL_EXT_texture_lod_bias)
(define-extension-name GL_EXT_texture_filter_anisotropic)
(define-extension-name GL_EXT_vertex_weighting)
(define-extension-name GL_NV_light_max_exponent)
(define-extension-name GL_NV_vertex_array_range)
(define-extension-name GL_NV_register_combiners)
(define-extension-name GL_NV_fog_distance)
(define-extension-name GL_NV_texgen_emboss)
(define-extension-name GL_NV_blend_square)
(define-extension-name GL_NV_texture_env_combine4)
(define-extension-name GL_MESA_resize_buffers)
(define-extension-name GL_MESA_window_pos)
(define-extension-name GL_EXT_texture_compression_s3tc)
(define-extension-name GL_IBM_cull_vertex)
(define-extension-name GL_IBM_multimode_draw_arrays)
(define-extension-name GL_IBM_vertex_array_lists)
(define-extension-name GL_SGIX_subsample)
(define-extension-name GL_SGIX_ycrcb_subsample)
(define-extension-name GL_SGIX_ycrcba)
(define-extension-name GL_SGI_depth_pass_instrument)
(define-extension-name GL_3DFX_texture_compression_FXT1)
(define-extension-name GL_3DFX_multisample)
(define-extension-name GL_3DFX_tbuffer)
(define-extension-name GL_EXT_multisample)
(define-extension-name GL_SGIX_vertex_preclip)
(define-extension-name GL_SGIX_convolution_accuracy)
(define-extension-name GL_SGIX_resample)
(define-extension-name GL_SGIS_point_line_texgen)
(define-extension-name GL_SGIS_texture_color_mask)
(define-extension-name GL_EXT_texture_env_dot3)
(define-extension-name GL_ATI_texture_mirror_once)
(define-extension-name GL_NV_fence)
(define-extension-name GL_IBM_texture_mirrored_repeat)
(define-extension-name GL_NV_evaluators)
(define-extension-name GL_NV_packed_depth_stencil)
(define-extension-name GL_NV_register_combiners2)
(define-extension-name GL_NV_texture_compression_vtc)
(define-extension-name GL_NV_texture_rectangle)
(define-extension-name GL_NV_texture_shader)
(define-extension-name GL_NV_texture_shader2)
(define-extension-name GL_NV_vertex_array_range2)
(define-extension-name GL_NV_vertex_program)
(define-extension-name GL_SGIX_texture_coordinate_clamp)
(define-extension-name GL_SGIX_scalebias_hint)
(define-extension-name GL_OML_interlace)
(define-extension-name GL_OML_subsample)
(define-extension-name GL_OML_resample)
(define-extension-name GL_NV_copy_depth_to_color)
(define-extension-name GL_ATI_envmap_bumpmap)
(define-extension-name GL_ATI_fragment_shader)
(define-extension-name GL_ATI_pn_triangles)
(define-extension-name GL_ATI_vertex_array_object)
(define-extension-name GL_EXT_vertex_shader)
(define-extension-name GL_ATI_vertex_streams)
(define-extension-name GL_ATI_element_array)
(define-extension-name GL_SUN_mesh_array)
(define-extension-name GL_SUN_slice_accum)
(define-extension-name GL_NV_multisample_filter_hint)
(define-extension-name GL_NV_depth_clamp)
(define-extension-name GL_NV_occlusion_query)
(define-extension-name GL_NV_point_sprite)
(define-extension-name GL_NV_texture_shader3)
(define-extension-name GL_NV_vertex_program1_1)
(define-extension-name GL_EXT_shadow_funcs)
(define-extension-name GL_EXT_stencil_two_side)
(define-extension-name GL_ATI_text_fragment_shader)
(define-extension-name GL_APPLE_client_storage)
(define-extension-name GL_APPLE_element_array)
(define-extension-name GL_APPLE_fence)
(define-extension-name GL_APPLE_vertex_array_object)
(define-extension-name GL_APPLE_vertex_array_range)
(define-extension-name GL_APPLE_ycbcr_422)
(define-extension-name GL_S3_s3tc)
(define-extension-name GL_ATI_draw_buffers)
(define-extension-name GL_ATI_pixel_format_float)
(define-extension-name GL_ATI_texture_env_combine3)
(define-extension-name GL_ATI_texture_float)
(define-extension-name GL_NV_float_buffer)
(define-extension-name GL_NV_fragment_program)
(define-extension-name GL_NV_half_float)
(define-extension-name GL_NV_pixel_data_range)
(define-extension-name GL_NV_primitive_restart)
(define-extension-name GL_NV_texture_expand_normal)
(define-extension-name GL_NV_vertex_program2)
(define-extension-name GL_ATI_map_object_buffer)
(define-extension-name GL_ATI_separate_stencil)
(define-extension-name GL_ATI_vertex_attrib_array_object)
(define-extension-name GL_OES_read_format)
(define-extension-name GL_EXT_depth_bounds_test)
(define-extension-name GL_EXT_texture_mirror_clamp)
(define-extension-name GL_EXT_blend_equation_separate)
(define-extension-name GL_MESA_pack_invert)
(define-extension-name GL_MESA_ycbcr_texture)
(define-extension-name GL_EXT_pixel_buffer_object)
(define-extension-name GL_NV_fragment_program_option)
(define-extension-name GL_NV_fragment_program2)
(define-extension-name GL_NV_vertex_program2_option)
(define-extension-name GL_NV_vertex_program3)
(define-extension-name GL_EXT_framebuffer_object)
(define-extension-name GL_GREMEDY_string_marker)
(define-extension-name GL_EXT_color_matrix)
(define-extension-name GL_SGIX_texture_select)
(define-extension-name GL_INGR_blend_func_separate)
(define-extension-name GL_SGIX_depth_pass_instrument)
(define-extension-name GL_SGIX_igloo_interface)

;; Constants
(define-constant GL_FALSE #x0000)
(define-constant GL_TRUE #x0001)
(define-constant GL_BYTE #x1400)
(define-constant GL_UNSIGNED_BYTE #x1401)
(define-constant GL_SHORT #x1402)
(define-constant GL_UNSIGNED_SHORT #x1403)
(define-constant GL_INT #x1404)
(define-constant GL_UNSIGNED_INT #x1405)
(define-constant GL_FLOAT #x1406)
(define-constant GL_DOUBLE #x140a)
(define-constant GL_2_BYTES #x1407)
(define-constant GL_3_BYTES #x1408)
(define-constant GL_4_BYTES #x1409)
(define-constant GL_POINTS #x0000)
(define-constant GL_LINES #x0001)
(define-constant GL_LINE_LOOP #x0002)
(define-constant GL_LINE_STRIP #x0003)
(define-constant GL_TRIANGLES #x0004)
(define-constant GL_TRIANGLE_STRIP #x0005)
(define-constant GL_TRIANGLE_FAN #x0006)
(define-constant GL_QUADS #x0007)
(define-constant GL_QUAD_STRIP #x0008)
(define-constant GL_POLYGON #x0009)
(define-constant GL_VERTEX_ARRAY #x8074)
(define-constant GL_NORMAL_ARRAY #x8075)
(define-constant GL_COLOR_ARRAY #x8076)
(define-constant GL_INDEX_ARRAY #x8077)
(define-constant GL_TEXTURE_COORD_ARRAY #x8078)
(define-constant GL_EDGE_FLAG_ARRAY #x8079)
(define-constant GL_VERTEX_ARRAY_SIZE #x807a)
(define-constant GL_VERTEX_ARRAY_TYPE #x807b)
(define-constant GL_VERTEX_ARRAY_STRIDE #x807c)
(define-constant GL_NORMAL_ARRAY_TYPE #x807e)
(define-constant GL_NORMAL_ARRAY_STRIDE #x807f)
(define-constant GL_COLOR_ARRAY_SIZE #x8081)
(define-constant GL_COLOR_ARRAY_TYPE #x8082)
(define-constant GL_COLOR_ARRAY_STRIDE #x8083)
(define-constant GL_INDEX_ARRAY_TYPE #x8085)
(define-constant GL_INDEX_ARRAY_STRIDE #x8086)
(define-constant GL_TEXTURE_COORD_ARRAY_SIZE #x8088)
(define-constant GL_TEXTURE_COORD_ARRAY_TYPE #x8089)
(define-constant GL_TEXTURE_COORD_ARRAY_STRIDE #x808a)
(define-constant GL_EDGE_FLAG_ARRAY_STRIDE #x808c)
(define-constant GL_VERTEX_ARRAY_POINTER #x808e)
(define-constant GL_NORMAL_ARRAY_POINTER #x808f)
(define-constant GL_COLOR_ARRAY_POINTER #x8090)
(define-constant GL_INDEX_ARRAY_POINTER #x8091)
(define-constant GL_TEXTURE_COORD_ARRAY_POINTER #x8092)
(define-constant GL_EDGE_FLAG_ARRAY_POINTER #x8093)
(define-constant GL_V2F #x2a20)
(define-constant GL_V3F #x2a21)
(define-constant GL_C4UB_V2F #x2a22)
(define-constant GL_C4UB_V3F #x2a23)
(define-constant GL_C3F_V3F #x2a24)
(define-constant GL_N3F_V3F #x2a25)
(define-constant GL_C4F_N3F_V3F #x2a26)
(define-constant GL_T2F_V3F #x2a27)
(define-constant GL_T4F_V4F #x2a28)
(define-constant GL_T2F_C4UB_V3F #x2a29)
(define-constant GL_T2F_C3F_V3F #x2a2a)
(define-constant GL_T2F_N3F_V3F #x2a2b)
(define-constant GL_T2F_C4F_N3F_V3F #x2a2c)
(define-constant GL_T4F_C4F_N3F_V4F #x2a2d)
(define-constant GL_MATRIX_MODE #x0ba0)
(define-constant GL_MODELVIEW #x1700)
(define-constant GL_PROJECTION #x1701)
(define-constant GL_TEXTURE #x1702)
(define-constant GL_POINT_SMOOTH #x0b10)
(define-constant GL_POINT_SIZE #x0b11)
(define-constant GL_POINT_SIZE_GRANULARITY #x0b13)
(define-constant GL_POINT_SIZE_RANGE #x0b12)
(define-constant GL_LINE_SMOOTH #x0b20)
(define-constant GL_LINE_STIPPLE #x0b24)
(define-constant GL_LINE_STIPPLE_PATTERN #x0b25)
(define-constant GL_LINE_STIPPLE_REPEAT #x0b26)
(define-constant GL_LINE_WIDTH #x0b21)
(define-constant GL_LINE_WIDTH_GRANULARITY #x0b23)
(define-constant GL_LINE_WIDTH_RANGE #x0b22)
(define-constant GL_POINT #x1b00)
(define-constant GL_LINE #x1b01)
(define-constant GL_FILL #x1b02)
(define-constant GL_CW #x0900)
(define-constant GL_CCW #x0901)
(define-constant GL_FRONT #x0404)
(define-constant GL_BACK #x0405)
(define-constant GL_POLYGON_MODE #x0b40)
(define-constant GL_POLYGON_SMOOTH #x0b41)
(define-constant GL_POLYGON_STIPPLE #x0b42)
(define-constant GL_EDGE_FLAG #x0b43)
(define-constant GL_CULL_FACE #x0b44)
(define-constant GL_CULL_FACE_MODE #x0b45)
(define-constant GL_FRONT_FACE #x0b46)
(define-constant GL_POLYGON_OFFSET_FACTOR #x8038)
(define-constant GL_POLYGON_OFFSET_UNITS #x2a00)
(define-constant GL_POLYGON_OFFSET_POINT #x2a01)
(define-constant GL_POLYGON_OFFSET_LINE #x2a02)
(define-constant GL_POLYGON_OFFSET_FILL #x8037)
(define-constant GL_COMPILE #x1300)
(define-constant GL_COMPILE_AND_EXECUTE #x1301)
(define-constant GL_LIST_BASE #x0b32)
(define-constant GL_LIST_INDEX #x0b33)
(define-constant GL_LIST_MODE #x0b30)
(define-constant GL_NEVER #x0200)
(define-constant GL_LESS #x0201)
(define-constant GL_EQUAL #x0202)
(define-constant GL_LEQUAL #x0203)
(define-constant GL_GREATER #x0204)
(define-constant GL_NOTEQUAL #x0205)
(define-constant GL_GEQUAL #x0206)
(define-constant GL_ALWAYS #x0207)
(define-constant GL_DEPTH_TEST #x0b71)
(define-constant GL_DEPTH_BITS #x0d56)
(define-constant GL_DEPTH_CLEAR_VALUE #x0b73)
(define-constant GL_DEPTH_FUNC #x0b74)
(define-constant GL_DEPTH_RANGE #x0b70)
(define-constant GL_DEPTH_WRITEMASK #x0b72)
(define-constant GL_DEPTH_COMPONENT #x1902)
(define-constant GL_LIGHTING #x0b50)
(define-constant GL_LIGHT0 #x4000)
(define-constant GL_LIGHT1 #x4001)
(define-constant GL_LIGHT2 #x4002)
(define-constant GL_LIGHT3 #x4003)
(define-constant GL_LIGHT4 #x4004)
(define-constant GL_LIGHT5 #x4005)
(define-constant GL_LIGHT6 #x4006)
(define-constant GL_LIGHT7 #x4007)
(define-constant GL_SPOT_EXPONENT #x1205)
(define-constant GL_SPOT_CUTOFF #x1206)
(define-constant GL_CONSTANT_ATTENUATION #x1207)
(define-constant GL_LINEAR_ATTENUATION #x1208)
(define-constant GL_QUADRATIC_ATTENUATION #x1209)
(define-constant GL_AMBIENT #x1200)
(define-constant GL_DIFFUSE #x1201)
(define-constant GL_SPECULAR #x1202)
(define-constant GL_SHININESS #x1601)
(define-constant GL_EMISSION #x1600)
(define-constant GL_POSITION #x1203)
(define-constant GL_SPOT_DIRECTION #x1204)
(define-constant GL_AMBIENT_AND_DIFFUSE #x1602)
(define-constant GL_COLOR_INDEXES #x1603)
(define-constant GL_LIGHT_MODEL_TWO_SIDE #x0b52)
(define-constant GL_LIGHT_MODEL_LOCAL_VIEWER #x0b51)
(define-constant GL_LIGHT_MODEL_AMBIENT #x0b53)
(define-constant GL_FRONT_AND_BACK #x0408)
(define-constant GL_SHADE_MODEL #x0b54)
(define-constant GL_FLAT #x1d00)
(define-constant GL_SMOOTH #x1d01)
(define-constant GL_COLOR_MATERIAL #x0b57)
(define-constant GL_COLOR_MATERIAL_FACE #x0b55)
(define-constant GL_COLOR_MATERIAL_PARAMETER #x0b56)
(define-constant GL_NORMALIZE #x0ba1)
(define-constant GL_CLIP_PLANE0 #x3000)
(define-constant GL_CLIP_PLANE1 #x3001)
(define-constant GL_CLIP_PLANE2 #x3002)
(define-constant GL_CLIP_PLANE3 #x3003)
(define-constant GL_CLIP_PLANE4 #x3004)
(define-constant GL_CLIP_PLANE5 #x3005)
(define-constant GL_ACCUM_RED_BITS #x0d58)
(define-constant GL_ACCUM_GREEN_BITS #x0d59)
(define-constant GL_ACCUM_BLUE_BITS #x0d5a)
(define-constant GL_ACCUM_ALPHA_BITS #x0d5b)
(define-constant GL_ACCUM_CLEAR_VALUE #x0b80)
(define-constant GL_ACCUM #x0100)
(define-constant GL_ADD #x0104)
(define-constant GL_LOAD #x0101)
(define-constant GL_MULT #x0103)
(define-constant GL_RETURN #x0102)
(define-constant GL_ALPHA_TEST #x0bc0)
(define-constant GL_ALPHA_TEST_REF #x0bc2)
(define-constant GL_ALPHA_TEST_FUNC #x0bc1)
(define-constant GL_BLEND #x0be2)
(define-constant GL_BLEND_SRC #x0be1)
(define-constant GL_BLEND_DST #x0be0)
(define-constant GL_ZERO #x0000)
(define-constant GL_ONE #x0001)
(define-constant GL_SRC_COLOR #x0300)
(define-constant GL_ONE_MINUS_SRC_COLOR #x0301)
(define-constant GL_SRC_ALPHA #x0302)
(define-constant GL_ONE_MINUS_SRC_ALPHA #x0303)
(define-constant GL_DST_ALPHA #x0304)
(define-constant GL_ONE_MINUS_DST_ALPHA #x0305)
(define-constant GL_DST_COLOR #x0306)
(define-constant GL_ONE_MINUS_DST_COLOR #x0307)
(define-constant GL_SRC_ALPHA_SATURATE #x0308)
(define-constant GL_CONSTANT_COLOR #x8001)
(define-constant GL_ONE_MINUS_CONSTANT_COLOR #x8002)
(define-constant GL_CONSTANT_ALPHA #x8003)
(define-constant GL_ONE_MINUS_CONSTANT_ALPHA #x8004)
(define-constant GL_FEEDBACK #x1c01)
(define-constant GL_RENDER #x1c00)
(define-constant GL_SELECT #x1c02)
(define-constant GL_2D #x0600)
(define-constant GL_3D #x0601)
(define-constant GL_3D_COLOR #x0602)
(define-constant GL_3D_COLOR_TEXTURE #x0603)
(define-constant GL_4D_COLOR_TEXTURE #x0604)
(define-constant GL_POINT_TOKEN #x0701)
(define-constant GL_LINE_TOKEN #x0702)
(define-constant GL_LINE_RESET_TOKEN #x0707)
(define-constant GL_POLYGON_TOKEN #x0703)
(define-constant GL_BITMAP_TOKEN #x0704)
(define-constant GL_DRAW_PIXEL_TOKEN #x0705)
(define-constant GL_COPY_PIXEL_TOKEN #x0706)
(define-constant GL_PASS_THROUGH_TOKEN #x0700)
(define-constant GL_FEEDBACK_BUFFER_POINTER #x0df0)
(define-constant GL_FEEDBACK_BUFFER_SIZE #x0df1)
(define-constant GL_FEEDBACK_BUFFER_TYPE #x0df2)
(define-constant GL_SELECTION_BUFFER_POINTER #x0df3)
(define-constant GL_SELECTION_BUFFER_SIZE #x0df4)
(define-constant GL_FOG #x0b60)
(define-constant GL_FOG_MODE #x0b65)
(define-constant GL_FOG_DENSITY #x0b62)
(define-constant GL_FOG_COLOR #x0b66)
(define-constant GL_FOG_INDEX #x0b61)
(define-constant GL_FOG_START #x0b63)
(define-constant GL_FOG_END #x0b64)
(define-constant GL_LINEAR #x2601)
(define-constant GL_EXP #x0800)
(define-constant GL_EXP2 #x0801)
(define-constant GL_LOGIC_OP #x0bf1)
(define-constant GL_INDEX_LOGIC_OP #x0bf1)
(define-constant GL_COLOR_LOGIC_OP #x0bf2)
(define-constant GL_LOGIC_OP_MODE #x0bf0)
(define-constant GL_CLEAR #x1500)
(define-constant GL_SET #x150f)
(define-constant GL_COPY #x1503)
(define-constant GL_COPY_INVERTED #x150c)
(define-constant GL_NOOP #x1505)
(define-constant GL_INVERT #x150a)
(define-constant GL_AND #x1501)
(define-constant GL_NAND #x150e)
(define-constant GL_OR #x1507)
(define-constant GL_NOR #x1508)
(define-constant GL_XOR #x1506)
(define-constant GL_EQUIV #x1509)
(define-constant GL_AND_REVERSE #x1502)
(define-constant GL_AND_INVERTED #x1504)
(define-constant GL_OR_REVERSE #x150b)
(define-constant GL_OR_INVERTED #x150d)
(define-constant GL_STENCIL_TEST #x0b90)
(define-constant GL_STENCIL_WRITEMASK #x0b98)
(define-constant GL_STENCIL_BITS #x0d57)
(define-constant GL_STENCIL_FUNC #x0b92)
(define-constant GL_STENCIL_VALUE_MASK #x0b93)
(define-constant GL_STENCIL_REF #x0b97)
(define-constant GL_STENCIL_FAIL #x0b94)
(define-constant GL_STENCIL_PASS_DEPTH_PASS #x0b96)
(define-constant GL_STENCIL_PASS_DEPTH_FAIL #x0b95)
(define-constant GL_STENCIL_CLEAR_VALUE #x0b91)
(define-constant GL_STENCIL_INDEX #x1901)
(define-constant GL_KEEP #x1e00)
(define-constant GL_REPLACE #x1e01)
(define-constant GL_INCR #x1e02)
(define-constant GL_DECR #x1e03)
(define-constant GL_NONE #x0000)
(define-constant GL_LEFT #x0406)
(define-constant GL_RIGHT #x0407)
(define-constant GL_FRONT_LEFT #x0400)
(define-constant GL_FRONT_RIGHT #x0401)
(define-constant GL_BACK_LEFT #x0402)
(define-constant GL_BACK_RIGHT #x0403)
(define-constant GL_AUX0 #x0409)
(define-constant GL_AUX1 #x040a)
(define-constant GL_AUX2 #x040b)
(define-constant GL_AUX3 #x040c)
(define-constant GL_COLOR_INDEX #x1900)
(define-constant GL_RED #x1903)
(define-constant GL_GREEN #x1904)
(define-constant GL_BLUE #x1905)
(define-constant GL_ALPHA #x1906)
(define-constant GL_LUMINANCE #x1909)
(define-constant GL_LUMINANCE_ALPHA #x190a)
(define-constant GL_ALPHA_BITS #x0d55)
(define-constant GL_RED_BITS #x0d52)
(define-constant GL_GREEN_BITS #x0d53)
(define-constant GL_BLUE_BITS #x0d54)
(define-constant GL_INDEX_BITS #x0d51)
(define-constant GL_SUBPIXEL_BITS #x0d50)
(define-constant GL_AUX_BUFFERS #x0c00)
(define-constant GL_READ_BUFFER #x0c02)
(define-constant GL_DRAW_BUFFER #x0c01)
(define-constant GL_DOUBLEBUFFER #x0c32)
(define-constant GL_STEREO #x0c33)
(define-constant GL_BITMAP #x1a00)
(define-constant GL_COLOR #x1800)
(define-constant GL_DEPTH #x1801)
(define-constant GL_STENCIL #x1802)
(define-constant GL_DITHER #x0bd0)
(define-constant GL_RGB #x1907)
(define-constant GL_RGBA #x1908)
(define-constant GL_MAX_LIST_NESTING #x0b31)
(define-constant GL_MAX_ATTRIB_STACK_DEPTH #x0d35)
(define-constant GL_MAX_MODELVIEW_STACK_DEPTH #x0d36)
(define-constant GL_MAX_NAME_STACK_DEPTH #x0d37)
(define-constant GL_MAX_PROJECTION_STACK_DEPTH #x0d38)
(define-constant GL_MAX_TEXTURE_STACK_DEPTH #x0d39)
(define-constant GL_MAX_EVAL_ORDER #x0d30)
(define-constant GL_MAX_LIGHTS #x0d31)
(define-constant GL_MAX_CLIP_PLANES #x0d32)
(define-constant GL_MAX_TEXTURE_SIZE #x0d33)
(define-constant GL_MAX_PIXEL_MAP_TABLE #x0d34)
(define-constant GL_MAX_VIEWPORT_DIMS #x0d3a)
(define-constant GL_MAX_CLIENT_ATTRIB_STACK_DEPTH #x0d3b)
(define-constant GL_ATTRIB_STACK_DEPTH #x0bb0)
(define-constant GL_CLIENT_ATTRIB_STACK_DEPTH #x0bb1)
(define-constant GL_COLOR_CLEAR_VALUE #x0c22)
(define-constant GL_COLOR_WRITEMASK #x0c23)
(define-constant GL_CURRENT_INDEX #x0b01)
(define-constant GL_CURRENT_COLOR #x0b00)
(define-constant GL_CURRENT_NORMAL #x0b02)
(define-constant GL_CURRENT_RASTER_COLOR #x0b04)
(define-constant GL_CURRENT_RASTER_DISTANCE #x0b09)
(define-constant GL_CURRENT_RASTER_INDEX #x0b05)
(define-constant GL_CURRENT_RASTER_POSITION #x0b07)
(define-constant GL_CURRENT_RASTER_TEXTURE_COORDS #x0b06)
(define-constant GL_CURRENT_RASTER_POSITION_VALID #x0b08)
(define-constant GL_CURRENT_TEXTURE_COORDS #x0b03)
(define-constant GL_INDEX_CLEAR_VALUE #x0c20)
(define-constant GL_INDEX_MODE #x0c30)
(define-constant GL_INDEX_WRITEMASK #x0c21)
(define-constant GL_MODELVIEW_MATRIX #x0ba6)
(define-constant GL_MODELVIEW_STACK_DEPTH #x0ba3)
(define-constant GL_NAME_STACK_DEPTH #x0d70)
(define-constant GL_PROJECTION_MATRIX #x0ba7)
(define-constant GL_PROJECTION_STACK_DEPTH #x0ba4)
(define-constant GL_RENDER_MODE #x0c40)
(define-constant GL_RGBA_MODE #x0c31)
(define-constant GL_TEXTURE_MATRIX #x0ba8)
(define-constant GL_TEXTURE_STACK_DEPTH #x0ba5)
(define-constant GL_VIEWPORT #x0ba2)
(define-constant GL_AUTO_NORMAL #x0d80)
(define-constant GL_MAP1_COLOR_4 #x0d90)
(define-constant GL_MAP1_GRID_DOMAIN #x0dd0)
(define-constant GL_MAP1_GRID_SEGMENTS #x0dd1)
(define-constant GL_MAP1_INDEX #x0d91)
(define-constant GL_MAP1_NORMAL #x0d92)
(define-constant GL_MAP1_TEXTURE_COORD_1 #x0d93)
(define-constant GL_MAP1_TEXTURE_COORD_2 #x0d94)
(define-constant GL_MAP1_TEXTURE_COORD_3 #x0d95)
(define-constant GL_MAP1_TEXTURE_COORD_4 #x0d96)
(define-constant GL_MAP1_VERTEX_3 #x0d97)
(define-constant GL_MAP1_VERTEX_4 #x0d98)
(define-constant GL_MAP2_COLOR_4 #x0db0)
(define-constant GL_MAP2_GRID_DOMAIN #x0dd2)
(define-constant GL_MAP2_GRID_SEGMENTS #x0dd3)
(define-constant GL_MAP2_INDEX #x0db1)
(define-constant GL_MAP2_NORMAL #x0db2)
(define-constant GL_MAP2_TEXTURE_COORD_1 #x0db3)
(define-constant GL_MAP2_TEXTURE_COORD_2 #x0db4)
(define-constant GL_MAP2_TEXTURE_COORD_3 #x0db5)
(define-constant GL_MAP2_TEXTURE_COORD_4 #x0db6)
(define-constant GL_MAP2_VERTEX_3 #x0db7)
(define-constant GL_MAP2_VERTEX_4 #x0db8)
(define-constant GL_COEFF #x0a00)
(define-constant GL_DOMAIN #x0a02)
(define-constant GL_ORDER #x0a01)
(define-constant GL_FOG_HINT #x0c54)
(define-constant GL_LINE_SMOOTH_HINT #x0c52)
(define-constant GL_PERSPECTIVE_CORRECTION_HINT #x0c50)
(define-constant GL_POINT_SMOOTH_HINT #x0c51)
(define-constant GL_POLYGON_SMOOTH_HINT #x0c53)
(define-constant GL_DONT_CARE #x1100)
(define-constant GL_FASTEST #x1101)
(define-constant GL_NICEST #x1102)
(define-constant GL_SCISSOR_TEST #x0c11)
(define-constant GL_SCISSOR_BOX #x0c10)
(define-constant GL_MAP_COLOR #x0d10)
(define-constant GL_MAP_STENCIL #x0d11)
(define-constant GL_INDEX_SHIFT #x0d12)
(define-constant GL_INDEX_OFFSET #x0d13)
(define-constant GL_RED_SCALE #x0d14)
(define-constant GL_RED_BIAS #x0d15)
(define-constant GL_GREEN_SCALE #x0d18)
(define-constant GL_GREEN_BIAS #x0d19)
(define-constant GL_BLUE_SCALE #x0d1a)
(define-constant GL_BLUE_BIAS #x0d1b)
(define-constant GL_ALPHA_SCALE #x0d1c)
(define-constant GL_ALPHA_BIAS #x0d1d)
(define-constant GL_DEPTH_SCALE #x0d1e)
(define-constant GL_DEPTH_BIAS #x0d1f)
(define-constant GL_PIXEL_MAP_S_TO_S_SIZE #x0cb1)
(define-constant GL_PIXEL_MAP_I_TO_I_SIZE #x0cb0)
(define-constant GL_PIXEL_MAP_I_TO_R_SIZE #x0cb2)
(define-constant GL_PIXEL_MAP_I_TO_G_SIZE #x0cb3)
(define-constant GL_PIXEL_MAP_I_TO_B_SIZE #x0cb4)
(define-constant GL_PIXEL_MAP_I_TO_A_SIZE #x0cb5)
(define-constant GL_PIXEL_MAP_R_TO_R_SIZE #x0cb6)
(define-constant GL_PIXEL_MAP_G_TO_G_SIZE #x0cb7)
(define-constant GL_PIXEL_MAP_B_TO_B_SIZE #x0cb8)
(define-constant GL_PIXEL_MAP_A_TO_A_SIZE #x0cb9)
(define-constant GL_PIXEL_MAP_S_TO_S #x0c71)
(define-constant GL_PIXEL_MAP_I_TO_I #x0c70)
(define-constant GL_PIXEL_MAP_I_TO_R #x0c72)
(define-constant GL_PIXEL_MAP_I_TO_G #x0c73)
(define-constant GL_PIXEL_MAP_I_TO_B #x0c74)
(define-constant GL_PIXEL_MAP_I_TO_A #x0c75)
(define-constant GL_PIXEL_MAP_R_TO_R #x0c76)
(define-constant GL_PIXEL_MAP_G_TO_G #x0c77)
(define-constant GL_PIXEL_MAP_B_TO_B #x0c78)
(define-constant GL_PIXEL_MAP_A_TO_A #x0c79)
(define-constant GL_PACK_ALIGNMENT #x0d05)
(define-constant GL_PACK_LSB_FIRST #x0d01)
(define-constant GL_PACK_ROW_LENGTH #x0d02)
(define-constant GL_PACK_SKIP_PIXELS #x0d04)
(define-constant GL_PACK_SKIP_ROWS #x0d03)
(define-constant GL_PACK_SWAP_BYTES #x0d00)
(define-constant GL_UNPACK_ALIGNMENT #x0cf5)
(define-constant GL_UNPACK_LSB_FIRST #x0cf1)
(define-constant GL_UNPACK_ROW_LENGTH #x0cf2)
(define-constant GL_UNPACK_SKIP_PIXELS #x0cf4)
(define-constant GL_UNPACK_SKIP_ROWS #x0cf3)
(define-constant GL_UNPACK_SWAP_BYTES #x0cf0)
(define-constant GL_ZOOM_X #x0d16)
(define-constant GL_ZOOM_Y #x0d17)
(define-constant GL_TEXTURE_ENV #x2300)
(define-constant GL_TEXTURE_ENV_MODE #x2200)
(define-constant GL_TEXTURE_1D #x0de0)
(define-constant GL_TEXTURE_2D #x0de1)
(define-constant GL_TEXTURE_WRAP_S #x2802)
(define-constant GL_TEXTURE_WRAP_T #x2803)
(define-constant GL_TEXTURE_MAG_FILTER #x2800)
(define-constant GL_TEXTURE_MIN_FILTER #x2801)
(define-constant GL_TEXTURE_ENV_COLOR #x2201)
(define-constant GL_TEXTURE_GEN_S #x0c60)
(define-constant GL_TEXTURE_GEN_T #x0c61)
(define-constant GL_TEXTURE_GEN_MODE #x2500)
(define-constant GL_TEXTURE_BORDER_COLOR #x1004)
(define-constant GL_TEXTURE_WIDTH #x1000)
(define-constant GL_TEXTURE_HEIGHT #x1001)
(define-constant GL_TEXTURE_BORDER #x1005)
(define-constant GL_TEXTURE_COMPONENTS #x1003)
(define-constant GL_TEXTURE_RED_SIZE #x805c)
(define-constant GL_TEXTURE_GREEN_SIZE #x805d)
(define-constant GL_TEXTURE_BLUE_SIZE #x805e)
(define-constant GL_TEXTURE_ALPHA_SIZE #x805f)
(define-constant GL_TEXTURE_LUMINANCE_SIZE #x8060)
(define-constant GL_TEXTURE_INTENSITY_SIZE #x8061)
(define-constant GL_NEAREST_MIPMAP_NEAREST #x2700)
(define-constant GL_NEAREST_MIPMAP_LINEAR #x2702)
(define-constant GL_LINEAR_MIPMAP_NEAREST #x2701)
(define-constant GL_LINEAR_MIPMAP_LINEAR #x2703)
(define-constant GL_OBJECT_LINEAR #x2401)
(define-constant GL_OBJECT_PLANE #x2501)
(define-constant GL_EYE_LINEAR #x2400)
(define-constant GL_EYE_PLANE #x2502)
(define-constant GL_SPHERE_MAP #x2402)
(define-constant GL_DECAL #x2101)
(define-constant GL_MODULATE #x2100)
(define-constant GL_NEAREST #x2600)
(define-constant GL_REPEAT #x2901)
(define-constant GL_CLAMP #x2900)
(define-constant GL_S #x2000)
(define-constant GL_T #x2001)
(define-constant GL_R #x2002)
(define-constant GL_Q #x2003)
(define-constant GL_TEXTURE_GEN_R #x0c62)
(define-constant GL_TEXTURE_GEN_Q #x0c63)
(define-constant GL_VENDOR #x1f00)
(define-constant GL_RENDERER #x1f01)
(define-constant GL_VERSION #x1f02)
(define-constant GL_EXTENSIONS #x1f03)
(define-constant GL_NO_ERROR #x0000)
(define-constant GL_INVALID_VALUE #x0501)
(define-constant GL_INVALID_ENUM #x0500)
(define-constant GL_INVALID_OPERATION #x0502)
(define-constant GL_STACK_OVERFLOW #x0503)
(define-constant GL_STACK_UNDERFLOW #x0504)
(define-constant GL_OUT_OF_MEMORY #x0505)
(define-constant GL_CURRENT_BIT #x0001)
(define-constant GL_POINT_BIT #x0002)
(define-constant GL_LINE_BIT #x0004)
(define-constant GL_POLYGON_BIT #x0008)
(define-constant GL_POLYGON_STIPPLE_BIT #x0010)
(define-constant GL_PIXEL_MODE_BIT #x0020)
(define-constant GL_LIGHTING_BIT #x0040)
(define-constant GL_FOG_BIT #x0080)
(define-constant GL_DEPTH_BUFFER_BIT #x0100)
(define-constant GL_ACCUM_BUFFER_BIT #x0200)
(define-constant GL_STENCIL_BUFFER_BIT #x0400)
(define-constant GL_VIEWPORT_BIT #x0800)
(define-constant GL_TRANSFORM_BIT #x1000)
(define-constant GL_ENABLE_BIT #x2000)
(define-constant GL_COLOR_BUFFER_BIT #x4000)
(define-constant GL_HINT_BIT #x8000)
(define-constant GL_EVAL_BIT #x10000)
(define-constant GL_LIST_BIT #x20000)
(define-constant GL_TEXTURE_BIT #x40000)
(define-constant GL_SCISSOR_BIT #x80000)
(define-constant GL_ALL_ATTRIB_BITS #xfffff)
(define-constant GL_PROXY_TEXTURE_1D #x8063)
(define-constant GL_PROXY_TEXTURE_2D #x8064)
(define-constant GL_TEXTURE_PRIORITY #x8066)
(define-constant GL_TEXTURE_RESIDENT #x8067)
(define-constant GL_TEXTURE_BINDING_1D #x8068)
(define-constant GL_TEXTURE_BINDING_2D #x8069)
(define-constant GL_TEXTURE_INTERNAL_FORMAT #x1003)
(define-constant GL_ALPHA4 #x803b)
(define-constant GL_ALPHA8 #x803c)
(define-constant GL_ALPHA12 #x803d)
(define-constant GL_ALPHA16 #x803e)
(define-constant GL_LUMINANCE4 #x803f)
(define-constant GL_LUMINANCE8 #x8040)
(define-constant GL_LUMINANCE12 #x8041)
(define-constant GL_LUMINANCE16 #x8042)
(define-constant GL_LUMINANCE4_ALPHA4 #x8043)
(define-constant GL_LUMINANCE6_ALPHA2 #x8044)
(define-constant GL_LUMINANCE8_ALPHA8 #x8045)
(define-constant GL_LUMINANCE12_ALPHA4 #x8046)
(define-constant GL_LUMINANCE12_ALPHA12 #x8047)
(define-constant GL_LUMINANCE16_ALPHA16 #x8048)
(define-constant GL_INTENSITY #x8049)
(define-constant GL_INTENSITY4 #x804a)
(define-constant GL_INTENSITY8 #x804b)
(define-constant GL_INTENSITY12 #x804c)
(define-constant GL_INTENSITY16 #x804d)
(define-constant GL_R3_G3_B2 #x2a10)
(define-constant GL_RGB4 #x804f)
(define-constant GL_RGB5 #x8050)
(define-constant GL_RGB8 #x8051)
(define-constant GL_RGB10 #x8052)
(define-constant GL_RGB12 #x8053)
(define-constant GL_RGB16 #x8054)
(define-constant GL_RGBA2 #x8055)
(define-constant GL_RGBA4 #x8056)
(define-constant GL_RGB5_A1 #x8057)
(define-constant GL_RGBA8 #x8058)
(define-constant GL_RGB10_A2 #x8059)
(define-constant GL_RGBA12 #x805a)
(define-constant GL_RGBA16 #x805b)
(define-constant GL_CLIENT_PIXEL_STORE_BIT #x0001)
(define-constant GL_CLIENT_VERTEX_ARRAY_BIT #x0002)
(define-constant GL_ALL_CLIENT_ATTRIB_BITS #xffffffff)
(define-constant GL_CLIENT_ALL_ATTRIB_BITS #xffffffff)
(define-constant GL_GLEXT_VERSION #x001c)
(define-constant GL_UNSIGNED_BYTE_3_3_2 #x8032)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4 #x8033)
(define-constant GL_UNSIGNED_SHORT_5_5_5_1 #x8034)
(define-constant GL_UNSIGNED_INT_8_8_8_8 #x8035)
(define-constant GL_UNSIGNED_INT_10_10_10_2 #x8036)
(define-constant GL_RESCALE_NORMAL #x803a)
(define-constant GL_TEXTURE_BINDING_3D #x806a)
(define-constant GL_PACK_SKIP_IMAGES #x806b)
(define-constant GL_PACK_IMAGE_HEIGHT #x806c)
(define-constant GL_UNPACK_SKIP_IMAGES #x806d)
(define-constant GL_UNPACK_IMAGE_HEIGHT #x806e)
(define-constant GL_TEXTURE_3D #x806f)
(define-constant GL_PROXY_TEXTURE_3D #x8070)
(define-constant GL_TEXTURE_DEPTH #x8071)
(define-constant GL_TEXTURE_WRAP_R #x8072)
(define-constant GL_MAX_3D_TEXTURE_SIZE #x8073)
(define-constant GL_UNSIGNED_BYTE_2_3_3_REV #x8362)
(define-constant GL_UNSIGNED_SHORT_5_6_5 #x8363)
(define-constant GL_UNSIGNED_SHORT_5_6_5_REV #x8364)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4_REV #x8365)
(define-constant GL_UNSIGNED_SHORT_1_5_5_5_REV #x8366)
(define-constant GL_UNSIGNED_INT_8_8_8_8_REV #x8367)
(define-constant GL_UNSIGNED_INT_2_10_10_10_REV #x8368)
(define-constant GL_BGR #x80e0)
(define-constant GL_BGRA #x80e1)
(define-constant GL_MAX_ELEMENTS_VERTICES #x80e8)
(define-constant GL_MAX_ELEMENTS_INDICES #x80e9)
(define-constant GL_CLAMP_TO_EDGE #x812f)
(define-constant GL_TEXTURE_MIN_LOD #x813a)
(define-constant GL_TEXTURE_MAX_LOD #x813b)
(define-constant GL_TEXTURE_BASE_LEVEL #x813c)
(define-constant GL_TEXTURE_MAX_LEVEL #x813d)
(define-constant GL_LIGHT_MODEL_COLOR_CONTROL #x81f8)
(define-constant GL_SINGLE_COLOR #x81f9)
(define-constant GL_SEPARATE_SPECULAR_COLOR #x81fa)
(define-constant GL_SMOOTH_POINT_SIZE_RANGE #x0b12)
(define-constant GL_SMOOTH_POINT_SIZE_GRANULARITY #x0b13)
(define-constant GL_SMOOTH_LINE_WIDTH_RANGE #x0b22)
(define-constant GL_SMOOTH_LINE_WIDTH_GRANULARITY #x0b23)
(define-constant GL_ALIASED_POINT_SIZE_RANGE #x846d)
(define-constant GL_ALIASED_LINE_WIDTH_RANGE #x846e)
(define-constant GL_BLEND_COLOR #x8005)
(define-constant GL_FUNC_ADD #x8006)
(define-constant GL_MIN #x8007)
(define-constant GL_MAX #x8008)
(define-constant GL_BLEND_EQUATION #x8009)
(define-constant GL_FUNC_SUBTRACT #x800a)
(define-constant GL_FUNC_REVERSE_SUBTRACT #x800b)
(define-constant GL_CONVOLUTION_1D #x8010)
(define-constant GL_CONVOLUTION_2D #x8011)
(define-constant GL_SEPARABLE_2D #x8012)
(define-constant GL_CONVOLUTION_BORDER_MODE #x8013)
(define-constant GL_CONVOLUTION_FILTER_SCALE #x8014)
(define-constant GL_CONVOLUTION_FILTER_BIAS #x8015)
(define-constant GL_REDUCE #x8016)
(define-constant GL_CONVOLUTION_FORMAT #x8017)
(define-constant GL_CONVOLUTION_WIDTH #x8018)
(define-constant GL_CONVOLUTION_HEIGHT #x8019)
(define-constant GL_MAX_CONVOLUTION_WIDTH #x801a)
(define-constant GL_MAX_CONVOLUTION_HEIGHT #x801b)
(define-constant GL_POST_CONVOLUTION_RED_SCALE #x801c)
(define-constant GL_POST_CONVOLUTION_GREEN_SCALE #x801d)
(define-constant GL_POST_CONVOLUTION_BLUE_SCALE #x801e)
(define-constant GL_POST_CONVOLUTION_ALPHA_SCALE #x801f)
(define-constant GL_POST_CONVOLUTION_RED_BIAS #x8020)
(define-constant GL_POST_CONVOLUTION_GREEN_BIAS #x8021)
(define-constant GL_POST_CONVOLUTION_BLUE_BIAS #x8022)
(define-constant GL_POST_CONVOLUTION_ALPHA_BIAS #x8023)
(define-constant GL_HISTOGRAM #x8024)
(define-constant GL_PROXY_HISTOGRAM #x8025)
(define-constant GL_HISTOGRAM_WIDTH #x8026)
(define-constant GL_HISTOGRAM_FORMAT #x8027)
(define-constant GL_HISTOGRAM_RED_SIZE #x8028)
(define-constant GL_HISTOGRAM_GREEN_SIZE #x8029)
(define-constant GL_HISTOGRAM_BLUE_SIZE #x802a)
(define-constant GL_HISTOGRAM_ALPHA_SIZE #x802b)
(define-constant GL_HISTOGRAM_LUMINANCE_SIZE #x802c)
(define-constant GL_HISTOGRAM_SINK #x802d)
(define-constant GL_MINMAX #x802e)
(define-constant GL_MINMAX_FORMAT #x802f)
(define-constant GL_MINMAX_SINK #x8030)
(define-constant GL_TABLE_TOO_LARGE #x8031)
(define-constant GL_COLOR_MATRIX #x80b1)
(define-constant GL_COLOR_MATRIX_STACK_DEPTH #x80b2)
(define-constant GL_MAX_COLOR_MATRIX_STACK_DEPTH #x80b3)
(define-constant GL_POST_COLOR_MATRIX_RED_SCALE #x80b4)
(define-constant GL_POST_COLOR_MATRIX_GREEN_SCALE #x80b5)
(define-constant GL_POST_COLOR_MATRIX_BLUE_SCALE #x80b6)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_SCALE #x80b7)
(define-constant GL_POST_COLOR_MATRIX_RED_BIAS #x80b8)
(define-constant GL_POST_COLOR_MATRIX_GREEN_BIAS #x80b9)
(define-constant GL_POST_COLOR_MATRIX_BLUE_BIAS #x80ba)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_BIAS #x80bb)
(define-constant GL_COLOR_TABLE #x80d0)
(define-constant GL_POST_CONVOLUTION_COLOR_TABLE #x80d1)
(define-constant GL_POST_COLOR_MATRIX_COLOR_TABLE #x80d2)
(define-constant GL_PROXY_COLOR_TABLE #x80d3)
(define-constant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE #x80d4)
(define-constant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE #x80d5)
(define-constant GL_COLOR_TABLE_SCALE #x80d6)
(define-constant GL_COLOR_TABLE_BIAS #x80d7)
(define-constant GL_COLOR_TABLE_FORMAT #x80d8)
(define-constant GL_COLOR_TABLE_WIDTH #x80d9)
(define-constant GL_COLOR_TABLE_RED_SIZE #x80da)
(define-constant GL_COLOR_TABLE_GREEN_SIZE #x80db)
(define-constant GL_COLOR_TABLE_BLUE_SIZE #x80dc)
(define-constant GL_COLOR_TABLE_ALPHA_SIZE #x80dd)
(define-constant GL_COLOR_TABLE_LUMINANCE_SIZE #x80de)
(define-constant GL_COLOR_TABLE_INTENSITY_SIZE #x80df)
(define-constant GL_CONSTANT_BORDER #x8151)
(define-constant GL_REPLICATE_BORDER #x8153)
(define-constant GL_CONVOLUTION_BORDER_COLOR #x8154)
(define-constant GL_TEXTURE0 #x84c0)
(define-constant GL_TEXTURE1 #x84c1)
(define-constant GL_TEXTURE2 #x84c2)
(define-constant GL_TEXTURE3 #x84c3)
(define-constant GL_TEXTURE4 #x84c4)
(define-constant GL_TEXTURE5 #x84c5)
(define-constant GL_TEXTURE6 #x84c6)
(define-constant GL_TEXTURE7 #x84c7)
(define-constant GL_TEXTURE8 #x84c8)
(define-constant GL_TEXTURE9 #x84c9)
(define-constant GL_TEXTURE10 #x84ca)
(define-constant GL_TEXTURE11 #x84cb)
(define-constant GL_TEXTURE12 #x84cc)
(define-constant GL_TEXTURE13 #x84cd)
(define-constant GL_TEXTURE14 #x84ce)
(define-constant GL_TEXTURE15 #x84cf)
(define-constant GL_TEXTURE16 #x84d0)
(define-constant GL_TEXTURE17 #x84d1)
(define-constant GL_TEXTURE18 #x84d2)
(define-constant GL_TEXTURE19 #x84d3)
(define-constant GL_TEXTURE20 #x84d4)
(define-constant GL_TEXTURE21 #x84d5)
(define-constant GL_TEXTURE22 #x84d6)
(define-constant GL_TEXTURE23 #x84d7)
(define-constant GL_TEXTURE24 #x84d8)
(define-constant GL_TEXTURE25 #x84d9)
(define-constant GL_TEXTURE26 #x84da)
(define-constant GL_TEXTURE27 #x84db)
(define-constant GL_TEXTURE28 #x84dc)
(define-constant GL_TEXTURE29 #x84dd)
(define-constant GL_TEXTURE30 #x84de)
(define-constant GL_TEXTURE31 #x84df)
(define-constant GL_ACTIVE_TEXTURE #x84e0)
(define-constant GL_CLIENT_ACTIVE_TEXTURE #x84e1)
(define-constant GL_MAX_TEXTURE_UNITS #x84e2)
(define-constant GL_TRANSPOSE_MODELVIEW_MATRIX #x84e3)
(define-constant GL_TRANSPOSE_PROJECTION_MATRIX #x84e4)
(define-constant GL_TRANSPOSE_TEXTURE_MATRIX #x84e5)
(define-constant GL_TRANSPOSE_COLOR_MATRIX #x84e6)
(define-constant GL_MULTISAMPLE #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_COVERAGE #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE #x809f)
(define-constant GL_SAMPLE_COVERAGE #x80a0)
(define-constant GL_SAMPLE_BUFFERS #x80a8)
(define-constant GL_SAMPLES #x80a9)
(define-constant GL_SAMPLE_COVERAGE_VALUE #x80aa)
(define-constant GL_SAMPLE_COVERAGE_INVERT #x80ab)
(define-constant GL_MULTISAMPLE_BIT #x20000000)
(define-constant GL_NORMAL_MAP #x8511)
(define-constant GL_REFLECTION_MAP #x8512)
(define-constant GL_TEXTURE_CUBE_MAP #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE #x851c)
(define-constant GL_COMPRESSED_ALPHA #x84e9)
(define-constant GL_COMPRESSED_LUMINANCE #x84ea)
(define-constant GL_COMPRESSED_LUMINANCE_ALPHA #x84eb)
(define-constant GL_COMPRESSED_INTENSITY #x84ec)
(define-constant GL_COMPRESSED_RGB #x84ed)
(define-constant GL_COMPRESSED_RGBA #x84ee)
(define-constant GL_TEXTURE_COMPRESSION_HINT #x84ef)
(define-constant GL_TEXTURE_COMPRESSED_IMAGE_SIZE #x86a0)
(define-constant GL_TEXTURE_COMPRESSED #x86a1)
(define-constant GL_NUM_COMPRESSED_TEXTURE_FORMATS #x86a2)
(define-constant GL_COMPRESSED_TEXTURE_FORMATS #x86a3)
(define-constant GL_CLAMP_TO_BORDER #x812d)
(define-constant GL_COMBINE #x8570)
(define-constant GL_COMBINE_RGB #x8571)
(define-constant GL_COMBINE_ALPHA #x8572)
(define-constant GL_SOURCE0_RGB #x8580)
(define-constant GL_SOURCE1_RGB #x8581)
(define-constant GL_SOURCE2_RGB #x8582)
(define-constant GL_SOURCE0_ALPHA #x8588)
(define-constant GL_SOURCE1_ALPHA #x8589)
(define-constant GL_SOURCE2_ALPHA #x858a)
(define-constant GL_OPERAND0_RGB #x8590)
(define-constant GL_OPERAND1_RGB #x8591)
(define-constant GL_OPERAND2_RGB #x8592)
(define-constant GL_OPERAND0_ALPHA #x8598)
(define-constant GL_OPERAND1_ALPHA #x8599)
(define-constant GL_OPERAND2_ALPHA #x859a)
(define-constant GL_RGB_SCALE #x8573)
(define-constant GL_ADD_SIGNED #x8574)
(define-constant GL_INTERPOLATE #x8575)
(define-constant GL_SUBTRACT #x84e7)
(define-constant GL_CONSTANT #x8576)
(define-constant GL_PRIMARY_COLOR #x8577)
(define-constant GL_PREVIOUS #x8578)
(define-constant GL_DOT3_RGB #x86ae)
(define-constant GL_DOT3_RGBA #x86af)
(define-constant GL_BLEND_DST_RGB #x80c8)
(define-constant GL_BLEND_SRC_RGB #x80c9)
(define-constant GL_BLEND_DST_ALPHA #x80ca)
(define-constant GL_BLEND_SRC_ALPHA #x80cb)
(define-constant GL_POINT_SIZE_MIN #x8126)
(define-constant GL_POINT_SIZE_MAX #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE #x8128)
(define-constant GL_POINT_DISTANCE_ATTENUATION #x8129)
(define-constant GL_GENERATE_MIPMAP #x8191)
(define-constant GL_GENERATE_MIPMAP_HINT #x8192)
(define-constant GL_DEPTH_COMPONENT16 #x81a5)
(define-constant GL_DEPTH_COMPONENT24 #x81a6)
(define-constant GL_DEPTH_COMPONENT32 #x81a7)
(define-constant GL_MIRRORED_REPEAT #x8370)
(define-constant GL_FOG_COORDINATE_SOURCE #x8450)
(define-constant GL_FOG_COORDINATE #x8451)
(define-constant GL_FRAGMENT_DEPTH #x8452)
(define-constant GL_CURRENT_FOG_COORDINATE #x8453)
(define-constant GL_FOG_COORDINATE_ARRAY_TYPE #x8454)
(define-constant GL_FOG_COORDINATE_ARRAY_STRIDE #x8455)
(define-constant GL_FOG_COORDINATE_ARRAY_POINTER #x8456)
(define-constant GL_FOG_COORDINATE_ARRAY #x8457)
(define-constant GL_COLOR_SUM #x8458)
(define-constant GL_CURRENT_SECONDARY_COLOR #x8459)
(define-constant GL_SECONDARY_COLOR_ARRAY_SIZE #x845a)
(define-constant GL_SECONDARY_COLOR_ARRAY_TYPE #x845b)
(define-constant GL_SECONDARY_COLOR_ARRAY_STRIDE #x845c)
(define-constant GL_SECONDARY_COLOR_ARRAY_POINTER #x845d)
(define-constant GL_SECONDARY_COLOR_ARRAY #x845e)
(define-constant GL_MAX_TEXTURE_LOD_BIAS #x84fd)
(define-constant GL_TEXTURE_FILTER_CONTROL #x8500)
(define-constant GL_TEXTURE_LOD_BIAS #x8501)
(define-constant GL_INCR_WRAP #x8507)
(define-constant GL_DECR_WRAP #x8508)
(define-constant GL_TEXTURE_DEPTH_SIZE #x884a)
(define-constant GL_DEPTH_TEXTURE_MODE #x884b)
(define-constant GL_TEXTURE_COMPARE_MODE #x884c)
(define-constant GL_TEXTURE_COMPARE_FUNC #x884d)
(define-constant GL_COMPARE_R_TO_TEXTURE #x884e)
(define-constant GL_BUFFER_SIZE #x8764)
(define-constant GL_BUFFER_USAGE #x8765)
(define-constant GL_QUERY_COUNTER_BITS #x8864)
(define-constant GL_CURRENT_QUERY #x8865)
(define-constant GL_QUERY_RESULT #x8866)
(define-constant GL_QUERY_RESULT_AVAILABLE #x8867)
(define-constant GL_ARRAY_BUFFER #x8892)
(define-constant GL_ELEMENT_ARRAY_BUFFER #x8893)
(define-constant GL_ARRAY_BUFFER_BINDING #x8894)
(define-constant GL_ELEMENT_ARRAY_BUFFER_BINDING #x8895)
(define-constant GL_VERTEX_ARRAY_BUFFER_BINDING #x8896)
(define-constant GL_NORMAL_ARRAY_BUFFER_BINDING #x8897)
(define-constant GL_COLOR_ARRAY_BUFFER_BINDING #x8898)
(define-constant GL_INDEX_ARRAY_BUFFER_BINDING #x8899)
(define-constant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING #x889a)
(define-constant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING #x889b)
(define-constant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING #x889c)
(define-constant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING #x889d)
(define-constant GL_WEIGHT_ARRAY_BUFFER_BINDING #x889e)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING #x889f)
(define-constant GL_READ_ONLY #x88b8)
(define-constant GL_WRITE_ONLY #x88b9)
(define-constant GL_READ_WRITE #x88ba)
(define-constant GL_BUFFER_ACCESS #x88bb)
(define-constant GL_BUFFER_MAPPED #x88bc)
(define-constant GL_BUFFER_MAP_POINTER #x88bd)
(define-constant GL_STREAM_DRAW #x88e0)
(define-constant GL_STREAM_READ #x88e1)
(define-constant GL_STREAM_COPY #x88e2)
(define-constant GL_STATIC_DRAW #x88e4)
(define-constant GL_STATIC_READ #x88e5)
(define-constant GL_STATIC_COPY #x88e6)
(define-constant GL_DYNAMIC_DRAW #x88e8)
(define-constant GL_DYNAMIC_READ #x88e9)
(define-constant GL_DYNAMIC_COPY #x88ea)
(define-constant GL_SAMPLES_PASSED #x8914)
(define-constant GL_FOG_COORD_SRC #x8450)
(define-constant GL_FOG_COORD #x8451)
(define-constant GL_CURRENT_FOG_COORD #x8453)
(define-constant GL_FOG_COORD_ARRAY_TYPE #x8454)
(define-constant GL_FOG_COORD_ARRAY_STRIDE #x8455)
(define-constant GL_FOG_COORD_ARRAY_POINTER #x8456)
(define-constant GL_FOG_COORD_ARRAY #x8457)
(define-constant GL_FOG_COORD_ARRAY_BUFFER_BINDING #x889d)
(define-constant GL_SRC0_RGB #x8580)
(define-constant GL_SRC1_RGB #x8581)
(define-constant GL_SRC2_RGB #x8582)
(define-constant GL_SRC0_ALPHA #x8588)
(define-constant GL_SRC1_ALPHA #x8589)
(define-constant GL_SRC2_ALPHA #x858a)
(define-constant GL_BLEND_EQUATION_RGB #x8009)
(define-constant GL_VERTEX_ATTRIB_ARRAY_ENABLED #x8622)
(define-constant GL_VERTEX_ATTRIB_ARRAY_SIZE #x8623)
(define-constant GL_VERTEX_ATTRIB_ARRAY_STRIDE #x8624)
(define-constant GL_VERTEX_ATTRIB_ARRAY_TYPE #x8625)
(define-constant GL_CURRENT_VERTEX_ATTRIB #x8626)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE #x8642)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE #x8643)
(define-constant GL_VERTEX_ATTRIB_ARRAY_POINTER #x8645)
(define-constant GL_STENCIL_BACK_FUNC #x8800)
(define-constant GL_STENCIL_BACK_FAIL #x8801)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_FAIL #x8802)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_PASS #x8803)
(define-constant GL_MAX_DRAW_BUFFERS #x8824)
(define-constant GL_DRAW_BUFFER0 #x8825)
(define-constant GL_DRAW_BUFFER1 #x8826)
(define-constant GL_DRAW_BUFFER2 #x8827)
(define-constant GL_DRAW_BUFFER3 #x8828)
(define-constant GL_DRAW_BUFFER4 #x8829)
(define-constant GL_DRAW_BUFFER5 #x882a)
(define-constant GL_DRAW_BUFFER6 #x882b)
(define-constant GL_DRAW_BUFFER7 #x882c)
(define-constant GL_DRAW_BUFFER8 #x882d)
(define-constant GL_DRAW_BUFFER9 #x882e)
(define-constant GL_DRAW_BUFFER10 #x882f)
(define-constant GL_DRAW_BUFFER11 #x8830)
(define-constant GL_DRAW_BUFFER12 #x8831)
(define-constant GL_DRAW_BUFFER13 #x8832)
(define-constant GL_DRAW_BUFFER14 #x8833)
(define-constant GL_DRAW_BUFFER15 #x8834)
(define-constant GL_BLEND_EQUATION_ALPHA #x883d)
(define-constant GL_POINT_SPRITE #x8861)
(define-constant GL_COORD_REPLACE #x8862)
(define-constant GL_MAX_VERTEX_ATTRIBS #x8869)
(define-constant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED #x886a)
(define-constant GL_MAX_TEXTURE_COORDS #x8871)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS #x8872)
(define-constant GL_FRAGMENT_SHADER #x8b30)
(define-constant GL_VERTEX_SHADER #x8b31)
(define-constant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS #x8b49)
(define-constant GL_MAX_VERTEX_UNIFORM_COMPONENTS #x8b4a)
(define-constant GL_MAX_VARYING_FLOATS #x8b4b)
(define-constant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS #x8b4c)
(define-constant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS #x8b4d)
(define-constant GL_SHADER_TYPE #x8b4f)
(define-constant GL_FLOAT_VEC2 #x8b50)
(define-constant GL_FLOAT_VEC3 #x8b51)
(define-constant GL_FLOAT_VEC4 #x8b52)
(define-constant GL_INT_VEC2 #x8b53)
(define-constant GL_INT_VEC3 #x8b54)
(define-constant GL_INT_VEC4 #x8b55)
(define-constant GL_BOOL #x8b56)
(define-constant GL_BOOL_VEC2 #x8b57)
(define-constant GL_BOOL_VEC3 #x8b58)
(define-constant GL_BOOL_VEC4 #x8b59)
(define-constant GL_FLOAT_MAT2 #x8b5a)
(define-constant GL_FLOAT_MAT3 #x8b5b)
(define-constant GL_FLOAT_MAT4 #x8b5c)
(define-constant GL_SAMPLER_1D #x8b5d)
(define-constant GL_SAMPLER_2D #x8b5e)
(define-constant GL_SAMPLER_3D #x8b5f)
(define-constant GL_SAMPLER_CUBE #x8b60)
(define-constant GL_SAMPLER_1D_SHADOW #x8b61)
(define-constant GL_SAMPLER_2D_SHADOW #x8b62)
(define-constant GL_DELETE_STATUS #x8b80)
(define-constant GL_COMPILE_STATUS #x8b81)
(define-constant GL_LINK_STATUS #x8b82)
(define-constant GL_VALIDATE_STATUS #x8b83)
(define-constant GL_INFO_LOG_LENGTH #x8b84)
(define-constant GL_ATTACHED_SHADERS #x8b85)
(define-constant GL_ACTIVE_UNIFORMS #x8b86)
(define-constant GL_ACTIVE_UNIFORM_MAX_LENGTH #x8b87)
(define-constant GL_SHADER_SOURCE_LENGTH #x8b88)
(define-constant GL_ACTIVE_ATTRIBUTES #x8b89)
(define-constant GL_ACTIVE_ATTRIBUTE_MAX_LENGTH #x8b8a)
(define-constant GL_FRAGMENT_SHADER_DERIVATIVE_HINT #x8b8b)
(define-constant GL_SHADING_LANGUAGE_VERSION #x8b8c)
(define-constant GL_CURRENT_PROGRAM #x8b8d)
(define-constant GL_POINT_SPRITE_COORD_ORIGIN #x8ca0)
(define-constant GL_LOWER_LEFT #x8ca1)
(define-constant GL_UPPER_LEFT #x8ca2)
(define-constant GL_STENCIL_BACK_REF #x8ca3)
(define-constant GL_STENCIL_BACK_VALUE_MASK #x8ca4)
(define-constant GL_STENCIL_BACK_WRITEMASK #x8ca5)
(define-constant GL_TEXTURE0_ARB #x84c0)
(define-constant GL_TEXTURE1_ARB #x84c1)
(define-constant GL_TEXTURE2_ARB #x84c2)
(define-constant GL_TEXTURE3_ARB #x84c3)
(define-constant GL_TEXTURE4_ARB #x84c4)
(define-constant GL_TEXTURE5_ARB #x84c5)
(define-constant GL_TEXTURE6_ARB #x84c6)
(define-constant GL_TEXTURE7_ARB #x84c7)
(define-constant GL_TEXTURE8_ARB #x84c8)
(define-constant GL_TEXTURE9_ARB #x84c9)
(define-constant GL_TEXTURE10_ARB #x84ca)
(define-constant GL_TEXTURE11_ARB #x84cb)
(define-constant GL_TEXTURE12_ARB #x84cc)
(define-constant GL_TEXTURE13_ARB #x84cd)
(define-constant GL_TEXTURE14_ARB #x84ce)
(define-constant GL_TEXTURE15_ARB #x84cf)
(define-constant GL_TEXTURE16_ARB #x84d0)
(define-constant GL_TEXTURE17_ARB #x84d1)
(define-constant GL_TEXTURE18_ARB #x84d2)
(define-constant GL_TEXTURE19_ARB #x84d3)
(define-constant GL_TEXTURE20_ARB #x84d4)
(define-constant GL_TEXTURE21_ARB #x84d5)
(define-constant GL_TEXTURE22_ARB #x84d6)
(define-constant GL_TEXTURE23_ARB #x84d7)
(define-constant GL_TEXTURE24_ARB #x84d8)
(define-constant GL_TEXTURE25_ARB #x84d9)
(define-constant GL_TEXTURE26_ARB #x84da)
(define-constant GL_TEXTURE27_ARB #x84db)
(define-constant GL_TEXTURE28_ARB #x84dc)
(define-constant GL_TEXTURE29_ARB #x84dd)
(define-constant GL_TEXTURE30_ARB #x84de)
(define-constant GL_TEXTURE31_ARB #x84df)
(define-constant GL_ACTIVE_TEXTURE_ARB #x84e0)
(define-constant GL_CLIENT_ACTIVE_TEXTURE_ARB #x84e1)
(define-constant GL_MAX_TEXTURE_UNITS_ARB #x84e2)
(define-constant GL_TRANSPOSE_MODELVIEW_MATRIX_ARB #x84e3)
(define-constant GL_TRANSPOSE_PROJECTION_MATRIX_ARB #x84e4)
(define-constant GL_TRANSPOSE_TEXTURE_MATRIX_ARB #x84e5)
(define-constant GL_TRANSPOSE_COLOR_MATRIX_ARB #x84e6)
(define-constant GL_MULTISAMPLE_ARB #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_COVERAGE_ARB #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_ARB #x809f)
(define-constant GL_SAMPLE_COVERAGE_ARB #x80a0)
(define-constant GL_SAMPLE_BUFFERS_ARB #x80a8)
(define-constant GL_SAMPLES_ARB #x80a9)
(define-constant GL_SAMPLE_COVERAGE_VALUE_ARB #x80aa)
(define-constant GL_SAMPLE_COVERAGE_INVERT_ARB #x80ab)
(define-constant GL_MULTISAMPLE_BIT_ARB #x20000000)
(define-constant GL_NORMAL_MAP_ARB #x8511)
(define-constant GL_REFLECTION_MAP_ARB #x8512)
(define-constant GL_TEXTURE_CUBE_MAP_ARB #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_ARB #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_ARB #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB #x851c)
(define-constant GL_COMPRESSED_ALPHA_ARB #x84e9)
(define-constant GL_COMPRESSED_LUMINANCE_ARB #x84ea)
(define-constant GL_COMPRESSED_LUMINANCE_ALPHA_ARB #x84eb)
(define-constant GL_COMPRESSED_INTENSITY_ARB #x84ec)
(define-constant GL_COMPRESSED_RGB_ARB #x84ed)
(define-constant GL_COMPRESSED_RGBA_ARB #x84ee)
(define-constant GL_TEXTURE_COMPRESSION_HINT_ARB #x84ef)
(define-constant GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB #x86a0)
(define-constant GL_TEXTURE_COMPRESSED_ARB #x86a1)
(define-constant GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB #x86a2)
(define-constant GL_COMPRESSED_TEXTURE_FORMATS_ARB #x86a3)
(define-constant GL_CLAMP_TO_BORDER_ARB #x812d)
(define-constant GL_POINT_SIZE_MIN_ARB #x8126)
(define-constant GL_POINT_SIZE_MAX_ARB #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_ARB #x8128)
(define-constant GL_POINT_DISTANCE_ATTENUATION_ARB #x8129)
(define-constant GL_MAX_VERTEX_UNITS_ARB #x86a4)
(define-constant GL_ACTIVE_VERTEX_UNITS_ARB #x86a5)
(define-constant GL_WEIGHT_SUM_UNITY_ARB #x86a6)
(define-constant GL_VERTEX_BLEND_ARB #x86a7)
(define-constant GL_CURRENT_WEIGHT_ARB #x86a8)
(define-constant GL_WEIGHT_ARRAY_TYPE_ARB #x86a9)
(define-constant GL_WEIGHT_ARRAY_STRIDE_ARB #x86aa)
(define-constant GL_WEIGHT_ARRAY_SIZE_ARB #x86ab)
(define-constant GL_WEIGHT_ARRAY_POINTER_ARB #x86ac)
(define-constant GL_WEIGHT_ARRAY_ARB #x86ad)
(define-constant GL_MODELVIEW0_ARB #x1700)
(define-constant GL_MODELVIEW1_ARB #x850a)
(define-constant GL_MODELVIEW2_ARB #x8722)
(define-constant GL_MODELVIEW3_ARB #x8723)
(define-constant GL_MODELVIEW4_ARB #x8724)
(define-constant GL_MODELVIEW5_ARB #x8725)
(define-constant GL_MODELVIEW6_ARB #x8726)
(define-constant GL_MODELVIEW7_ARB #x8727)
(define-constant GL_MODELVIEW8_ARB #x8728)
(define-constant GL_MODELVIEW9_ARB #x8729)
(define-constant GL_MODELVIEW10_ARB #x872a)
(define-constant GL_MODELVIEW11_ARB #x872b)
(define-constant GL_MODELVIEW12_ARB #x872c)
(define-constant GL_MODELVIEW13_ARB #x872d)
(define-constant GL_MODELVIEW14_ARB #x872e)
(define-constant GL_MODELVIEW15_ARB #x872f)
(define-constant GL_MODELVIEW16_ARB #x8730)
(define-constant GL_MODELVIEW17_ARB #x8731)
(define-constant GL_MODELVIEW18_ARB #x8732)
(define-constant GL_MODELVIEW19_ARB #x8733)
(define-constant GL_MODELVIEW20_ARB #x8734)
(define-constant GL_MODELVIEW21_ARB #x8735)
(define-constant GL_MODELVIEW22_ARB #x8736)
(define-constant GL_MODELVIEW23_ARB #x8737)
(define-constant GL_MODELVIEW24_ARB #x8738)
(define-constant GL_MODELVIEW25_ARB #x8739)
(define-constant GL_MODELVIEW26_ARB #x873a)
(define-constant GL_MODELVIEW27_ARB #x873b)
(define-constant GL_MODELVIEW28_ARB #x873c)
(define-constant GL_MODELVIEW29_ARB #x873d)
(define-constant GL_MODELVIEW30_ARB #x873e)
(define-constant GL_MODELVIEW31_ARB #x873f)
(define-constant GL_MATRIX_PALETTE_ARB #x8840)
(define-constant GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB #x8841)
(define-constant GL_MAX_PALETTE_MATRICES_ARB #x8842)
(define-constant GL_CURRENT_PALETTE_MATRIX_ARB #x8843)
(define-constant GL_MATRIX_INDEX_ARRAY_ARB #x8844)
(define-constant GL_CURRENT_MATRIX_INDEX_ARB #x8845)
(define-constant GL_MATRIX_INDEX_ARRAY_SIZE_ARB #x8846)
(define-constant GL_MATRIX_INDEX_ARRAY_TYPE_ARB #x8847)
(define-constant GL_MATRIX_INDEX_ARRAY_STRIDE_ARB #x8848)
(define-constant GL_MATRIX_INDEX_ARRAY_POINTER_ARB #x8849)
(define-constant GL_COMBINE_ARB #x8570)
(define-constant GL_COMBINE_RGB_ARB #x8571)
(define-constant GL_COMBINE_ALPHA_ARB #x8572)
(define-constant GL_SOURCE0_RGB_ARB #x8580)
(define-constant GL_SOURCE1_RGB_ARB #x8581)
(define-constant GL_SOURCE2_RGB_ARB #x8582)
(define-constant GL_SOURCE0_ALPHA_ARB #x8588)
(define-constant GL_SOURCE1_ALPHA_ARB #x8589)
(define-constant GL_SOURCE2_ALPHA_ARB #x858a)
(define-constant GL_OPERAND0_RGB_ARB #x8590)
(define-constant GL_OPERAND1_RGB_ARB #x8591)
(define-constant GL_OPERAND2_RGB_ARB #x8592)
(define-constant GL_OPERAND0_ALPHA_ARB #x8598)
(define-constant GL_OPERAND1_ALPHA_ARB #x8599)
(define-constant GL_OPERAND2_ALPHA_ARB #x859a)
(define-constant GL_RGB_SCALE_ARB #x8573)
(define-constant GL_ADD_SIGNED_ARB #x8574)
(define-constant GL_INTERPOLATE_ARB #x8575)
(define-constant GL_SUBTRACT_ARB #x84e7)
(define-constant GL_CONSTANT_ARB #x8576)
(define-constant GL_PRIMARY_COLOR_ARB #x8577)
(define-constant GL_PREVIOUS_ARB #x8578)
(define-constant GL_DOT3_RGB_ARB #x86ae)
(define-constant GL_DOT3_RGBA_ARB #x86af)
(define-constant GL_MIRRORED_REPEAT_ARB #x8370)
(define-constant GL_DEPTH_COMPONENT16_ARB #x81a5)
(define-constant GL_DEPTH_COMPONENT24_ARB #x81a6)
(define-constant GL_DEPTH_COMPONENT32_ARB #x81a7)
(define-constant GL_TEXTURE_DEPTH_SIZE_ARB #x884a)
(define-constant GL_DEPTH_TEXTURE_MODE_ARB #x884b)
(define-constant GL_TEXTURE_COMPARE_MODE_ARB #x884c)
(define-constant GL_TEXTURE_COMPARE_FUNC_ARB #x884d)
(define-constant GL_COMPARE_R_TO_TEXTURE_ARB #x884e)
(define-constant GL_TEXTURE_COMPARE_FAIL_VALUE_ARB #x80bf)
(define-constant GL_COLOR_SUM_ARB #x8458)
(define-constant GL_VERTEX_PROGRAM_ARB #x8620)
(define-constant GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB #x8622)
(define-constant GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB #x8623)
(define-constant GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB #x8624)
(define-constant GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB #x8625)
(define-constant GL_CURRENT_VERTEX_ATTRIB_ARB #x8626)
(define-constant GL_PROGRAM_LENGTH_ARB #x8627)
(define-constant GL_PROGRAM_STRING_ARB #x8628)
(define-constant GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB #x862e)
(define-constant GL_MAX_PROGRAM_MATRICES_ARB #x862f)
(define-constant GL_CURRENT_MATRIX_STACK_DEPTH_ARB #x8640)
(define-constant GL_CURRENT_MATRIX_ARB #x8641)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE_ARB #x8642)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE_ARB #x8643)
(define-constant GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB #x8645)
(define-constant GL_PROGRAM_ERROR_POSITION_ARB #x864b)
(define-constant GL_PROGRAM_BINDING_ARB #x8677)
(define-constant GL_MAX_VERTEX_ATTRIBS_ARB #x8869)
(define-constant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB #x886a)
(define-constant GL_PROGRAM_ERROR_STRING_ARB #x8874)
(define-constant GL_PROGRAM_FORMAT_ASCII_ARB #x8875)
(define-constant GL_PROGRAM_FORMAT_ARB #x8876)
(define-constant GL_PROGRAM_INSTRUCTIONS_ARB #x88a0)
(define-constant GL_MAX_PROGRAM_INSTRUCTIONS_ARB #x88a1)
(define-constant GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB #x88a2)
(define-constant GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB #x88a3)
(define-constant GL_PROGRAM_TEMPORARIES_ARB #x88a4)
(define-constant GL_MAX_PROGRAM_TEMPORARIES_ARB #x88a5)
(define-constant GL_PROGRAM_NATIVE_TEMPORARIES_ARB #x88a6)
(define-constant GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB #x88a7)
(define-constant GL_PROGRAM_PARAMETERS_ARB #x88a8)
(define-constant GL_MAX_PROGRAM_PARAMETERS_ARB #x88a9)
(define-constant GL_PROGRAM_NATIVE_PARAMETERS_ARB #x88aa)
(define-constant GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB #x88ab)
(define-constant GL_PROGRAM_ATTRIBS_ARB #x88ac)
(define-constant GL_MAX_PROGRAM_ATTRIBS_ARB #x88ad)
(define-constant GL_PROGRAM_NATIVE_ATTRIBS_ARB #x88ae)
(define-constant GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB #x88af)
(define-constant GL_PROGRAM_ADDRESS_REGISTERS_ARB #x88b0)
(define-constant GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB #x88b1)
(define-constant GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB #x88b2)
(define-constant GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB #x88b3)
(define-constant GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB #x88b4)
(define-constant GL_MAX_PROGRAM_ENV_PARAMETERS_ARB #x88b5)
(define-constant GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB #x88b6)
(define-constant GL_TRANSPOSE_CURRENT_MATRIX_ARB #x88b7)
(define-constant GL_MATRIX0_ARB #x88c0)
(define-constant GL_MATRIX1_ARB #x88c1)
(define-constant GL_MATRIX2_ARB #x88c2)
(define-constant GL_MATRIX3_ARB #x88c3)
(define-constant GL_MATRIX4_ARB #x88c4)
(define-constant GL_MATRIX5_ARB #x88c5)
(define-constant GL_MATRIX6_ARB #x88c6)
(define-constant GL_MATRIX7_ARB #x88c7)
(define-constant GL_MATRIX8_ARB #x88c8)
(define-constant GL_MATRIX9_ARB #x88c9)
(define-constant GL_MATRIX10_ARB #x88ca)
(define-constant GL_MATRIX11_ARB #x88cb)
(define-constant GL_MATRIX12_ARB #x88cc)
(define-constant GL_MATRIX13_ARB #x88cd)
(define-constant GL_MATRIX14_ARB #x88ce)
(define-constant GL_MATRIX15_ARB #x88cf)
(define-constant GL_MATRIX16_ARB #x88d0)
(define-constant GL_MATRIX17_ARB #x88d1)
(define-constant GL_MATRIX18_ARB #x88d2)
(define-constant GL_MATRIX19_ARB #x88d3)
(define-constant GL_MATRIX20_ARB #x88d4)
(define-constant GL_MATRIX21_ARB #x88d5)
(define-constant GL_MATRIX22_ARB #x88d6)
(define-constant GL_MATRIX23_ARB #x88d7)
(define-constant GL_MATRIX24_ARB #x88d8)
(define-constant GL_MATRIX25_ARB #x88d9)
(define-constant GL_MATRIX26_ARB #x88da)
(define-constant GL_MATRIX27_ARB #x88db)
(define-constant GL_MATRIX28_ARB #x88dc)
(define-constant GL_MATRIX29_ARB #x88dd)
(define-constant GL_MATRIX30_ARB #x88de)
(define-constant GL_MATRIX31_ARB #x88df)
(define-constant GL_FRAGMENT_PROGRAM_ARB #x8804)
(define-constant GL_PROGRAM_ALU_INSTRUCTIONS_ARB #x8805)
(define-constant GL_PROGRAM_TEX_INSTRUCTIONS_ARB #x8806)
(define-constant GL_PROGRAM_TEX_INDIRECTIONS_ARB #x8807)
(define-constant GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB #x8808)
(define-constant GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB #x8809)
(define-constant GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB #x880a)
(define-constant GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB #x880b)
(define-constant GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB #x880c)
(define-constant GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB #x880d)
(define-constant GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB #x880e)
(define-constant GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB #x880f)
(define-constant GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB #x8810)
(define-constant GL_MAX_TEXTURE_COORDS_ARB #x8871)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS_ARB #x8872)
(define-constant GL_BUFFER_SIZE_ARB #x8764)
(define-constant GL_BUFFER_USAGE_ARB #x8765)
(define-constant GL_ARRAY_BUFFER_ARB #x8892)
(define-constant GL_ELEMENT_ARRAY_BUFFER_ARB #x8893)
(define-constant GL_ARRAY_BUFFER_BINDING_ARB #x8894)
(define-constant GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB #x8895)
(define-constant GL_VERTEX_ARRAY_BUFFER_BINDING_ARB #x8896)
(define-constant GL_NORMAL_ARRAY_BUFFER_BINDING_ARB #x8897)
(define-constant GL_COLOR_ARRAY_BUFFER_BINDING_ARB #x8898)
(define-constant GL_INDEX_ARRAY_BUFFER_BINDING_ARB #x8899)
(define-constant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB #x889a)
(define-constant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB #x889b)
(define-constant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB #x889c)
(define-constant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB #x889d)
(define-constant GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB #x889e)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB #x889f)
(define-constant GL_READ_ONLY_ARB #x88b8)
(define-constant GL_WRITE_ONLY_ARB #x88b9)
(define-constant GL_READ_WRITE_ARB #x88ba)
(define-constant GL_BUFFER_ACCESS_ARB #x88bb)
(define-constant GL_BUFFER_MAPPED_ARB #x88bc)
(define-constant GL_BUFFER_MAP_POINTER_ARB #x88bd)
(define-constant GL_STREAM_DRAW_ARB #x88e0)
(define-constant GL_STREAM_READ_ARB #x88e1)
(define-constant GL_STREAM_COPY_ARB #x88e2)
(define-constant GL_STATIC_DRAW_ARB #x88e4)
(define-constant GL_STATIC_READ_ARB #x88e5)
(define-constant GL_STATIC_COPY_ARB #x88e6)
(define-constant GL_DYNAMIC_DRAW_ARB #x88e8)
(define-constant GL_DYNAMIC_READ_ARB #x88e9)
(define-constant GL_DYNAMIC_COPY_ARB #x88ea)
(define-constant GL_QUERY_COUNTER_BITS_ARB #x8864)
(define-constant GL_CURRENT_QUERY_ARB #x8865)
(define-constant GL_QUERY_RESULT_ARB #x8866)
(define-constant GL_QUERY_RESULT_AVAILABLE_ARB #x8867)
(define-constant GL_SAMPLES_PASSED_ARB #x8914)
(define-constant GL_PROGRAM_OBJECT_ARB #x8b40)
(define-constant GL_SHADER_OBJECT_ARB #x8b48)
(define-constant GL_OBJECT_TYPE_ARB #x8b4e)
(define-constant GL_OBJECT_SUBTYPE_ARB #x8b4f)
(define-constant GL_FLOAT_VEC2_ARB #x8b50)
(define-constant GL_FLOAT_VEC3_ARB #x8b51)
(define-constant GL_FLOAT_VEC4_ARB #x8b52)
(define-constant GL_INT_VEC2_ARB #x8b53)
(define-constant GL_INT_VEC3_ARB #x8b54)
(define-constant GL_INT_VEC4_ARB #x8b55)
(define-constant GL_BOOL_ARB #x8b56)
(define-constant GL_BOOL_VEC2_ARB #x8b57)
(define-constant GL_BOOL_VEC3_ARB #x8b58)
(define-constant GL_BOOL_VEC4_ARB #x8b59)
(define-constant GL_FLOAT_MAT2_ARB #x8b5a)
(define-constant GL_FLOAT_MAT3_ARB #x8b5b)
(define-constant GL_FLOAT_MAT4_ARB #x8b5c)
(define-constant GL_SAMPLER_1D_ARB #x8b5d)
(define-constant GL_SAMPLER_2D_ARB #x8b5e)
(define-constant GL_SAMPLER_3D_ARB #x8b5f)
(define-constant GL_SAMPLER_CUBE_ARB #x8b60)
(define-constant GL_SAMPLER_1D_SHADOW_ARB #x8b61)
(define-constant GL_SAMPLER_2D_SHADOW_ARB #x8b62)
(define-constant GL_SAMPLER_2D_RECT_ARB #x8b63)
(define-constant GL_SAMPLER_2D_RECT_SHADOW_ARB #x8b64)
(define-constant GL_OBJECT_DELETE_STATUS_ARB #x8b80)
(define-constant GL_OBJECT_COMPILE_STATUS_ARB #x8b81)
(define-constant GL_OBJECT_LINK_STATUS_ARB #x8b82)
(define-constant GL_OBJECT_VALIDATE_STATUS_ARB #x8b83)
(define-constant GL_OBJECT_INFO_LOG_LENGTH_ARB #x8b84)
(define-constant GL_OBJECT_ATTACHED_OBJECTS_ARB #x8b85)
(define-constant GL_OBJECT_ACTIVE_UNIFORMS_ARB #x8b86)
(define-constant GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB #x8b87)
(define-constant GL_OBJECT_SHADER_SOURCE_LENGTH_ARB #x8b88)
(define-constant GL_VERTEX_SHADER_ARB #x8b31)
(define-constant GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB #x8b4a)
(define-constant GL_MAX_VARYING_FLOATS_ARB #x8b4b)
(define-constant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB #x8b4c)
(define-constant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB #x8b4d)
(define-constant GL_OBJECT_ACTIVE_ATTRIBUTES_ARB #x8b89)
(define-constant GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB #x8b8a)
(define-constant GL_FRAGMENT_SHADER_ARB #x8b30)
(define-constant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB #x8b49)
(define-constant GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB #x8b8b)
(define-constant GL_SHADING_LANGUAGE_VERSION_ARB #x8b8c)
(define-constant GL_POINT_SPRITE_ARB #x8861)
(define-constant GL_COORD_REPLACE_ARB #x8862)
(define-constant GL_MAX_DRAW_BUFFERS_ARB #x8824)
(define-constant GL_DRAW_BUFFER0_ARB #x8825)
(define-constant GL_DRAW_BUFFER1_ARB #x8826)
(define-constant GL_DRAW_BUFFER2_ARB #x8827)
(define-constant GL_DRAW_BUFFER3_ARB #x8828)
(define-constant GL_DRAW_BUFFER4_ARB #x8829)
(define-constant GL_DRAW_BUFFER5_ARB #x882a)
(define-constant GL_DRAW_BUFFER6_ARB #x882b)
(define-constant GL_DRAW_BUFFER7_ARB #x882c)
(define-constant GL_DRAW_BUFFER8_ARB #x882d)
(define-constant GL_DRAW_BUFFER9_ARB #x882e)
(define-constant GL_DRAW_BUFFER10_ARB #x882f)
(define-constant GL_DRAW_BUFFER11_ARB #x8830)
(define-constant GL_DRAW_BUFFER12_ARB #x8831)
(define-constant GL_DRAW_BUFFER13_ARB #x8832)
(define-constant GL_DRAW_BUFFER14_ARB #x8833)
(define-constant GL_DRAW_BUFFER15_ARB #x8834)
(define-constant GL_TEXTURE_RECTANGLE_ARB #x84f5)
(define-constant GL_TEXTURE_BINDING_RECTANGLE_ARB #x84f6)
(define-constant GL_PROXY_TEXTURE_RECTANGLE_ARB #x84f7)
(define-constant GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB #x84f8)
(define-constant GL_RGBA_FLOAT_MODE_ARB #x8820)
(define-constant GL_CLAMP_VERTEX_COLOR_ARB #x891a)
(define-constant GL_CLAMP_FRAGMENT_COLOR_ARB #x891b)
(define-constant GL_CLAMP_READ_COLOR_ARB #x891c)
(define-constant GL_FIXED_ONLY_ARB #x891d)
(define-constant GL_HALF_FLOAT_ARB #x140b)
(define-constant GL_TEXTURE_RED_TYPE_ARB #x8c10)
(define-constant GL_TEXTURE_GREEN_TYPE_ARB #x8c11)
(define-constant GL_TEXTURE_BLUE_TYPE_ARB #x8c12)
(define-constant GL_TEXTURE_ALPHA_TYPE_ARB #x8c13)
(define-constant GL_TEXTURE_LUMINANCE_TYPE_ARB #x8c14)
(define-constant GL_TEXTURE_INTENSITY_TYPE_ARB #x8c15)
(define-constant GL_TEXTURE_DEPTH_TYPE_ARB #x8c16)
(define-constant GL_UNSIGNED_NORMALIZED_ARB #x8c17)
(define-constant GL_RGBA32F_ARB #x8814)
(define-constant GL_RGB32F_ARB #x8815)
(define-constant GL_ALPHA32F_ARB #x8816)
(define-constant GL_INTENSITY32F_ARB #x8817)
(define-constant GL_LUMINANCE32F_ARB #x8818)
(define-constant GL_LUMINANCE_ALPHA32F_ARB #x8819)
(define-constant GL_RGBA16F_ARB #x881a)
(define-constant GL_RGB16F_ARB #x881b)
(define-constant GL_ALPHA16F_ARB #x881c)
(define-constant GL_INTENSITY16F_ARB #x881d)
(define-constant GL_LUMINANCE16F_ARB #x881e)
(define-constant GL_LUMINANCE_ALPHA16F_ARB #x881f)
(define-constant GL_PIXEL_PACK_BUFFER_ARB #x88eb)
(define-constant GL_PIXEL_UNPACK_BUFFER_ARB #x88ec)
(define-constant GL_PIXEL_PACK_BUFFER_BINDING_ARB #x88ed)
(define-constant GL_PIXEL_UNPACK_BUFFER_BINDING_ARB #x88ef)
(define-constant GL_ABGR_EXT #x8000)
(define-constant GL_CONSTANT_COLOR_EXT #x8001)
(define-constant GL_ONE_MINUS_CONSTANT_COLOR_EXT #x8002)
(define-constant GL_CONSTANT_ALPHA_EXT #x8003)
(define-constant GL_ONE_MINUS_CONSTANT_ALPHA_EXT #x8004)
(define-constant GL_BLEND_COLOR_EXT #x8005)
(define-constant GL_POLYGON_OFFSET_EXT #x8037)
(define-constant GL_POLYGON_OFFSET_FACTOR_EXT #x8038)
(define-constant GL_POLYGON_OFFSET_BIAS_EXT #x8039)
(define-constant GL_ALPHA4_EXT #x803b)
(define-constant GL_ALPHA8_EXT #x803c)
(define-constant GL_ALPHA12_EXT #x803d)
(define-constant GL_ALPHA16_EXT #x803e)
(define-constant GL_LUMINANCE4_EXT #x803f)
(define-constant GL_LUMINANCE8_EXT #x8040)
(define-constant GL_LUMINANCE12_EXT #x8041)
(define-constant GL_LUMINANCE16_EXT #x8042)
(define-constant GL_LUMINANCE4_ALPHA4_EXT #x8043)
(define-constant GL_LUMINANCE6_ALPHA2_EXT #x8044)
(define-constant GL_LUMINANCE8_ALPHA8_EXT #x8045)
(define-constant GL_LUMINANCE12_ALPHA4_EXT #x8046)
(define-constant GL_LUMINANCE12_ALPHA12_EXT #x8047)
(define-constant GL_LUMINANCE16_ALPHA16_EXT #x8048)
(define-constant GL_INTENSITY_EXT #x8049)
(define-constant GL_INTENSITY4_EXT #x804a)
(define-constant GL_INTENSITY8_EXT #x804b)
(define-constant GL_INTENSITY12_EXT #x804c)
(define-constant GL_INTENSITY16_EXT #x804d)
(define-constant GL_RGB2_EXT #x804e)
(define-constant GL_RGB4_EXT #x804f)
(define-constant GL_RGB5_EXT #x8050)
(define-constant GL_RGB8_EXT #x8051)
(define-constant GL_RGB10_EXT #x8052)
(define-constant GL_RGB12_EXT #x8053)
(define-constant GL_RGB16_EXT #x8054)
(define-constant GL_RGBA2_EXT #x8055)
(define-constant GL_RGBA4_EXT #x8056)
(define-constant GL_RGB5_A1_EXT #x8057)
(define-constant GL_RGBA8_EXT #x8058)
(define-constant GL_RGB10_A2_EXT #x8059)
(define-constant GL_RGBA12_EXT #x805a)
(define-constant GL_RGBA16_EXT #x805b)
(define-constant GL_TEXTURE_RED_SIZE_EXT #x805c)
(define-constant GL_TEXTURE_GREEN_SIZE_EXT #x805d)
(define-constant GL_TEXTURE_BLUE_SIZE_EXT #x805e)
(define-constant GL_TEXTURE_ALPHA_SIZE_EXT #x805f)
(define-constant GL_TEXTURE_LUMINANCE_SIZE_EXT #x8060)
(define-constant GL_TEXTURE_INTENSITY_SIZE_EXT #x8061)
(define-constant GL_REPLACE_EXT #x8062)
(define-constant GL_PROXY_TEXTURE_1D_EXT #x8063)
(define-constant GL_PROXY_TEXTURE_2D_EXT #x8064)
(define-constant GL_TEXTURE_TOO_LARGE_EXT #x8065)
(define-constant GL_PACK_SKIP_IMAGES_EXT #x806b)
(define-constant GL_PACK_IMAGE_HEIGHT_EXT #x806c)
(define-constant GL_UNPACK_SKIP_IMAGES_EXT #x806d)
(define-constant GL_UNPACK_IMAGE_HEIGHT_EXT #x806e)
(define-constant GL_TEXTURE_3D_EXT #x806f)
(define-constant GL_PROXY_TEXTURE_3D_EXT #x8070)
(define-constant GL_TEXTURE_DEPTH_EXT #x8071)
(define-constant GL_TEXTURE_WRAP_R_EXT #x8072)
(define-constant GL_MAX_3D_TEXTURE_SIZE_EXT #x8073)
(define-constant GL_FILTER4_SGIS #x8146)
(define-constant GL_TEXTURE_FILTER4_SIZE_SGIS #x8147)
(define-constant GL_HISTOGRAM_EXT #x8024)
(define-constant GL_PROXY_HISTOGRAM_EXT #x8025)
(define-constant GL_HISTOGRAM_WIDTH_EXT #x8026)
(define-constant GL_HISTOGRAM_FORMAT_EXT #x8027)
(define-constant GL_HISTOGRAM_RED_SIZE_EXT #x8028)
(define-constant GL_HISTOGRAM_GREEN_SIZE_EXT #x8029)
(define-constant GL_HISTOGRAM_BLUE_SIZE_EXT #x802a)
(define-constant GL_HISTOGRAM_ALPHA_SIZE_EXT #x802b)
(define-constant GL_HISTOGRAM_LUMINANCE_SIZE_EXT #x802c)
(define-constant GL_HISTOGRAM_SINK_EXT #x802d)
(define-constant GL_MINMAX_EXT #x802e)
(define-constant GL_MINMAX_FORMAT_EXT #x802f)
(define-constant GL_MINMAX_SINK_EXT #x8030)
(define-constant GL_TABLE_TOO_LARGE_EXT #x8031)
(define-constant GL_CONVOLUTION_1D_EXT #x8010)
(define-constant GL_CONVOLUTION_2D_EXT #x8011)
(define-constant GL_SEPARABLE_2D_EXT #x8012)
(define-constant GL_CONVOLUTION_BORDER_MODE_EXT #x8013)
(define-constant GL_CONVOLUTION_FILTER_SCALE_EXT #x8014)
(define-constant GL_CONVOLUTION_FILTER_BIAS_EXT #x8015)
(define-constant GL_REDUCE_EXT #x8016)
(define-constant GL_CONVOLUTION_FORMAT_EXT #x8017)
(define-constant GL_CONVOLUTION_WIDTH_EXT #x8018)
(define-constant GL_CONVOLUTION_HEIGHT_EXT #x8019)
(define-constant GL_MAX_CONVOLUTION_WIDTH_EXT #x801a)
(define-constant GL_MAX_CONVOLUTION_HEIGHT_EXT #x801b)
(define-constant GL_POST_CONVOLUTION_RED_SCALE_EXT #x801c)
(define-constant GL_POST_CONVOLUTION_GREEN_SCALE_EXT #x801d)
(define-constant GL_POST_CONVOLUTION_BLUE_SCALE_EXT #x801e)
(define-constant GL_POST_CONVOLUTION_ALPHA_SCALE_EXT #x801f)
(define-constant GL_POST_CONVOLUTION_RED_BIAS_EXT #x8020)
(define-constant GL_POST_CONVOLUTION_GREEN_BIAS_EXT #x8021)
(define-constant GL_POST_CONVOLUTION_BLUE_BIAS_EXT #x8022)
(define-constant GL_POST_CONVOLUTION_ALPHA_BIAS_EXT #x8023)
(define-constant GL_COLOR_MATRIX_SGI #x80b1)
(define-constant GL_COLOR_MATRIX_STACK_DEPTH_SGI #x80b2)
(define-constant GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI #x80b3)
(define-constant GL_POST_COLOR_MATRIX_RED_SCALE_SGI #x80b4)
(define-constant GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI #x80b5)
(define-constant GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI #x80b6)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI #x80b7)
(define-constant GL_POST_COLOR_MATRIX_RED_BIAS_SGI #x80b8)
(define-constant GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI #x80b9)
(define-constant GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI #x80ba)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI #x80bb)
(define-constant GL_COLOR_TABLE_SGI #x80d0)
(define-constant GL_POST_CONVOLUTION_COLOR_TABLE_SGI #x80d1)
(define-constant GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI #x80d2)
(define-constant GL_PROXY_COLOR_TABLE_SGI #x80d3)
(define-constant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI #x80d4)
(define-constant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI #x80d5)
(define-constant GL_COLOR_TABLE_SCALE_SGI #x80d6)
(define-constant GL_COLOR_TABLE_BIAS_SGI #x80d7)
(define-constant GL_COLOR_TABLE_FORMAT_SGI #x80d8)
(define-constant GL_COLOR_TABLE_WIDTH_SGI #x80d9)
(define-constant GL_COLOR_TABLE_RED_SIZE_SGI #x80da)
(define-constant GL_COLOR_TABLE_GREEN_SIZE_SGI #x80db)
(define-constant GL_COLOR_TABLE_BLUE_SIZE_SGI #x80dc)
(define-constant GL_COLOR_TABLE_ALPHA_SIZE_SGI #x80dd)
(define-constant GL_COLOR_TABLE_LUMINANCE_SIZE_SGI #x80de)
(define-constant GL_COLOR_TABLE_INTENSITY_SIZE_SGI #x80df)
(define-constant GL_PIXEL_TEXTURE_SGIS #x8353)
(define-constant GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS #x8354)
(define-constant GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS #x8355)
(define-constant GL_PIXEL_GROUP_COLOR_SGIS #x8356)
(define-constant GL_PIXEL_TEX_GEN_SGIX #x8139)
(define-constant GL_PIXEL_TEX_GEN_MODE_SGIX #x832b)
(define-constant GL_PACK_SKIP_VOLUMES_SGIS #x8130)
(define-constant GL_PACK_IMAGE_DEPTH_SGIS #x8131)
(define-constant GL_UNPACK_SKIP_VOLUMES_SGIS #x8132)
(define-constant GL_UNPACK_IMAGE_DEPTH_SGIS #x8133)
(define-constant GL_TEXTURE_4D_SGIS #x8134)
(define-constant GL_PROXY_TEXTURE_4D_SGIS #x8135)
(define-constant GL_TEXTURE_4DSIZE_SGIS #x8136)
(define-constant GL_TEXTURE_WRAP_Q_SGIS #x8137)
(define-constant GL_MAX_4D_TEXTURE_SIZE_SGIS #x8138)
(define-constant GL_TEXTURE_4D_BINDING_SGIS #x814f)
(define-constant GL_TEXTURE_COLOR_TABLE_SGI #x80bc)
(define-constant GL_PROXY_TEXTURE_COLOR_TABLE_SGI #x80bd)
(define-constant GL_CMYK_EXT #x800c)
(define-constant GL_CMYKA_EXT #x800d)
(define-constant GL_PACK_CMYK_HINT_EXT #x800e)
(define-constant GL_UNPACK_CMYK_HINT_EXT #x800f)
(define-constant GL_TEXTURE_PRIORITY_EXT #x8066)
(define-constant GL_TEXTURE_RESIDENT_EXT #x8067)
(define-constant GL_TEXTURE_1D_BINDING_EXT #x8068)
(define-constant GL_TEXTURE_2D_BINDING_EXT #x8069)
(define-constant GL_TEXTURE_3D_BINDING_EXT #x806a)
(define-constant GL_DETAIL_TEXTURE_2D_SGIS #x8095)
(define-constant GL_DETAIL_TEXTURE_2D_BINDING_SGIS #x8096)
(define-constant GL_LINEAR_DETAIL_SGIS #x8097)
(define-constant GL_LINEAR_DETAIL_ALPHA_SGIS #x8098)
(define-constant GL_LINEAR_DETAIL_COLOR_SGIS #x8099)
(define-constant GL_DETAIL_TEXTURE_LEVEL_SGIS #x809a)
(define-constant GL_DETAIL_TEXTURE_MODE_SGIS #x809b)
(define-constant GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS #x809c)
(define-constant GL_LINEAR_SHARPEN_SGIS #x80ad)
(define-constant GL_LINEAR_SHARPEN_ALPHA_SGIS #x80ae)
(define-constant GL_LINEAR_SHARPEN_COLOR_SGIS #x80af)
(define-constant GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS #x80b0)
(define-constant GL_UNSIGNED_BYTE_3_3_2_EXT #x8032)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4_EXT #x8033)
(define-constant GL_UNSIGNED_SHORT_5_5_5_1_EXT #x8034)
(define-constant GL_UNSIGNED_INT_8_8_8_8_EXT #x8035)
(define-constant GL_UNSIGNED_INT_10_10_10_2_EXT #x8036)
(define-constant GL_TEXTURE_MIN_LOD_SGIS #x813a)
(define-constant GL_TEXTURE_MAX_LOD_SGIS #x813b)
(define-constant GL_TEXTURE_BASE_LEVEL_SGIS #x813c)
(define-constant GL_TEXTURE_MAX_LEVEL_SGIS #x813d)
(define-constant GL_MULTISAMPLE_SGIS #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_MASK_SGIS #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_SGIS #x809f)
(define-constant GL_SAMPLE_MASK_SGIS #x80a0)
(define-constant GL_1PASS_SGIS #x80a1)
(define-constant GL_2PASS_0_SGIS #x80a2)
(define-constant GL_2PASS_1_SGIS #x80a3)
(define-constant GL_4PASS_0_SGIS #x80a4)
(define-constant GL_4PASS_1_SGIS #x80a5)
(define-constant GL_4PASS_2_SGIS #x80a6)
(define-constant GL_4PASS_3_SGIS #x80a7)
(define-constant GL_SAMPLE_BUFFERS_SGIS #x80a8)
(define-constant GL_SAMPLES_SGIS #x80a9)
(define-constant GL_SAMPLE_MASK_VALUE_SGIS #x80aa)
(define-constant GL_SAMPLE_MASK_INVERT_SGIS #x80ab)
(define-constant GL_SAMPLE_PATTERN_SGIS #x80ac)
(define-constant GL_RESCALE_NORMAL_EXT #x803a)
(define-constant GL_VERTEX_ARRAY_EXT #x8074)
(define-constant GL_NORMAL_ARRAY_EXT #x8075)
(define-constant GL_COLOR_ARRAY_EXT #x8076)
(define-constant GL_INDEX_ARRAY_EXT #x8077)
(define-constant GL_TEXTURE_COORD_ARRAY_EXT #x8078)
(define-constant GL_EDGE_FLAG_ARRAY_EXT #x8079)
(define-constant GL_VERTEX_ARRAY_SIZE_EXT #x807a)
(define-constant GL_VERTEX_ARRAY_TYPE_EXT #x807b)
(define-constant GL_VERTEX_ARRAY_STRIDE_EXT #x807c)
(define-constant GL_VERTEX_ARRAY_COUNT_EXT #x807d)
(define-constant GL_NORMAL_ARRAY_TYPE_EXT #x807e)
(define-constant GL_NORMAL_ARRAY_STRIDE_EXT #x807f)
(define-constant GL_NORMAL_ARRAY_COUNT_EXT #x8080)
(define-constant GL_COLOR_ARRAY_SIZE_EXT #x8081)
(define-constant GL_COLOR_ARRAY_TYPE_EXT #x8082)
(define-constant GL_COLOR_ARRAY_STRIDE_EXT #x8083)
(define-constant GL_COLOR_ARRAY_COUNT_EXT #x8084)
(define-constant GL_INDEX_ARRAY_TYPE_EXT #x8085)
(define-constant GL_INDEX_ARRAY_STRIDE_EXT #x8086)
(define-constant GL_INDEX_ARRAY_COUNT_EXT #x8087)
(define-constant GL_TEXTURE_COORD_ARRAY_SIZE_EXT #x8088)
(define-constant GL_TEXTURE_COORD_ARRAY_TYPE_EXT #x8089)
(define-constant GL_TEXTURE_COORD_ARRAY_STRIDE_EXT #x808a)
(define-constant GL_TEXTURE_COORD_ARRAY_COUNT_EXT #x808b)
(define-constant GL_EDGE_FLAG_ARRAY_STRIDE_EXT #x808c)
(define-constant GL_EDGE_FLAG_ARRAY_COUNT_EXT #x808d)
(define-constant GL_VERTEX_ARRAY_POINTER_EXT #x808e)
(define-constant GL_NORMAL_ARRAY_POINTER_EXT #x808f)
(define-constant GL_COLOR_ARRAY_POINTER_EXT #x8090)
(define-constant GL_INDEX_ARRAY_POINTER_EXT #x8091)
(define-constant GL_TEXTURE_COORD_ARRAY_POINTER_EXT #x8092)
(define-constant GL_EDGE_FLAG_ARRAY_POINTER_EXT #x8093)
(define-constant GL_GENERATE_MIPMAP_SGIS #x8191)
(define-constant GL_GENERATE_MIPMAP_HINT_SGIS #x8192)
(define-constant GL_LINEAR_CLIPMAP_LINEAR_SGIX #x8170)
(define-constant GL_TEXTURE_CLIPMAP_CENTER_SGIX #x8171)
(define-constant GL_TEXTURE_CLIPMAP_FRAME_SGIX #x8172)
(define-constant GL_TEXTURE_CLIPMAP_OFFSET_SGIX #x8173)
(define-constant GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX #x8174)
(define-constant GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX #x8175)
(define-constant GL_TEXTURE_CLIPMAP_DEPTH_SGIX #x8176)
(define-constant GL_MAX_CLIPMAP_DEPTH_SGIX #x8177)
(define-constant GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX #x8178)
(define-constant GL_NEAREST_CLIPMAP_NEAREST_SGIX #x844d)
(define-constant GL_NEAREST_CLIPMAP_LINEAR_SGIX #x844e)
(define-constant GL_LINEAR_CLIPMAP_NEAREST_SGIX #x844f)
(define-constant GL_TEXTURE_COMPARE_SGIX #x819a)
(define-constant GL_TEXTURE_COMPARE_OPERATOR_SGIX #x819b)
(define-constant GL_TEXTURE_LEQUAL_R_SGIX #x819c)
(define-constant GL_TEXTURE_GEQUAL_R_SGIX #x819d)
(define-constant GL_CLAMP_TO_EDGE_SGIS #x812f)
(define-constant GL_CLAMP_TO_BORDER_SGIS #x812d)
(define-constant GL_FUNC_ADD_EXT #x8006)
(define-constant GL_MIN_EXT #x8007)
(define-constant GL_MAX_EXT #x8008)
(define-constant GL_BLEND_EQUATION_EXT #x8009)
(define-constant GL_FUNC_SUBTRACT_EXT #x800a)
(define-constant GL_FUNC_REVERSE_SUBTRACT_EXT #x800b)
(define-constant GL_INTERLACE_SGIX #x8094)
(define-constant GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX #x813e)
(define-constant GL_PIXEL_TILE_CACHE_INCREMENT_SGIX #x813f)
(define-constant GL_PIXEL_TILE_WIDTH_SGIX #x8140)
(define-constant GL_PIXEL_TILE_HEIGHT_SGIX #x8141)
(define-constant GL_PIXEL_TILE_GRID_WIDTH_SGIX #x8142)
(define-constant GL_PIXEL_TILE_GRID_HEIGHT_SGIX #x8143)
(define-constant GL_PIXEL_TILE_GRID_DEPTH_SGIX #x8144)
(define-constant GL_PIXEL_TILE_CACHE_SIZE_SGIX #x8145)
(define-constant GL_DUAL_ALPHA4_SGIS #x8110)
(define-constant GL_DUAL_ALPHA8_SGIS #x8111)
(define-constant GL_DUAL_ALPHA12_SGIS #x8112)
(define-constant GL_DUAL_ALPHA16_SGIS #x8113)
(define-constant GL_DUAL_LUMINANCE4_SGIS #x8114)
(define-constant GL_DUAL_LUMINANCE8_SGIS #x8115)
(define-constant GL_DUAL_LUMINANCE12_SGIS #x8116)
(define-constant GL_DUAL_LUMINANCE16_SGIS #x8117)
(define-constant GL_DUAL_INTENSITY4_SGIS #x8118)
(define-constant GL_DUAL_INTENSITY8_SGIS #x8119)
(define-constant GL_DUAL_INTENSITY12_SGIS #x811a)
(define-constant GL_DUAL_INTENSITY16_SGIS #x811b)
(define-constant GL_DUAL_LUMINANCE_ALPHA4_SGIS #x811c)
(define-constant GL_DUAL_LUMINANCE_ALPHA8_SGIS #x811d)
(define-constant GL_QUAD_ALPHA4_SGIS #x811e)
(define-constant GL_QUAD_ALPHA8_SGIS #x811f)
(define-constant GL_QUAD_LUMINANCE4_SGIS #x8120)
(define-constant GL_QUAD_LUMINANCE8_SGIS #x8121)
(define-constant GL_QUAD_INTENSITY4_SGIS #x8122)
(define-constant GL_QUAD_INTENSITY8_SGIS #x8123)
(define-constant GL_DUAL_TEXTURE_SELECT_SGIS #x8124)
(define-constant GL_QUAD_TEXTURE_SELECT_SGIS #x8125)
(define-constant GL_SPRITE_SGIX #x8148)
(define-constant GL_SPRITE_MODE_SGIX #x8149)
(define-constant GL_SPRITE_AXIS_SGIX #x814a)
(define-constant GL_SPRITE_TRANSLATION_SGIX #x814b)
(define-constant GL_SPRITE_AXIAL_SGIX #x814c)
(define-constant GL_SPRITE_OBJECT_ALIGNED_SGIX #x814d)
(define-constant GL_SPRITE_EYE_ALIGNED_SGIX #x814e)
(define-constant GL_TEXTURE_MULTI_BUFFER_HINT_SGIX #x812e)
(define-constant GL_POINT_SIZE_MIN_EXT #x8126)
(define-constant GL_POINT_SIZE_MAX_EXT #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_EXT #x8128)
(define-constant GL_DISTANCE_ATTENUATION_EXT #x8129)
(define-constant GL_POINT_SIZE_MIN_SGIS #x8126)
(define-constant GL_POINT_SIZE_MAX_SGIS #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_SGIS #x8128)
(define-constant GL_DISTANCE_ATTENUATION_SGIS #x8129)
(define-constant GL_INSTRUMENT_BUFFER_POINTER_SGIX #x8180)
(define-constant GL_INSTRUMENT_MEASUREMENTS_SGIX #x8181)
(define-constant GL_POST_TEXTURE_FILTER_BIAS_SGIX #x8179)
(define-constant GL_POST_TEXTURE_FILTER_SCALE_SGIX #x817a)
(define-constant GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX #x817b)
(define-constant GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX #x817c)
(define-constant GL_FRAMEZOOM_SGIX #x818b)
(define-constant GL_FRAMEZOOM_FACTOR_SGIX #x818c)
(define-constant GL_MAX_FRAMEZOOM_FACTOR_SGIX #x818d)
(define-constant GL_TEXTURE_DEFORMATION_BIT_SGIX #x0001)
(define-constant GL_GEOMETRY_DEFORMATION_BIT_SGIX #x0002)
(define-constant GL_GEOMETRY_DEFORMATION_SGIX #x8194)
(define-constant GL_TEXTURE_DEFORMATION_SGIX #x8195)
(define-constant GL_DEFORMATIONS_MASK_SGIX #x8196)
(define-constant GL_MAX_DEFORMATION_ORDER_SGIX #x8197)
(define-constant GL_REFERENCE_PLANE_SGIX #x817d)
(define-constant GL_REFERENCE_PLANE_EQUATION_SGIX #x817e)
(define-constant GL_DEPTH_COMPONENT16_SGIX #x81a5)
(define-constant GL_DEPTH_COMPONENT24_SGIX #x81a6)
(define-constant GL_DEPTH_COMPONENT32_SGIX #x81a7)
(define-constant GL_FOG_FUNC_SGIS #x812a)
(define-constant GL_FOG_FUNC_POINTS_SGIS #x812b)
(define-constant GL_MAX_FOG_FUNC_POINTS_SGIS #x812c)
(define-constant GL_FOG_OFFSET_SGIX #x8198)
(define-constant GL_FOG_OFFSET_VALUE_SGIX #x8199)
(define-constant GL_IMAGE_SCALE_X_HP #x8155)
(define-constant GL_IMAGE_SCALE_Y_HP #x8156)
(define-constant GL_IMAGE_TRANSLATE_X_HP #x8157)
(define-constant GL_IMAGE_TRANSLATE_Y_HP #x8158)
(define-constant GL_IMAGE_ROTATE_ANGLE_HP #x8159)
(define-constant GL_IMAGE_ROTATE_ORIGIN_X_HP #x815a)
(define-constant GL_IMAGE_ROTATE_ORIGIN_Y_HP #x815b)
(define-constant GL_IMAGE_MAG_FILTER_HP #x815c)
(define-constant GL_IMAGE_MIN_FILTER_HP #x815d)
(define-constant GL_IMAGE_CUBIC_WEIGHT_HP #x815e)
(define-constant GL_CUBIC_HP #x815f)
(define-constant GL_AVERAGE_HP #x8160)
(define-constant GL_IMAGE_TRANSFORM_2D_HP #x8161)
(define-constant GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP #x8162)
(define-constant GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP #x8163)
(define-constant GL_IGNORE_BORDER_HP #x8150)
(define-constant GL_CONSTANT_BORDER_HP #x8151)
(define-constant GL_REPLICATE_BORDER_HP #x8153)
(define-constant GL_CONVOLUTION_BORDER_COLOR_HP #x8154)
(define-constant GL_TEXTURE_ENV_BIAS_SGIX #x80be)
(define-constant GL_VERTEX_DATA_HINT_PGI #x1a22a)
(define-constant GL_VERTEX_CONSISTENT_HINT_PGI #x1a22b)
(define-constant GL_MATERIAL_SIDE_HINT_PGI #x1a22c)
(define-constant GL_MAX_VERTEX_HINT_PGI #x1a22d)
(define-constant GL_COLOR3_BIT_PGI #x10000)
(define-constant GL_COLOR4_BIT_PGI #x20000)
(define-constant GL_EDGEFLAG_BIT_PGI #x40000)
(define-constant GL_INDEX_BIT_PGI #x80000)
(define-constant GL_MAT_AMBIENT_BIT_PGI #x100000)
(define-constant GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI #x200000)
(define-constant GL_MAT_DIFFUSE_BIT_PGI #x400000)
(define-constant GL_MAT_EMISSION_BIT_PGI #x800000)
(define-constant GL_MAT_COLOR_INDEXES_BIT_PGI #x1000000)
(define-constant GL_MAT_SHININESS_BIT_PGI #x2000000)
(define-constant GL_MAT_SPECULAR_BIT_PGI #x4000000)
(define-constant GL_NORMAL_BIT_PGI #x8000000)
(define-constant GL_TEXCOORD1_BIT_PGI #x10000000)
(define-constant GL_TEXCOORD2_BIT_PGI #x20000000)
(define-constant GL_TEXCOORD3_BIT_PGI #x40000000)
(define-constant GL_TEXCOORD4_BIT_PGI #x80000000)
(define-constant GL_VERTEX23_BIT_PGI #x0004)
(define-constant GL_VERTEX4_BIT_PGI #x0008)
(define-constant GL_PREFER_DOUBLEBUFFER_HINT_PGI #x1a1f8)
(define-constant GL_CONSERVE_MEMORY_HINT_PGI #x1a1fd)
(define-constant GL_RECLAIM_MEMORY_HINT_PGI #x1a1fe)
(define-constant GL_NATIVE_GRAPHICS_HANDLE_PGI #x1a202)
(define-constant GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI #x1a203)
(define-constant GL_NATIVE_GRAPHICS_END_HINT_PGI #x1a204)
(define-constant GL_ALWAYS_FAST_HINT_PGI #x1a20c)
(define-constant GL_ALWAYS_SOFT_HINT_PGI #x1a20d)
(define-constant GL_ALLOW_DRAW_OBJ_HINT_PGI #x1a20e)
(define-constant GL_ALLOW_DRAW_WIN_HINT_PGI #x1a20f)
(define-constant GL_ALLOW_DRAW_FRG_HINT_PGI #x1a210)
(define-constant GL_ALLOW_DRAW_MEM_HINT_PGI #x1a211)
(define-constant GL_STRICT_DEPTHFUNC_HINT_PGI #x1a216)
(define-constant GL_STRICT_LIGHTING_HINT_PGI #x1a217)
(define-constant GL_STRICT_SCISSOR_HINT_PGI #x1a218)
(define-constant GL_FULL_STIPPLE_HINT_PGI #x1a219)
(define-constant GL_CLIP_NEAR_HINT_PGI #x1a220)
(define-constant GL_CLIP_FAR_HINT_PGI #x1a221)
(define-constant GL_WIDE_LINE_HINT_PGI #x1a222)
(define-constant GL_BACK_NORMALS_HINT_PGI #x1a223)
(define-constant GL_COLOR_INDEX1_EXT #x80e2)
(define-constant GL_COLOR_INDEX2_EXT #x80e3)
(define-constant GL_COLOR_INDEX4_EXT #x80e4)
(define-constant GL_COLOR_INDEX8_EXT #x80e5)
(define-constant GL_COLOR_INDEX12_EXT #x80e6)
(define-constant GL_COLOR_INDEX16_EXT #x80e7)
(define-constant GL_TEXTURE_INDEX_SIZE_EXT #x80ed)
(define-constant GL_CLIP_VOLUME_CLIPPING_HINT_EXT #x80f0)
(define-constant GL_LIST_PRIORITY_SGIX #x8182)
(define-constant GL_IR_INSTRUMENT1_SGIX #x817f)
(define-constant GL_CALLIGRAPHIC_FRAGMENT_SGIX #x8183)
(define-constant GL_TEXTURE_LOD_BIAS_S_SGIX #x818e)
(define-constant GL_TEXTURE_LOD_BIAS_T_SGIX #x818f)
(define-constant GL_TEXTURE_LOD_BIAS_R_SGIX #x8190)
(define-constant GL_SHADOW_AMBIENT_SGIX #x80bf)
(define-constant GL_INDEX_MATERIAL_EXT #x81b8)
(define-constant GL_INDEX_MATERIAL_PARAMETER_EXT #x81b9)
(define-constant GL_INDEX_MATERIAL_FACE_EXT #x81ba)
(define-constant GL_INDEX_TEST_EXT #x81b5)
(define-constant GL_INDEX_TEST_FUNC_EXT #x81b6)
(define-constant GL_INDEX_TEST_REF_EXT #x81b7)
(define-constant GL_IUI_V2F_EXT #x81ad)
(define-constant GL_IUI_V3F_EXT #x81ae)
(define-constant GL_IUI_N3F_V2F_EXT #x81af)
(define-constant GL_IUI_N3F_V3F_EXT #x81b0)
(define-constant GL_T2F_IUI_V2F_EXT #x81b1)
(define-constant GL_T2F_IUI_V3F_EXT #x81b2)
(define-constant GL_T2F_IUI_N3F_V2F_EXT #x81b3)
(define-constant GL_T2F_IUI_N3F_V3F_EXT #x81b4)
(define-constant GL_ARRAY_ELEMENT_LOCK_FIRST_EXT #x81a8)
(define-constant GL_ARRAY_ELEMENT_LOCK_COUNT_EXT #x81a9)
(define-constant GL_CULL_VERTEX_EXT #x81aa)
(define-constant GL_CULL_VERTEX_EYE_POSITION_EXT #x81ab)
(define-constant GL_CULL_VERTEX_OBJECT_POSITION_EXT #x81ac)
(define-constant GL_YCRCB_422_SGIX #x81bb)
(define-constant GL_YCRCB_444_SGIX #x81bc)
(define-constant GL_FRAGMENT_LIGHTING_SGIX #x8400)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_SGIX #x8401)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX #x8402)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX #x8403)
(define-constant GL_MAX_FRAGMENT_LIGHTS_SGIX #x8404)
(define-constant GL_MAX_ACTIVE_LIGHTS_SGIX #x8405)
(define-constant GL_CURRENT_RASTER_NORMAL_SGIX #x8406)
(define-constant GL_LIGHT_ENV_MODE_SGIX #x8407)
(define-constant GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX #x8408)
(define-constant GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX #x8409)
(define-constant GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX #x840a)
(define-constant GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX #x840b)
(define-constant GL_FRAGMENT_LIGHT0_SGIX #x840c)
(define-constant GL_FRAGMENT_LIGHT1_SGIX #x840d)
(define-constant GL_FRAGMENT_LIGHT2_SGIX #x840e)
(define-constant GL_FRAGMENT_LIGHT3_SGIX #x840f)
(define-constant GL_FRAGMENT_LIGHT4_SGIX #x8410)
(define-constant GL_FRAGMENT_LIGHT5_SGIX #x8411)
(define-constant GL_FRAGMENT_LIGHT6_SGIX #x8412)
(define-constant GL_FRAGMENT_LIGHT7_SGIX #x8413)
(define-constant GL_RASTER_POSITION_UNCLIPPED_IBM #x19262)
(define-constant GL_TEXTURE_LIGHTING_MODE_HP #x8167)
(define-constant GL_TEXTURE_POST_SPECULAR_HP #x8168)
(define-constant GL_TEXTURE_PRE_SPECULAR_HP #x8169)
(define-constant GL_MAX_ELEMENTS_VERTICES_EXT #x80e8)
(define-constant GL_MAX_ELEMENTS_INDICES_EXT #x80e9)
(define-constant GL_PHONG_WIN #x80ea)
(define-constant GL_PHONG_HINT_WIN #x80eb)
(define-constant GL_FOG_SPECULAR_TEXTURE_WIN #x80ec)
(define-constant GL_FRAGMENT_MATERIAL_EXT #x8349)
(define-constant GL_FRAGMENT_NORMAL_EXT #x834a)
(define-constant GL_FRAGMENT_COLOR_EXT #x834c)
(define-constant GL_ATTENUATION_EXT #x834d)
(define-constant GL_SHADOW_ATTENUATION_EXT #x834e)
(define-constant GL_TEXTURE_APPLICATION_MODE_EXT #x834f)
(define-constant GL_TEXTURE_LIGHT_EXT #x8350)
(define-constant GL_TEXTURE_MATERIAL_FACE_EXT #x8351)
(define-constant GL_TEXTURE_MATERIAL_PARAMETER_EXT #x8352)
(define-constant GL_ALPHA_MIN_SGIX #x8320)
(define-constant GL_ALPHA_MAX_SGIX #x8321)
(define-constant GL_PIXEL_TEX_GEN_Q_CEILING_SGIX #x8184)
(define-constant GL_PIXEL_TEX_GEN_Q_ROUND_SGIX #x8185)
(define-constant GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX #x8186)
(define-constant GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX #x8187)
(define-constant GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX #x8188)
(define-constant GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX #x8189)
(define-constant GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX #x818a)
(define-constant GL_BGR_EXT #x80e0)
(define-constant GL_BGRA_EXT #x80e1)
(define-constant GL_ASYNC_MARKER_SGIX #x8329)
(define-constant GL_ASYNC_TEX_IMAGE_SGIX #x835c)
(define-constant GL_ASYNC_DRAW_PIXELS_SGIX #x835d)
(define-constant GL_ASYNC_READ_PIXELS_SGIX #x835e)
(define-constant GL_MAX_ASYNC_TEX_IMAGE_SGIX #x835f)
(define-constant GL_MAX_ASYNC_DRAW_PIXELS_SGIX #x8360)
(define-constant GL_MAX_ASYNC_READ_PIXELS_SGIX #x8361)
(define-constant GL_ASYNC_HISTOGRAM_SGIX #x832c)
(define-constant GL_MAX_ASYNC_HISTOGRAM_SGIX #x832d)
(define-constant GL_PARALLEL_ARRAYS_INTEL #x83f4)
(define-constant GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL #x83f5)
(define-constant GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL #x83f6)
(define-constant GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL #x83f7)
(define-constant GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL #x83f8)
(define-constant GL_OCCLUSION_TEST_HP #x8165)
(define-constant GL_OCCLUSION_TEST_RESULT_HP #x8166)
(define-constant GL_PIXEL_TRANSFORM_2D_EXT #x8330)
(define-constant GL_PIXEL_MAG_FILTER_EXT #x8331)
(define-constant GL_PIXEL_MIN_FILTER_EXT #x8332)
(define-constant GL_PIXEL_CUBIC_WEIGHT_EXT #x8333)
(define-constant GL_CUBIC_EXT #x8334)
(define-constant GL_AVERAGE_EXT #x8335)
(define-constant GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT #x8336)
(define-constant GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT #x8337)
(define-constant GL_PIXEL_TRANSFORM_2D_MATRIX_EXT #x8338)
(define-constant GL_SHARED_TEXTURE_PALETTE_EXT #x81fb)
(define-constant GL_LIGHT_MODEL_COLOR_CONTROL_EXT #x81f8)
(define-constant GL_SINGLE_COLOR_EXT #x81f9)
(define-constant GL_SEPARATE_SPECULAR_COLOR_EXT #x81fa)
(define-constant GL_COLOR_SUM_EXT #x8458)
(define-constant GL_CURRENT_SECONDARY_COLOR_EXT #x8459)
(define-constant GL_SECONDARY_COLOR_ARRAY_SIZE_EXT #x845a)
(define-constant GL_SECONDARY_COLOR_ARRAY_TYPE_EXT #x845b)
(define-constant GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT #x845c)
(define-constant GL_SECONDARY_COLOR_ARRAY_POINTER_EXT #x845d)
(define-constant GL_SECONDARY_COLOR_ARRAY_EXT #x845e)
(define-constant GL_PERTURB_EXT #x85ae)
(define-constant GL_TEXTURE_NORMAL_EXT #x85af)
(define-constant GL_FOG_COORDINATE_SOURCE_EXT #x8450)
(define-constant GL_FOG_COORDINATE_EXT #x8451)
(define-constant GL_FRAGMENT_DEPTH_EXT #x8452)
(define-constant GL_CURRENT_FOG_COORDINATE_EXT #x8453)
(define-constant GL_FOG_COORDINATE_ARRAY_TYPE_EXT #x8454)
(define-constant GL_FOG_COORDINATE_ARRAY_STRIDE_EXT #x8455)
(define-constant GL_FOG_COORDINATE_ARRAY_POINTER_EXT #x8456)
(define-constant GL_FOG_COORDINATE_ARRAY_EXT #x8457)
(define-constant GL_SCREEN_COORDINATES_REND #x8490)
(define-constant GL_INVERTED_SCREEN_W_REND #x8491)
(define-constant GL_TANGENT_ARRAY_EXT #x8439)
(define-constant GL_BINORMAL_ARRAY_EXT #x843a)
(define-constant GL_CURRENT_TANGENT_EXT #x843b)
(define-constant GL_CURRENT_BINORMAL_EXT #x843c)
(define-constant GL_TANGENT_ARRAY_TYPE_EXT #x843e)
(define-constant GL_TANGENT_ARRAY_STRIDE_EXT #x843f)
(define-constant GL_BINORMAL_ARRAY_TYPE_EXT #x8440)
(define-constant GL_BINORMAL_ARRAY_STRIDE_EXT #x8441)
(define-constant GL_TANGENT_ARRAY_POINTER_EXT #x8442)
(define-constant GL_BINORMAL_ARRAY_POINTER_EXT #x8443)
(define-constant GL_MAP1_TANGENT_EXT #x8444)
(define-constant GL_MAP2_TANGENT_EXT #x8445)
(define-constant GL_MAP1_BINORMAL_EXT #x8446)
(define-constant GL_MAP2_BINORMAL_EXT #x8447)
(define-constant GL_COMBINE_EXT #x8570)
(define-constant GL_COMBINE_RGB_EXT #x8571)
(define-constant GL_COMBINE_ALPHA_EXT #x8572)
(define-constant GL_RGB_SCALE_EXT #x8573)
(define-constant GL_ADD_SIGNED_EXT #x8574)
(define-constant GL_INTERPOLATE_EXT #x8575)
(define-constant GL_CONSTANT_EXT #x8576)
(define-constant GL_PRIMARY_COLOR_EXT #x8577)
(define-constant GL_PREVIOUS_EXT #x8578)
(define-constant GL_SOURCE0_RGB_EXT #x8580)
(define-constant GL_SOURCE1_RGB_EXT #x8581)
(define-constant GL_SOURCE2_RGB_EXT #x8582)
(define-constant GL_SOURCE0_ALPHA_EXT #x8588)
(define-constant GL_SOURCE1_ALPHA_EXT #x8589)
(define-constant GL_SOURCE2_ALPHA_EXT #x858a)
(define-constant GL_OPERAND0_RGB_EXT #x8590)
(define-constant GL_OPERAND1_RGB_EXT #x8591)
(define-constant GL_OPERAND2_RGB_EXT #x8592)
(define-constant GL_OPERAND0_ALPHA_EXT #x8598)
(define-constant GL_OPERAND1_ALPHA_EXT #x8599)
(define-constant GL_OPERAND2_ALPHA_EXT #x859a)
(define-constant GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE #x85b0)
(define-constant GL_TRANSFORM_HINT_APPLE #x85b1)
(define-constant GL_FOG_SCALE_SGIX #x81fc)
(define-constant GL_FOG_SCALE_VALUE_SGIX #x81fd)
(define-constant GL_UNPACK_CONSTANT_DATA_SUNX #x81d5)
(define-constant GL_TEXTURE_CONSTANT_DATA_SUNX #x81d6)
(define-constant GL_GLOBAL_ALPHA_SUN #x81d9)
(define-constant GL_GLOBAL_ALPHA_FACTOR_SUN #x81da)
(define-constant GL_RESTART_SUN #x0001)
(define-constant GL_REPLACE_MIDDLE_SUN #x0002)
(define-constant GL_REPLACE_OLDEST_SUN #x0003)
(define-constant GL_TRIANGLE_LIST_SUN #x81d7)
(define-constant GL_REPLACEMENT_CODE_SUN #x81d8)
(define-constant GL_REPLACEMENT_CODE_ARRAY_SUN #x85c0)
(define-constant GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN #x85c1)
(define-constant GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN #x85c2)
(define-constant GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN #x85c3)
(define-constant GL_R1UI_V3F_SUN #x85c4)
(define-constant GL_R1UI_C4UB_V3F_SUN #x85c5)
(define-constant GL_R1UI_C3F_V3F_SUN #x85c6)
(define-constant GL_R1UI_N3F_V3F_SUN #x85c7)
(define-constant GL_R1UI_C4F_N3F_V3F_SUN #x85c8)
(define-constant GL_R1UI_T2F_V3F_SUN #x85c9)
(define-constant GL_R1UI_T2F_N3F_V3F_SUN #x85ca)
(define-constant GL_R1UI_T2F_C4F_N3F_V3F_SUN #x85cb)
(define-constant GL_BLEND_DST_RGB_EXT #x80c8)
(define-constant GL_BLEND_SRC_RGB_EXT #x80c9)
(define-constant GL_BLEND_DST_ALPHA_EXT #x80ca)
(define-constant GL_BLEND_SRC_ALPHA_EXT #x80cb)
(define-constant GL_RED_MIN_CLAMP_INGR #x8560)
(define-constant GL_GREEN_MIN_CLAMP_INGR #x8561)
(define-constant GL_BLUE_MIN_CLAMP_INGR #x8562)
(define-constant GL_ALPHA_MIN_CLAMP_INGR #x8563)
(define-constant GL_RED_MAX_CLAMP_INGR #x8564)
(define-constant GL_GREEN_MAX_CLAMP_INGR #x8565)
(define-constant GL_BLUE_MAX_CLAMP_INGR #x8566)
(define-constant GL_ALPHA_MAX_CLAMP_INGR #x8567)
(define-constant GL_INTERLACE_READ_INGR #x8568)
(define-constant GL_INCR_WRAP_EXT #x8507)
(define-constant GL_DECR_WRAP_EXT #x8508)
(define-constant GL_422_EXT #x80cc)
(define-constant GL_422_REV_EXT #x80cd)
(define-constant GL_422_AVERAGE_EXT #x80ce)
(define-constant GL_422_REV_AVERAGE_EXT #x80cf)
(define-constant GL_NORMAL_MAP_NV #x8511)
(define-constant GL_REFLECTION_MAP_NV #x8512)
(define-constant GL_NORMAL_MAP_EXT #x8511)
(define-constant GL_REFLECTION_MAP_EXT #x8512)
(define-constant GL_TEXTURE_CUBE_MAP_EXT #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_EXT #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_EXT #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT #x851c)
(define-constant GL_WRAP_BORDER_SUN #x81d4)
(define-constant GL_MAX_TEXTURE_LOD_BIAS_EXT #x84fd)
(define-constant GL_TEXTURE_FILTER_CONTROL_EXT #x8500)
(define-constant GL_TEXTURE_LOD_BIAS_EXT #x8501)
(define-constant GL_TEXTURE_MAX_ANISOTROPY_EXT #x84fe)
(define-constant GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT #x84ff)
(define-constant GL_MODELVIEW0_STACK_DEPTH_EXT #x0ba3)
(define-constant GL_MODELVIEW1_STACK_DEPTH_EXT #x8502)
(define-constant GL_MODELVIEW0_MATRIX_EXT #x0ba6)
(define-constant GL_MODELVIEW1_MATRIX_EXT #x8506)
(define-constant GL_VERTEX_WEIGHTING_EXT #x8509)
(define-constant GL_MODELVIEW0_EXT #x1700)
(define-constant GL_MODELVIEW1_EXT #x850a)
(define-constant GL_CURRENT_VERTEX_WEIGHT_EXT #x850b)
(define-constant GL_VERTEX_WEIGHT_ARRAY_EXT #x850c)
(define-constant GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT #x850d)
(define-constant GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT #x850e)
(define-constant GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT #x850f)
(define-constant GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT #x8510)
(define-constant GL_MAX_SHININESS_NV #x8504)
(define-constant GL_MAX_SPOT_EXPONENT_NV #x8505)
(define-constant GL_VERTEX_ARRAY_RANGE_NV #x851d)
(define-constant GL_VERTEX_ARRAY_RANGE_LENGTH_NV #x851e)
(define-constant GL_VERTEX_ARRAY_RANGE_VALID_NV #x851f)
(define-constant GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV #x8520)
(define-constant GL_VERTEX_ARRAY_RANGE_POINTER_NV #x8521)
(define-constant GL_REGISTER_COMBINERS_NV #x8522)
(define-constant GL_VARIABLE_A_NV #x8523)
(define-constant GL_VARIABLE_B_NV #x8524)
(define-constant GL_VARIABLE_C_NV #x8525)
(define-constant GL_VARIABLE_D_NV #x8526)
(define-constant GL_VARIABLE_E_NV #x8527)
(define-constant GL_VARIABLE_F_NV #x8528)
(define-constant GL_VARIABLE_G_NV #x8529)
(define-constant GL_CONSTANT_COLOR0_NV #x852a)
(define-constant GL_CONSTANT_COLOR1_NV #x852b)
(define-constant GL_PRIMARY_COLOR_NV #x852c)
(define-constant GL_SECONDARY_COLOR_NV #x852d)
(define-constant GL_SPARE0_NV #x852e)
(define-constant GL_SPARE1_NV #x852f)
(define-constant GL_DISCARD_NV #x8530)
(define-constant GL_E_TIMES_F_NV #x8531)
(define-constant GL_SPARE0_PLUS_SECONDARY_COLOR_NV #x8532)
(define-constant GL_UNSIGNED_IDENTITY_NV #x8536)
(define-constant GL_UNSIGNED_INVERT_NV #x8537)
(define-constant GL_EXPAND_NORMAL_NV #x8538)
(define-constant GL_EXPAND_NEGATE_NV #x8539)
(define-constant GL_HALF_BIAS_NORMAL_NV #x853a)
(define-constant GL_HALF_BIAS_NEGATE_NV #x853b)
(define-constant GL_SIGNED_IDENTITY_NV #x853c)
(define-constant GL_SIGNED_NEGATE_NV #x853d)
(define-constant GL_SCALE_BY_TWO_NV #x853e)
(define-constant GL_SCALE_BY_FOUR_NV #x853f)
(define-constant GL_SCALE_BY_ONE_HALF_NV #x8540)
(define-constant GL_BIAS_BY_NEGATIVE_ONE_HALF_NV #x8541)
(define-constant GL_COMBINER_INPUT_NV #x8542)
(define-constant GL_COMBINER_MAPPING_NV #x8543)
(define-constant GL_COMBINER_COMPONENT_USAGE_NV #x8544)
(define-constant GL_COMBINER_AB_DOT_PRODUCT_NV #x8545)
(define-constant GL_COMBINER_CD_DOT_PRODUCT_NV #x8546)
(define-constant GL_COMBINER_MUX_SUM_NV #x8547)
(define-constant GL_COMBINER_SCALE_NV #x8548)
(define-constant GL_COMBINER_BIAS_NV #x8549)
(define-constant GL_COMBINER_AB_OUTPUT_NV #x854a)
(define-constant GL_COMBINER_CD_OUTPUT_NV #x854b)
(define-constant GL_COMBINER_SUM_OUTPUT_NV #x854c)
(define-constant GL_MAX_GENERAL_COMBINERS_NV #x854d)
(define-constant GL_NUM_GENERAL_COMBINERS_NV #x854e)
(define-constant GL_COLOR_SUM_CLAMP_NV #x854f)
(define-constant GL_COMBINER0_NV #x8550)
(define-constant GL_COMBINER1_NV #x8551)
(define-constant GL_COMBINER2_NV #x8552)
(define-constant GL_COMBINER3_NV #x8553)
(define-constant GL_COMBINER4_NV #x8554)
(define-constant GL_COMBINER5_NV #x8555)
(define-constant GL_COMBINER6_NV #x8556)
(define-constant GL_COMBINER7_NV #x8557)
(define-constant GL_FOG_DISTANCE_MODE_NV #x855a)
(define-constant GL_EYE_RADIAL_NV #x855b)
(define-constant GL_EYE_PLANE_ABSOLUTE_NV #x855c)
(define-constant GL_EMBOSS_LIGHT_NV #x855d)
(define-constant GL_EMBOSS_CONSTANT_NV #x855e)
(define-constant GL_EMBOSS_MAP_NV #x855f)
(define-constant GL_COMBINE4_NV #x8503)
(define-constant GL_SOURCE3_RGB_NV #x8583)
(define-constant GL_SOURCE3_ALPHA_NV #x858b)
(define-constant GL_OPERAND3_RGB_NV #x8593)
(define-constant GL_OPERAND3_ALPHA_NV #x859b)
(define-constant GL_COMPRESSED_RGB_S3TC_DXT1_EXT #x83f0)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT1_EXT #x83f1)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT3_EXT #x83f2)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT5_EXT #x83f3)
(define-constant GL_CULL_VERTEX_IBM #x1928a)
(define-constant GL_VERTEX_ARRAY_LIST_IBM #x1929e)
(define-constant GL_NORMAL_ARRAY_LIST_IBM #x1929f)
(define-constant GL_COLOR_ARRAY_LIST_IBM #x192a0)
(define-constant GL_INDEX_ARRAY_LIST_IBM #x192a1)
(define-constant GL_TEXTURE_COORD_ARRAY_LIST_IBM #x192a2)
(define-constant GL_EDGE_FLAG_ARRAY_LIST_IBM #x192a3)
(define-constant GL_FOG_COORDINATE_ARRAY_LIST_IBM #x192a4)
(define-constant GL_SECONDARY_COLOR_ARRAY_LIST_IBM #x192a5)
(define-constant GL_VERTEX_ARRAY_LIST_STRIDE_IBM #x192a8)
(define-constant GL_NORMAL_ARRAY_LIST_STRIDE_IBM #x192a9)
(define-constant GL_COLOR_ARRAY_LIST_STRIDE_IBM #x192aa)
(define-constant GL_INDEX_ARRAY_LIST_STRIDE_IBM #x192ab)
(define-constant GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM #x192ac)
(define-constant GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM #x192ad)
(define-constant GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM #x192ae)
(define-constant GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM #x192af)
(define-constant GL_PACK_SUBSAMPLE_RATE_SGIX #x85a0)
(define-constant GL_UNPACK_SUBSAMPLE_RATE_SGIX #x85a1)
(define-constant GL_PIXEL_SUBSAMPLE_4444_SGIX #x85a2)
(define-constant GL_PIXEL_SUBSAMPLE_2424_SGIX #x85a3)
(define-constant GL_PIXEL_SUBSAMPLE_4242_SGIX #x85a4)
(define-constant GL_YCRCB_SGIX #x8318)
(define-constant GL_YCRCBA_SGIX #x8319)
(define-constant GL_DEPTH_PASS_INSTRUMENT_SGIX #x8310)
(define-constant GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX #x8311)
(define-constant GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX #x8312)
(define-constant GL_COMPRESSED_RGB_FXT1_3DFX #x86b0)
(define-constant GL_COMPRESSED_RGBA_FXT1_3DFX #x86b1)
(define-constant GL_MULTISAMPLE_3DFX #x86b2)
(define-constant GL_SAMPLE_BUFFERS_3DFX #x86b3)
(define-constant GL_SAMPLES_3DFX #x86b4)
(define-constant GL_MULTISAMPLE_BIT_3DFX #x20000000)
(define-constant GL_MULTISAMPLE_EXT #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_MASK_EXT #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_EXT #x809f)
(define-constant GL_SAMPLE_MASK_EXT #x80a0)
(define-constant GL_1PASS_EXT #x80a1)
(define-constant GL_2PASS_0_EXT #x80a2)
(define-constant GL_2PASS_1_EXT #x80a3)
(define-constant GL_4PASS_0_EXT #x80a4)
(define-constant GL_4PASS_1_EXT #x80a5)
(define-constant GL_4PASS_2_EXT #x80a6)
(define-constant GL_4PASS_3_EXT #x80a7)
(define-constant GL_SAMPLE_BUFFERS_EXT #x80a8)
(define-constant GL_SAMPLES_EXT #x80a9)
(define-constant GL_SAMPLE_MASK_VALUE_EXT #x80aa)
(define-constant GL_SAMPLE_MASK_INVERT_EXT #x80ab)
(define-constant GL_SAMPLE_PATTERN_EXT #x80ac)
(define-constant GL_MULTISAMPLE_BIT_EXT #x20000000)
(define-constant GL_VERTEX_PRECLIP_SGIX #x83ee)
(define-constant GL_VERTEX_PRECLIP_HINT_SGIX #x83ef)
(define-constant GL_CONVOLUTION_HINT_SGIX #x8316)
(define-constant GL_PACK_RESAMPLE_SGIX #x842c)
(define-constant GL_UNPACK_RESAMPLE_SGIX #x842d)
(define-constant GL_RESAMPLE_REPLICATE_SGIX #x842e)
(define-constant GL_RESAMPLE_ZERO_FILL_SGIX #x842f)
(define-constant GL_RESAMPLE_DECIMATE_SGIX #x8430)
(define-constant GL_EYE_DISTANCE_TO_POINT_SGIS #x81f0)
(define-constant GL_OBJECT_DISTANCE_TO_POINT_SGIS #x81f1)
(define-constant GL_EYE_DISTANCE_TO_LINE_SGIS #x81f2)
(define-constant GL_OBJECT_DISTANCE_TO_LINE_SGIS #x81f3)
(define-constant GL_EYE_POINT_SGIS #x81f4)
(define-constant GL_OBJECT_POINT_SGIS #x81f5)
(define-constant GL_EYE_LINE_SGIS #x81f6)
(define-constant GL_OBJECT_LINE_SGIS #x81f7)
(define-constant GL_TEXTURE_COLOR_WRITEMASK_SGIS #x81ef)
(define-constant GL_DOT3_RGB_EXT #x8740)
(define-constant GL_DOT3_RGBA_EXT #x8741)
(define-constant GL_MIRROR_CLAMP_ATI #x8742)
(define-constant GL_MIRROR_CLAMP_TO_EDGE_ATI #x8743)
(define-constant GL_ALL_COMPLETED_NV #x84f2)
(define-constant GL_FENCE_STATUS_NV #x84f3)
(define-constant GL_FENCE_CONDITION_NV #x84f4)
(define-constant GL_MIRRORED_REPEAT_IBM #x8370)
(define-constant GL_EVAL_2D_NV #x86c0)
(define-constant GL_EVAL_TRIANGULAR_2D_NV #x86c1)
(define-constant GL_MAP_TESSELLATION_NV #x86c2)
(define-constant GL_MAP_ATTRIB_U_ORDER_NV #x86c3)
(define-constant GL_MAP_ATTRIB_V_ORDER_NV #x86c4)
(define-constant GL_EVAL_FRACTIONAL_TESSELLATION_NV #x86c5)
(define-constant GL_EVAL_VERTEX_ATTRIB0_NV #x86c6)
(define-constant GL_EVAL_VERTEX_ATTRIB1_NV #x86c7)
(define-constant GL_EVAL_VERTEX_ATTRIB2_NV #x86c8)
(define-constant GL_EVAL_VERTEX_ATTRIB3_NV #x86c9)
(define-constant GL_EVAL_VERTEX_ATTRIB4_NV #x86ca)
(define-constant GL_EVAL_VERTEX_ATTRIB5_NV #x86cb)
(define-constant GL_EVAL_VERTEX_ATTRIB6_NV #x86cc)
(define-constant GL_EVAL_VERTEX_ATTRIB7_NV #x86cd)
(define-constant GL_EVAL_VERTEX_ATTRIB8_NV #x86ce)
(define-constant GL_EVAL_VERTEX_ATTRIB9_NV #x86cf)
(define-constant GL_EVAL_VERTEX_ATTRIB10_NV #x86d0)
(define-constant GL_EVAL_VERTEX_ATTRIB11_NV #x86d1)
(define-constant GL_EVAL_VERTEX_ATTRIB12_NV #x86d2)
(define-constant GL_EVAL_VERTEX_ATTRIB13_NV #x86d3)
(define-constant GL_EVAL_VERTEX_ATTRIB14_NV #x86d4)
(define-constant GL_EVAL_VERTEX_ATTRIB15_NV #x86d5)
(define-constant GL_MAX_MAP_TESSELLATION_NV #x86d6)
(define-constant GL_MAX_RATIONAL_EVAL_ORDER_NV #x86d7)
(define-constant GL_DEPTH_STENCIL_NV #x84f9)
(define-constant GL_UNSIGNED_INT_24_8_NV #x84fa)
(define-constant GL_PER_STAGE_CONSTANTS_NV #x8535)
(define-constant GL_TEXTURE_RECTANGLE_NV #x84f5)
(define-constant GL_TEXTURE_BINDING_RECTANGLE_NV #x84f6)
(define-constant GL_PROXY_TEXTURE_RECTANGLE_NV #x84f7)
(define-constant GL_MAX_RECTANGLE_TEXTURE_SIZE_NV #x84f8)
(define-constant GL_OFFSET_TEXTURE_RECTANGLE_NV #x864c)
(define-constant GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV #x864d)
(define-constant GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV #x864e)
(define-constant GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV #x86d9)
(define-constant GL_UNSIGNED_INT_S8_S8_8_8_NV #x86da)
(define-constant GL_UNSIGNED_INT_8_8_S8_S8_REV_NV #x86db)
(define-constant GL_DSDT_MAG_INTENSITY_NV #x86dc)
(define-constant GL_SHADER_CONSISTENT_NV #x86dd)
(define-constant GL_TEXTURE_SHADER_NV #x86de)
(define-constant GL_SHADER_OPERATION_NV #x86df)
(define-constant GL_CULL_MODES_NV #x86e0)
(define-constant GL_OFFSET_TEXTURE_MATRIX_NV #x86e1)
(define-constant GL_OFFSET_TEXTURE_SCALE_NV #x86e2)
(define-constant GL_OFFSET_TEXTURE_BIAS_NV #x86e3)
(define-constant GL_OFFSET_TEXTURE_2D_MATRIX_NV #x86e1)
(define-constant GL_OFFSET_TEXTURE_2D_SCALE_NV #x86e2)
(define-constant GL_OFFSET_TEXTURE_2D_BIAS_NV #x86e3)
(define-constant GL_PREVIOUS_TEXTURE_INPUT_NV #x86e4)
(define-constant GL_CONST_EYE_NV #x86e5)
(define-constant GL_PASS_THROUGH_NV #x86e6)
(define-constant GL_CULL_FRAGMENT_NV #x86e7)
(define-constant GL_OFFSET_TEXTURE_2D_NV #x86e8)
(define-constant GL_DEPENDENT_AR_TEXTURE_2D_NV #x86e9)
(define-constant GL_DEPENDENT_GB_TEXTURE_2D_NV #x86ea)
(define-constant GL_DOT_PRODUCT_NV #x86ec)
(define-constant GL_DOT_PRODUCT_DEPTH_REPLACE_NV #x86ed)
(define-constant GL_DOT_PRODUCT_TEXTURE_2D_NV #x86ee)
(define-constant GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV #x86f0)
(define-constant GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV #x86f1)
(define-constant GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV #x86f2)
(define-constant GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV #x86f3)
(define-constant GL_HILO_NV #x86f4)
(define-constant GL_DSDT_NV #x86f5)
(define-constant GL_DSDT_MAG_NV #x86f6)
(define-constant GL_DSDT_MAG_VIB_NV #x86f7)
(define-constant GL_HILO16_NV #x86f8)
(define-constant GL_SIGNED_HILO_NV #x86f9)
(define-constant GL_SIGNED_HILO16_NV #x86fa)
(define-constant GL_SIGNED_RGBA_NV #x86fb)
(define-constant GL_SIGNED_RGBA8_NV #x86fc)
(define-constant GL_SIGNED_RGB_NV #x86fe)
(define-constant GL_SIGNED_RGB8_NV #x86ff)
(define-constant GL_SIGNED_LUMINANCE_NV #x8701)
(define-constant GL_SIGNED_LUMINANCE8_NV #x8702)
(define-constant GL_SIGNED_LUMINANCE_ALPHA_NV #x8703)
(define-constant GL_SIGNED_LUMINANCE8_ALPHA8_NV #x8704)
(define-constant GL_SIGNED_ALPHA_NV #x8705)
(define-constant GL_SIGNED_ALPHA8_NV #x8706)
(define-constant GL_SIGNED_INTENSITY_NV #x8707)
(define-constant GL_SIGNED_INTENSITY8_NV #x8708)
(define-constant GL_DSDT8_NV #x8709)
(define-constant GL_DSDT8_MAG8_NV #x870a)
(define-constant GL_DSDT8_MAG8_INTENSITY8_NV #x870b)
(define-constant GL_SIGNED_RGB_UNSIGNED_ALPHA_NV #x870c)
(define-constant GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV #x870d)
(define-constant GL_HI_SCALE_NV #x870e)
(define-constant GL_LO_SCALE_NV #x870f)
(define-constant GL_DS_SCALE_NV #x8710)
(define-constant GL_DT_SCALE_NV #x8711)
(define-constant GL_MAGNITUDE_SCALE_NV #x8712)
(define-constant GL_VIBRANCE_SCALE_NV #x8713)
(define-constant GL_HI_BIAS_NV #x8714)
(define-constant GL_LO_BIAS_NV #x8715)
(define-constant GL_DS_BIAS_NV #x8716)
(define-constant GL_DT_BIAS_NV #x8717)
(define-constant GL_MAGNITUDE_BIAS_NV #x8718)
(define-constant GL_VIBRANCE_BIAS_NV #x8719)
(define-constant GL_TEXTURE_BORDER_VALUES_NV #x871a)
(define-constant GL_TEXTURE_HI_SIZE_NV #x871b)
(define-constant GL_TEXTURE_LO_SIZE_NV #x871c)
(define-constant GL_TEXTURE_DS_SIZE_NV #x871d)
(define-constant GL_TEXTURE_DT_SIZE_NV #x871e)
(define-constant GL_TEXTURE_MAG_SIZE_NV #x871f)
(define-constant GL_DOT_PRODUCT_TEXTURE_3D_NV #x86ef)
(define-constant GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV #x8533)
(define-constant GL_VERTEX_PROGRAM_NV #x8620)
(define-constant GL_VERTEX_STATE_PROGRAM_NV #x8621)
(define-constant GL_ATTRIB_ARRAY_SIZE_NV #x8623)
(define-constant GL_ATTRIB_ARRAY_STRIDE_NV #x8624)
(define-constant GL_ATTRIB_ARRAY_TYPE_NV #x8625)
(define-constant GL_CURRENT_ATTRIB_NV #x8626)
(define-constant GL_PROGRAM_LENGTH_NV #x8627)
(define-constant GL_PROGRAM_STRING_NV #x8628)
(define-constant GL_MODELVIEW_PROJECTION_NV #x8629)
(define-constant GL_IDENTITY_NV #x862a)
(define-constant GL_INVERSE_NV #x862b)
(define-constant GL_TRANSPOSE_NV #x862c)
(define-constant GL_INVERSE_TRANSPOSE_NV #x862d)
(define-constant GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV #x862e)
(define-constant GL_MAX_TRACK_MATRICES_NV #x862f)
(define-constant GL_MATRIX0_NV #x8630)
(define-constant GL_MATRIX1_NV #x8631)
(define-constant GL_MATRIX2_NV #x8632)
(define-constant GL_MATRIX3_NV #x8633)
(define-constant GL_MATRIX4_NV #x8634)
(define-constant GL_MATRIX5_NV #x8635)
(define-constant GL_MATRIX6_NV #x8636)
(define-constant GL_MATRIX7_NV #x8637)
(define-constant GL_CURRENT_MATRIX_STACK_DEPTH_NV #x8640)
(define-constant GL_CURRENT_MATRIX_NV #x8641)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE_NV #x8642)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE_NV #x8643)
(define-constant GL_PROGRAM_PARAMETER_NV #x8644)
(define-constant GL_ATTRIB_ARRAY_POINTER_NV #x8645)
(define-constant GL_PROGRAM_TARGET_NV #x8646)
(define-constant GL_PROGRAM_RESIDENT_NV #x8647)
(define-constant GL_TRACK_MATRIX_NV #x8648)
(define-constant GL_TRACK_MATRIX_TRANSFORM_NV #x8649)
(define-constant GL_VERTEX_PROGRAM_BINDING_NV #x864a)
(define-constant GL_PROGRAM_ERROR_POSITION_NV #x864b)
(define-constant GL_VERTEX_ATTRIB_ARRAY0_NV #x8650)
(define-constant GL_VERTEX_ATTRIB_ARRAY1_NV #x8651)
(define-constant GL_VERTEX_ATTRIB_ARRAY2_NV #x8652)
(define-constant GL_VERTEX_ATTRIB_ARRAY3_NV #x8653)
(define-constant GL_VERTEX_ATTRIB_ARRAY4_NV #x8654)
(define-constant GL_VERTEX_ATTRIB_ARRAY5_NV #x8655)
(define-constant GL_VERTEX_ATTRIB_ARRAY6_NV #x8656)
(define-constant GL_VERTEX_ATTRIB_ARRAY7_NV #x8657)
(define-constant GL_VERTEX_ATTRIB_ARRAY8_NV #x8658)
(define-constant GL_VERTEX_ATTRIB_ARRAY9_NV #x8659)
(define-constant GL_VERTEX_ATTRIB_ARRAY10_NV #x865a)
(define-constant GL_VERTEX_ATTRIB_ARRAY11_NV #x865b)
(define-constant GL_VERTEX_ATTRIB_ARRAY12_NV #x865c)
(define-constant GL_VERTEX_ATTRIB_ARRAY13_NV #x865d)
(define-constant GL_VERTEX_ATTRIB_ARRAY14_NV #x865e)
(define-constant GL_VERTEX_ATTRIB_ARRAY15_NV #x865f)
(define-constant GL_MAP1_VERTEX_ATTRIB0_4_NV #x8660)
(define-constant GL_MAP1_VERTEX_ATTRIB1_4_NV #x8661)
(define-constant GL_MAP1_VERTEX_ATTRIB2_4_NV #x8662)
(define-constant GL_MAP1_VERTEX_ATTRIB3_4_NV #x8663)
(define-constant GL_MAP1_VERTEX_ATTRIB4_4_NV #x8664)
(define-constant GL_MAP1_VERTEX_ATTRIB5_4_NV #x8665)
(define-constant GL_MAP1_VERTEX_ATTRIB6_4_NV #x8666)
(define-constant GL_MAP1_VERTEX_ATTRIB7_4_NV #x8667)
(define-constant GL_MAP1_VERTEX_ATTRIB8_4_NV #x8668)
(define-constant GL_MAP1_VERTEX_ATTRIB9_4_NV #x8669)
(define-constant GL_MAP1_VERTEX_ATTRIB10_4_NV #x866a)
(define-constant GL_MAP1_VERTEX_ATTRIB11_4_NV #x866b)
(define-constant GL_MAP1_VERTEX_ATTRIB12_4_NV #x866c)
(define-constant GL_MAP1_VERTEX_ATTRIB13_4_NV #x866d)
(define-constant GL_MAP1_VERTEX_ATTRIB14_4_NV #x866e)
(define-constant GL_MAP1_VERTEX_ATTRIB15_4_NV #x866f)
(define-constant GL_MAP2_VERTEX_ATTRIB0_4_NV #x8670)
(define-constant GL_MAP2_VERTEX_ATTRIB1_4_NV #x8671)
(define-constant GL_MAP2_VERTEX_ATTRIB2_4_NV #x8672)
(define-constant GL_MAP2_VERTEX_ATTRIB3_4_NV #x8673)
(define-constant GL_MAP2_VERTEX_ATTRIB4_4_NV #x8674)
(define-constant GL_MAP2_VERTEX_ATTRIB5_4_NV #x8675)
(define-constant GL_MAP2_VERTEX_ATTRIB6_4_NV #x8676)
(define-constant GL_MAP2_VERTEX_ATTRIB7_4_NV #x8677)
(define-constant GL_MAP2_VERTEX_ATTRIB8_4_NV #x8678)
(define-constant GL_MAP2_VERTEX_ATTRIB9_4_NV #x8679)
(define-constant GL_MAP2_VERTEX_ATTRIB10_4_NV #x867a)
(define-constant GL_MAP2_VERTEX_ATTRIB11_4_NV #x867b)
(define-constant GL_MAP2_VERTEX_ATTRIB12_4_NV #x867c)
(define-constant GL_MAP2_VERTEX_ATTRIB13_4_NV #x867d)
(define-constant GL_MAP2_VERTEX_ATTRIB14_4_NV #x867e)
(define-constant GL_MAP2_VERTEX_ATTRIB15_4_NV #x867f)
(define-constant GL_TEXTURE_MAX_CLAMP_S_SGIX #x8369)
(define-constant GL_TEXTURE_MAX_CLAMP_T_SGIX #x836a)
(define-constant GL_TEXTURE_MAX_CLAMP_R_SGIX #x836b)
(define-constant GL_SCALEBIAS_HINT_SGIX #x8322)
(define-constant GL_INTERLACE_OML #x8980)
(define-constant GL_INTERLACE_READ_OML #x8981)
(define-constant GL_FORMAT_SUBSAMPLE_24_24_OML #x8982)
(define-constant GL_FORMAT_SUBSAMPLE_244_244_OML #x8983)
(define-constant GL_PACK_RESAMPLE_OML #x8984)
(define-constant GL_UNPACK_RESAMPLE_OML #x8985)
(define-constant GL_RESAMPLE_REPLICATE_OML #x8986)
(define-constant GL_RESAMPLE_ZERO_FILL_OML #x8987)
(define-constant GL_RESAMPLE_AVERAGE_OML #x8988)
(define-constant GL_RESAMPLE_DECIMATE_OML #x8989)
(define-constant GL_DEPTH_STENCIL_TO_RGBA_NV #x886e)
(define-constant GL_DEPTH_STENCIL_TO_BGRA_NV #x886f)
(define-constant GL_BUMP_ROT_MATRIX_ATI #x8775)
(define-constant GL_BUMP_ROT_MATRIX_SIZE_ATI #x8776)
(define-constant GL_BUMP_NUM_TEX_UNITS_ATI #x8777)
(define-constant GL_BUMP_TEX_UNITS_ATI #x8778)
(define-constant GL_DUDV_ATI #x8779)
(define-constant GL_DU8DV8_ATI #x877a)
(define-constant GL_BUMP_ENVMAP_ATI #x877b)
(define-constant GL_BUMP_TARGET_ATI #x877c)
(define-constant GL_FRAGMENT_SHADER_ATI #x8920)
(define-constant GL_REG_0_ATI #x8921)
(define-constant GL_REG_1_ATI #x8922)
(define-constant GL_REG_2_ATI #x8923)
(define-constant GL_REG_3_ATI #x8924)
(define-constant GL_REG_4_ATI #x8925)
(define-constant GL_REG_5_ATI #x8926)
(define-constant GL_REG_6_ATI #x8927)
(define-constant GL_REG_7_ATI #x8928)
(define-constant GL_REG_8_ATI #x8929)
(define-constant GL_REG_9_ATI #x892a)
(define-constant GL_REG_10_ATI #x892b)
(define-constant GL_REG_11_ATI #x892c)
(define-constant GL_REG_12_ATI #x892d)
(define-constant GL_REG_13_ATI #x892e)
(define-constant GL_REG_14_ATI #x892f)
(define-constant GL_REG_15_ATI #x8930)
(define-constant GL_REG_16_ATI #x8931)
(define-constant GL_REG_17_ATI #x8932)
(define-constant GL_REG_18_ATI #x8933)
(define-constant GL_REG_19_ATI #x8934)
(define-constant GL_REG_20_ATI #x8935)
(define-constant GL_REG_21_ATI #x8936)
(define-constant GL_REG_22_ATI #x8937)
(define-constant GL_REG_23_ATI #x8938)
(define-constant GL_REG_24_ATI #x8939)
(define-constant GL_REG_25_ATI #x893a)
(define-constant GL_REG_26_ATI #x893b)
(define-constant GL_REG_27_ATI #x893c)
(define-constant GL_REG_28_ATI #x893d)
(define-constant GL_REG_29_ATI #x893e)
(define-constant GL_REG_30_ATI #x893f)
(define-constant GL_REG_31_ATI #x8940)
(define-constant GL_CON_0_ATI #x8941)
(define-constant GL_CON_1_ATI #x8942)
(define-constant GL_CON_2_ATI #x8943)
(define-constant GL_CON_3_ATI #x8944)
(define-constant GL_CON_4_ATI #x8945)
(define-constant GL_CON_5_ATI #x8946)
(define-constant GL_CON_6_ATI #x8947)
(define-constant GL_CON_7_ATI #x8948)
(define-constant GL_CON_8_ATI #x8949)
(define-constant GL_CON_9_ATI #x894a)
(define-constant GL_CON_10_ATI #x894b)
(define-constant GL_CON_11_ATI #x894c)
(define-constant GL_CON_12_ATI #x894d)
(define-constant GL_CON_13_ATI #x894e)
(define-constant GL_CON_14_ATI #x894f)
(define-constant GL_CON_15_ATI #x8950)
(define-constant GL_CON_16_ATI #x8951)
(define-constant GL_CON_17_ATI #x8952)
(define-constant GL_CON_18_ATI #x8953)
(define-constant GL_CON_19_ATI #x8954)
(define-constant GL_CON_20_ATI #x8955)
(define-constant GL_CON_21_ATI #x8956)
(define-constant GL_CON_22_ATI #x8957)
(define-constant GL_CON_23_ATI #x8958)
(define-constant GL_CON_24_ATI #x8959)
(define-constant GL_CON_25_ATI #x895a)
(define-constant GL_CON_26_ATI #x895b)
(define-constant GL_CON_27_ATI #x895c)
(define-constant GL_CON_28_ATI #x895d)
(define-constant GL_CON_29_ATI #x895e)
(define-constant GL_CON_30_ATI #x895f)
(define-constant GL_CON_31_ATI #x8960)
(define-constant GL_MOV_ATI #x8961)
(define-constant GL_ADD_ATI #x8963)
(define-constant GL_MUL_ATI #x8964)
(define-constant GL_SUB_ATI #x8965)
(define-constant GL_DOT3_ATI #x8966)
(define-constant GL_DOT4_ATI #x8967)
(define-constant GL_MAD_ATI #x8968)
(define-constant GL_LERP_ATI #x8969)
(define-constant GL_CND_ATI #x896a)
(define-constant GL_CND0_ATI #x896b)
(define-constant GL_DOT2_ADD_ATI #x896c)
(define-constant GL_SECONDARY_INTERPOLATOR_ATI #x896d)
(define-constant GL_NUM_FRAGMENT_REGISTERS_ATI #x896e)
(define-constant GL_NUM_FRAGMENT_CONSTANTS_ATI #x896f)
(define-constant GL_NUM_PASSES_ATI #x8970)
(define-constant GL_NUM_INSTRUCTIONS_PER_PASS_ATI #x8971)
(define-constant GL_NUM_INSTRUCTIONS_TOTAL_ATI #x8972)
(define-constant GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI #x8973)
(define-constant GL_NUM_LOOPBACK_COMPONENTS_ATI #x8974)
(define-constant GL_COLOR_ALPHA_PAIRING_ATI #x8975)
(define-constant GL_SWIZZLE_STR_ATI #x8976)
(define-constant GL_SWIZZLE_STQ_ATI #x8977)
(define-constant GL_SWIZZLE_STR_DR_ATI #x8978)
(define-constant GL_SWIZZLE_STQ_DQ_ATI #x8979)
(define-constant GL_SWIZZLE_STRQ_ATI #x897a)
(define-constant GL_SWIZZLE_STRQ_DQ_ATI #x897b)
(define-constant GL_RED_BIT_ATI #x0001)
(define-constant GL_GREEN_BIT_ATI #x0002)
(define-constant GL_BLUE_BIT_ATI #x0004)
(define-constant GL_2X_BIT_ATI #x0001)
(define-constant GL_4X_BIT_ATI #x0002)
(define-constant GL_8X_BIT_ATI #x0004)
(define-constant GL_HALF_BIT_ATI #x0008)
(define-constant GL_QUARTER_BIT_ATI #x0010)
(define-constant GL_EIGHTH_BIT_ATI #x0020)
(define-constant GL_SATURATE_BIT_ATI #x0040)
(define-constant GL_COMP_BIT_ATI #x0002)
(define-constant GL_NEGATE_BIT_ATI #x0004)
(define-constant GL_BIAS_BIT_ATI #x0008)
(define-constant GL_PN_TRIANGLES_ATI #x87f0)
(define-constant GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI #x87f1)
(define-constant GL_PN_TRIANGLES_POINT_MODE_ATI #x87f2)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_ATI #x87f3)
(define-constant GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI #x87f4)
(define-constant GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI #x87f5)
(define-constant GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI #x87f6)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI #x87f7)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI #x87f8)
(define-constant GL_STATIC_ATI #x8760)
(define-constant GL_DYNAMIC_ATI #x8761)
(define-constant GL_PRESERVE_ATI #x8762)
(define-constant GL_DISCARD_ATI #x8763)
(define-constant GL_OBJECT_BUFFER_SIZE_ATI #x8764)
(define-constant GL_OBJECT_BUFFER_USAGE_ATI #x8765)
(define-constant GL_ARRAY_OBJECT_BUFFER_ATI #x8766)
(define-constant GL_ARRAY_OBJECT_OFFSET_ATI #x8767)
(define-constant GL_VERTEX_SHADER_EXT #x8780)
(define-constant GL_VERTEX_SHADER_BINDING_EXT #x8781)
(define-constant GL_OP_INDEX_EXT #x8782)
(define-constant GL_OP_NEGATE_EXT #x8783)
(define-constant GL_OP_DOT3_EXT #x8784)
(define-constant GL_OP_DOT4_EXT #x8785)
(define-constant GL_OP_MUL_EXT #x8786)
(define-constant GL_OP_ADD_EXT #x8787)
(define-constant GL_OP_MADD_EXT #x8788)
(define-constant GL_OP_FRAC_EXT #x8789)
(define-constant GL_OP_MAX_EXT #x878a)
(define-constant GL_OP_MIN_EXT #x878b)
(define-constant GL_OP_SET_GE_EXT #x878c)
(define-constant GL_OP_SET_LT_EXT #x878d)
(define-constant GL_OP_CLAMP_EXT #x878e)
(define-constant GL_OP_FLOOR_EXT #x878f)
(define-constant GL_OP_ROUND_EXT #x8790)
(define-constant GL_OP_EXP_BASE_2_EXT #x8791)
(define-constant GL_OP_LOG_BASE_2_EXT #x8792)
(define-constant GL_OP_POWER_EXT #x8793)
(define-constant GL_OP_RECIP_EXT #x8794)
(define-constant GL_OP_RECIP_SQRT_EXT #x8795)
(define-constant GL_OP_SUB_EXT #x8796)
(define-constant GL_OP_CROSS_PRODUCT_EXT #x8797)
(define-constant GL_OP_MULTIPLY_MATRIX_EXT #x8798)
(define-constant GL_OP_MOV_EXT #x8799)
(define-constant GL_OUTPUT_VERTEX_EXT #x879a)
(define-constant GL_OUTPUT_COLOR0_EXT #x879b)
(define-constant GL_OUTPUT_COLOR1_EXT #x879c)
(define-constant GL_OUTPUT_TEXTURE_COORD0_EXT #x879d)
(define-constant GL_OUTPUT_TEXTURE_COORD1_EXT #x879e)
(define-constant GL_OUTPUT_TEXTURE_COORD2_EXT #x879f)
(define-constant GL_OUTPUT_TEXTURE_COORD3_EXT #x87a0)
(define-constant GL_OUTPUT_TEXTURE_COORD4_EXT #x87a1)
(define-constant GL_OUTPUT_TEXTURE_COORD5_EXT #x87a2)
(define-constant GL_OUTPUT_TEXTURE_COORD6_EXT #x87a3)
(define-constant GL_OUTPUT_TEXTURE_COORD7_EXT #x87a4)
(define-constant GL_OUTPUT_TEXTURE_COORD8_EXT #x87a5)
(define-constant GL_OUTPUT_TEXTURE_COORD9_EXT #x87a6)
(define-constant GL_OUTPUT_TEXTURE_COORD10_EXT #x87a7)
(define-constant GL_OUTPUT_TEXTURE_COORD11_EXT #x87a8)
(define-constant GL_OUTPUT_TEXTURE_COORD12_EXT #x87a9)
(define-constant GL_OUTPUT_TEXTURE_COORD13_EXT #x87aa)
(define-constant GL_OUTPUT_TEXTURE_COORD14_EXT #x87ab)
(define-constant GL_OUTPUT_TEXTURE_COORD15_EXT #x87ac)
(define-constant GL_OUTPUT_TEXTURE_COORD16_EXT #x87ad)
(define-constant GL_OUTPUT_TEXTURE_COORD17_EXT #x87ae)
(define-constant GL_OUTPUT_TEXTURE_COORD18_EXT #x87af)
(define-constant GL_OUTPUT_TEXTURE_COORD19_EXT #x87b0)
(define-constant GL_OUTPUT_TEXTURE_COORD20_EXT #x87b1)
(define-constant GL_OUTPUT_TEXTURE_COORD21_EXT #x87b2)
(define-constant GL_OUTPUT_TEXTURE_COORD22_EXT #x87b3)
(define-constant GL_OUTPUT_TEXTURE_COORD23_EXT #x87b4)
(define-constant GL_OUTPUT_TEXTURE_COORD24_EXT #x87b5)
(define-constant GL_OUTPUT_TEXTURE_COORD25_EXT #x87b6)
(define-constant GL_OUTPUT_TEXTURE_COORD26_EXT #x87b7)
(define-constant GL_OUTPUT_TEXTURE_COORD27_EXT #x87b8)
(define-constant GL_OUTPUT_TEXTURE_COORD28_EXT #x87b9)
(define-constant GL_OUTPUT_TEXTURE_COORD29_EXT #x87ba)
(define-constant GL_OUTPUT_TEXTURE_COORD30_EXT #x87bb)
(define-constant GL_OUTPUT_TEXTURE_COORD31_EXT #x87bc)
(define-constant GL_OUTPUT_FOG_EXT #x87bd)
(define-constant GL_SCALAR_EXT #x87be)
(define-constant GL_VECTOR_EXT #x87bf)
(define-constant GL_MATRIX_EXT #x87c0)
(define-constant GL_VARIANT_EXT #x87c1)
(define-constant GL_INVARIANT_EXT #x87c2)
(define-constant GL_LOCAL_CONSTANT_EXT #x87c3)
(define-constant GL_LOCAL_EXT #x87c4)
(define-constant GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT #x87c5)
(define-constant GL_MAX_VERTEX_SHADER_VARIANTS_EXT #x87c6)
(define-constant GL_MAX_VERTEX_SHADER_INVARIANTS_EXT #x87c7)
(define-constant GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87c8)
(define-constant GL_MAX_VERTEX_SHADER_LOCALS_EXT #x87c9)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT #x87ca)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT #x87cb)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87cc)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT #x87cd)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT #x87ce)
(define-constant GL_VERTEX_SHADER_INSTRUCTIONS_EXT #x87cf)
(define-constant GL_VERTEX_SHADER_VARIANTS_EXT #x87d0)
(define-constant GL_VERTEX_SHADER_INVARIANTS_EXT #x87d1)
(define-constant GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87d2)
(define-constant GL_VERTEX_SHADER_LOCALS_EXT #x87d3)
(define-constant GL_VERTEX_SHADER_OPTIMIZED_EXT #x87d4)
(define-constant GL_X_EXT #x87d5)
(define-constant GL_Y_EXT #x87d6)
(define-constant GL_Z_EXT #x87d7)
(define-constant GL_W_EXT #x87d8)
(define-constant GL_NEGATIVE_X_EXT #x87d9)
(define-constant GL_NEGATIVE_Y_EXT #x87da)
(define-constant GL_NEGATIVE_Z_EXT #x87db)
(define-constant GL_NEGATIVE_W_EXT #x87dc)
(define-constant GL_ZERO_EXT #x87dd)
(define-constant GL_ONE_EXT #x87de)
(define-constant GL_NEGATIVE_ONE_EXT #x87df)
(define-constant GL_NORMALIZED_RANGE_EXT #x87e0)
(define-constant GL_FULL_RANGE_EXT #x87e1)
(define-constant GL_CURRENT_VERTEX_EXT #x87e2)
(define-constant GL_MVP_MATRIX_EXT #x87e3)
(define-constant GL_VARIANT_VALUE_EXT #x87e4)
(define-constant GL_VARIANT_DATATYPE_EXT #x87e5)
(define-constant GL_VARIANT_ARRAY_STRIDE_EXT #x87e6)
(define-constant GL_VARIANT_ARRAY_TYPE_EXT #x87e7)
(define-constant GL_VARIANT_ARRAY_EXT #x87e8)
(define-constant GL_VARIANT_ARRAY_POINTER_EXT #x87e9)
(define-constant GL_INVARIANT_VALUE_EXT #x87ea)
(define-constant GL_INVARIANT_DATATYPE_EXT #x87eb)
(define-constant GL_LOCAL_CONSTANT_VALUE_EXT #x87ec)
(define-constant GL_LOCAL_CONSTANT_DATATYPE_EXT #x87ed)
(define-constant GL_MAX_VERTEX_STREAMS_ATI #x876b)
(define-constant GL_VERTEX_STREAM0_ATI #x876c)
(define-constant GL_VERTEX_STREAM1_ATI #x876d)
(define-constant GL_VERTEX_STREAM2_ATI #x876e)
(define-constant GL_VERTEX_STREAM3_ATI #x876f)
(define-constant GL_VERTEX_STREAM4_ATI #x8770)
(define-constant GL_VERTEX_STREAM5_ATI #x8771)
(define-constant GL_VERTEX_STREAM6_ATI #x8772)
(define-constant GL_VERTEX_STREAM7_ATI #x8773)
(define-constant GL_VERTEX_SOURCE_ATI #x8774)
(define-constant GL_ELEMENT_ARRAY_ATI #x8768)
(define-constant GL_ELEMENT_ARRAY_TYPE_ATI #x8769)
(define-constant GL_ELEMENT_ARRAY_POINTER_ATI #x876a)
(define-constant GL_QUAD_MESH_SUN #x8614)
(define-constant GL_TRIANGLE_MESH_SUN #x8615)
(define-constant GL_SLICE_ACCUM_SUN #x85cc)
(define-constant GL_MULTISAMPLE_FILTER_HINT_NV #x8534)
(define-constant GL_DEPTH_CLAMP_NV #x864f)
(define-constant GL_PIXEL_COUNTER_BITS_NV #x8864)
(define-constant GL_CURRENT_OCCLUSION_QUERY_ID_NV #x8865)
(define-constant GL_PIXEL_COUNT_NV #x8866)
(define-constant GL_PIXEL_COUNT_AVAILABLE_NV #x8867)
(define-constant GL_POINT_SPRITE_NV #x8861)
(define-constant GL_COORD_REPLACE_NV #x8862)
(define-constant GL_POINT_SPRITE_R_MODE_NV #x8863)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV #x8850)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV #x8851)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV #x8852)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV #x8853)
(define-constant GL_OFFSET_HILO_TEXTURE_2D_NV #x8854)
(define-constant GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV #x8855)
(define-constant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV #x8856)
(define-constant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV #x8857)
(define-constant GL_DEPENDENT_HILO_TEXTURE_2D_NV #x8858)
(define-constant GL_DEPENDENT_RGB_TEXTURE_3D_NV #x8859)
(define-constant GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV #x885a)
(define-constant GL_DOT_PRODUCT_PASS_THROUGH_NV #x885b)
(define-constant GL_DOT_PRODUCT_TEXTURE_1D_NV #x885c)
(define-constant GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV #x885d)
(define-constant GL_HILO8_NV #x885e)
(define-constant GL_SIGNED_HILO8_NV #x885f)
(define-constant GL_FORCE_BLUE_TO_ONE_NV #x8860)
(define-constant GL_STENCIL_TEST_TWO_SIDE_EXT #x8910)
(define-constant GL_ACTIVE_STENCIL_FACE_EXT #x8911)
(define-constant GL_TEXT_FRAGMENT_SHADER_ATI #x8200)
(define-constant GL_UNPACK_CLIENT_STORAGE_APPLE #x85b2)
(define-constant GL_ELEMENT_ARRAY_APPLE #x8768)
(define-constant GL_ELEMENT_ARRAY_TYPE_APPLE #x8769)
(define-constant GL_ELEMENT_ARRAY_POINTER_APPLE #x876a)
(define-constant GL_DRAW_PIXELS_APPLE #x8a0a)
(define-constant GL_FENCE_APPLE #x8a0b)
(define-constant GL_VERTEX_ARRAY_BINDING_APPLE #x85b5)
(define-constant GL_VERTEX_ARRAY_RANGE_APPLE #x851d)
(define-constant GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE #x851e)
(define-constant GL_VERTEX_ARRAY_STORAGE_HINT_APPLE #x851f)
(define-constant GL_VERTEX_ARRAY_RANGE_POINTER_APPLE #x8521)
(define-constant GL_STORAGE_CACHED_APPLE #x85be)
(define-constant GL_STORAGE_SHARED_APPLE #x85bf)
(define-constant GL_YCBCR_422_APPLE #x85b9)
(define-constant GL_UNSIGNED_SHORT_8_8_APPLE #x85ba)
(define-constant GL_UNSIGNED_SHORT_8_8_REV_APPLE #x85bb)
(define-constant GL_RGB_S3TC #x83a0)
(define-constant GL_RGB4_S3TC #x83a1)
(define-constant GL_RGBA_S3TC #x83a2)
(define-constant GL_RGBA4_S3TC #x83a3)
(define-constant GL_MAX_DRAW_BUFFERS_ATI #x8824)
(define-constant GL_DRAW_BUFFER0_ATI #x8825)
(define-constant GL_DRAW_BUFFER1_ATI #x8826)
(define-constant GL_DRAW_BUFFER2_ATI #x8827)
(define-constant GL_DRAW_BUFFER3_ATI #x8828)
(define-constant GL_DRAW_BUFFER4_ATI #x8829)
(define-constant GL_DRAW_BUFFER5_ATI #x882a)
(define-constant GL_DRAW_BUFFER6_ATI #x882b)
(define-constant GL_DRAW_BUFFER7_ATI #x882c)
(define-constant GL_DRAW_BUFFER8_ATI #x882d)
(define-constant GL_DRAW_BUFFER9_ATI #x882e)
(define-constant GL_DRAW_BUFFER10_ATI #x882f)
(define-constant GL_DRAW_BUFFER11_ATI #x8830)
(define-constant GL_DRAW_BUFFER12_ATI #x8831)
(define-constant GL_DRAW_BUFFER13_ATI #x8832)
(define-constant GL_DRAW_BUFFER14_ATI #x8833)
(define-constant GL_DRAW_BUFFER15_ATI #x8834)
(define-constant GL_TYPE_RGBA_FLOAT_ATI #x8820)
(define-constant GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI #x8835)
(define-constant GL_MODULATE_ADD_ATI #x8744)
(define-constant GL_MODULATE_SIGNED_ADD_ATI #x8745)
(define-constant GL_MODULATE_SUBTRACT_ATI #x8746)
(define-constant GL_RGBA_FLOAT32_ATI #x8814)
(define-constant GL_RGB_FLOAT32_ATI #x8815)
(define-constant GL_ALPHA_FLOAT32_ATI #x8816)
(define-constant GL_INTENSITY_FLOAT32_ATI #x8817)
(define-constant GL_LUMINANCE_FLOAT32_ATI #x8818)
(define-constant GL_LUMINANCE_ALPHA_FLOAT32_ATI #x8819)
(define-constant GL_RGBA_FLOAT16_ATI #x881a)
(define-constant GL_RGB_FLOAT16_ATI #x881b)
(define-constant GL_ALPHA_FLOAT16_ATI #x881c)
(define-constant GL_INTENSITY_FLOAT16_ATI #x881d)
(define-constant GL_LUMINANCE_FLOAT16_ATI #x881e)
(define-constant GL_LUMINANCE_ALPHA_FLOAT16_ATI #x881f)
(define-constant GL_FLOAT_R_NV #x8880)
(define-constant GL_FLOAT_RG_NV #x8881)
(define-constant GL_FLOAT_RGB_NV #x8882)
(define-constant GL_FLOAT_RGBA_NV #x8883)
(define-constant GL_FLOAT_R16_NV #x8884)
(define-constant GL_FLOAT_R32_NV #x8885)
(define-constant GL_FLOAT_RG16_NV #x8886)
(define-constant GL_FLOAT_RG32_NV #x8887)
(define-constant GL_FLOAT_RGB16_NV #x8888)
(define-constant GL_FLOAT_RGB32_NV #x8889)
(define-constant GL_FLOAT_RGBA16_NV #x888a)
(define-constant GL_FLOAT_RGBA32_NV #x888b)
(define-constant GL_TEXTURE_FLOAT_COMPONENTS_NV #x888c)
(define-constant GL_FLOAT_CLEAR_COLOR_VALUE_NV #x888d)
(define-constant GL_FLOAT_RGBA_MODE_NV #x888e)
(define-constant GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV #x8868)
(define-constant GL_FRAGMENT_PROGRAM_NV #x8870)
(define-constant GL_MAX_TEXTURE_COORDS_NV #x8871)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS_NV #x8872)
(define-constant GL_FRAGMENT_PROGRAM_BINDING_NV #x8873)
(define-constant GL_PROGRAM_ERROR_STRING_NV #x8874)
(define-constant GL_HALF_FLOAT_NV #x140b)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_NV #x8878)
(define-constant GL_READ_PIXEL_DATA_RANGE_NV #x8879)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV #x887a)
(define-constant GL_READ_PIXEL_DATA_RANGE_LENGTH_NV #x887b)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV #x887c)
(define-constant GL_READ_PIXEL_DATA_RANGE_POINTER_NV #x887d)
(define-constant GL_PRIMITIVE_RESTART_NV #x8558)
(define-constant GL_PRIMITIVE_RESTART_INDEX_NV #x8559)
(define-constant GL_TEXTURE_UNSIGNED_REMAP_MODE_NV #x888f)
(define-constant GL_STENCIL_BACK_FUNC_ATI #x8800)
(define-constant GL_STENCIL_BACK_FAIL_ATI #x8801)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI #x8802)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI #x8803)
(define-constant GL_IMPLEMENTATION_COLOR_READ_TYPE_OES #x8b9a)
(define-constant GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES #x8b9b)
(define-constant GL_DEPTH_BOUNDS_TEST_EXT #x8890)
(define-constant GL_DEPTH_BOUNDS_EXT #x8891)
(define-constant GL_MIRROR_CLAMP_EXT #x8742)
(define-constant GL_MIRROR_CLAMP_TO_EDGE_EXT #x8743)
(define-constant GL_MIRROR_CLAMP_TO_BORDER_EXT #x8912)
(define-constant GL_BLEND_EQUATION_RGB_EXT #x8009)
(define-constant GL_BLEND_EQUATION_ALPHA_EXT #x883d)
(define-constant GL_PACK_INVERT_MESA #x8758)
(define-constant GL_UNSIGNED_SHORT_8_8_MESA #x85ba)
(define-constant GL_UNSIGNED_SHORT_8_8_REV_MESA #x85bb)
(define-constant GL_YCBCR_MESA #x8757)
(define-constant GL_PIXEL_PACK_BUFFER_EXT #x88eb)
(define-constant GL_PIXEL_UNPACK_BUFFER_EXT #x88ec)
(define-constant GL_PIXEL_PACK_BUFFER_BINDING_EXT #x88ed)
(define-constant GL_PIXEL_UNPACK_BUFFER_BINDING_EXT #x88ef)
(define-constant GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV #x88f4)
(define-constant GL_MAX_PROGRAM_CALL_DEPTH_NV #x88f5)
(define-constant GL_MAX_PROGRAM_IF_DEPTH_NV #x88f6)
(define-constant GL_MAX_PROGRAM_LOOP_DEPTH_NV #x88f7)
(define-constant GL_MAX_PROGRAM_LOOP_COUNT_NV #x88f8)
(define-constant GL_INVALID_FRAMEBUFFER_OPERATION_EXT #x0506)
(define-constant GL_MAX_RENDERBUFFER_SIZE_EXT #x84e8)
(define-constant GL_FRAMEBUFFER_BINDING_EXT #x8ca6)
(define-constant GL_RENDERBUFFER_BINDING_EXT #x8ca7)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT #x8cd0)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT #x8cd1)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT #x8cd2)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT #x8cd3)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT #x8cd4)
(define-constant GL_FRAMEBUFFER_COMPLETE_EXT #x8cd5)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT #x8cd6)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT #x8cd7)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DUPLICATE_ATTACHMENT_EXT #x8cd8)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT #x8cd9)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT #x8cda)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT #x8cdb)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT #x8cdc)
(define-constant GL_FRAMEBUFFER_UNSUPPORTED_EXT #x8cdd)
(define-constant GL_MAX_COLOR_ATTACHMENTS_EXT #x8cdf)
(define-constant GL_COLOR_ATTACHMENT0_EXT #x8ce0)
(define-constant GL_COLOR_ATTACHMENT1_EXT #x8ce1)
(define-constant GL_COLOR_ATTACHMENT2_EXT #x8ce2)
(define-constant GL_COLOR_ATTACHMENT3_EXT #x8ce3)
(define-constant GL_COLOR_ATTACHMENT4_EXT #x8ce4)
(define-constant GL_COLOR_ATTACHMENT5_EXT #x8ce5)
(define-constant GL_COLOR_ATTACHMENT6_EXT #x8ce6)
(define-constant GL_COLOR_ATTACHMENT7_EXT #x8ce7)
(define-constant GL_COLOR_ATTACHMENT8_EXT #x8ce8)
(define-constant GL_COLOR_ATTACHMENT9_EXT #x8ce9)
(define-constant GL_COLOR_ATTACHMENT10_EXT #x8cea)
(define-constant GL_COLOR_ATTACHMENT11_EXT #x8ceb)
(define-constant GL_COLOR_ATTACHMENT12_EXT #x8cec)
(define-constant GL_COLOR_ATTACHMENT13_EXT #x8ced)
(define-constant GL_COLOR_ATTACHMENT14_EXT #x8cee)
(define-constant GL_COLOR_ATTACHMENT15_EXT #x8cef)
(define-constant GL_DEPTH_ATTACHMENT_EXT #x8d00)
(define-constant GL_STENCIL_ATTACHMENT_EXT #x8d20)
(define-constant GL_FRAMEBUFFER_EXT #x8d40)
(define-constant GL_RENDERBUFFER_EXT #x8d41)
(define-constant GL_RENDERBUFFER_WIDTH_EXT #x8d42)
(define-constant GL_RENDERBUFFER_HEIGHT_EXT #x8d43)
(define-constant GL_RENDERBUFFER_INTERNAL_FORMAT_EXT #x8d44)
(define-constant GL_STENCIL_INDEX_EXT #x8d45)
(define-constant GL_STENCIL_INDEX1_EXT #x8d46)
(define-constant GL_STENCIL_INDEX4_EXT #x8d47)
(define-constant GL_STENCIL_INDEX8_EXT #x8d48)
(define-constant GL_STENCIL_INDEX16_EXT #x8d49)
(define-constant GL_RENDERBUFFER_RED_SIZE_EXT #x8d50)
(define-constant GL_RENDERBUFFER_GREEN_SIZE_EXT #x8d51)
(define-constant GL_RENDERBUFFER_BLUE_SIZE_EXT #x8d52)
(define-constant GL_RENDERBUFFER_ALPHA_SIZE_EXT #x8d53)
(define-constant GL_RENDERBUFFER_DEPTH_SIZE_EXT #x8d54)
(define-constant GL_RENDERBUFFER_STENCIL_SIZE_EXT #x8d55)

;; API entry points
(define-entry-point glBlendColor PFNGLBLENDCOLORPROC "typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);")
(define-entry-point glBlendEquation PFNGLBLENDEQUATIONPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);")
(define-entry-point glDrawRangeElements PFNGLDRAWRANGEELEMENTSPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);")
(define-entry-point glColorTable PFNGLCOLORTABLEPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);")
(define-entry-point glColorTableParameterfv PFNGLCOLORTABLEPARAMETERFVPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glColorTableParameteriv PFNGLCOLORTABLEPARAMETERIVPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyColorTable PFNGLCOPYCOLORTABLEPROC "typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glGetColorTable PFNGLGETCOLORTABLEPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);")
(define-entry-point glGetColorTableParameterfv PFNGLGETCOLORTABLEPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetColorTableParameteriv PFNGLGETCOLORTABLEPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glColorSubTable PFNGLCOLORSUBTABLEPROC "typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);")
(define-entry-point glCopyColorSubTable PFNGLCOPYCOLORSUBTABLEPROC "typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);")
(define-entry-point glConvolutionFilter1D PFNGLCONVOLUTIONFILTER1DPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);")
(define-entry-point glConvolutionFilter2D PFNGLCONVOLUTIONFILTER2DPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);")
(define-entry-point glConvolutionParameterf PFNGLCONVOLUTIONPARAMETERFPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);")
(define-entry-point glConvolutionParameterfv PFNGLCONVOLUTIONPARAMETERFVPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glConvolutionParameteri PFNGLCONVOLUTIONPARAMETERIPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);")
(define-entry-point glConvolutionParameteriv PFNGLCONVOLUTIONPARAMETERIVPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyConvolutionFilter1D PFNGLCOPYCONVOLUTIONFILTER1DPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyConvolutionFilter2D PFNGLCOPYCONVOLUTIONFILTER2DPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetConvolutionFilter PFNGLGETCONVOLUTIONFILTERPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);")
(define-entry-point glGetConvolutionParameterfv PFNGLGETCONVOLUTIONPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetConvolutionParameteriv PFNGLGETCONVOLUTIONPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetSeparableFilter PFNGLGETSEPARABLEFILTERPROC "typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);")
(define-entry-point glSeparableFilter2D PFNGLSEPARABLEFILTER2DPROC "typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);")
(define-entry-point glGetHistogram PFNGLGETHISTOGRAMPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);")
(define-entry-point glGetHistogramParameterfv PFNGLGETHISTOGRAMPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetHistogramParameteriv PFNGLGETHISTOGRAMPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMinmax PFNGLGETMINMAXPROC "typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);")
(define-entry-point glGetMinmaxParameterfv PFNGLGETMINMAXPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMinmaxParameteriv PFNGLGETMINMAXPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glHistogram PFNGLHISTOGRAMPROC "typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);")
(define-entry-point glMinmax PFNGLMINMAXPROC "typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);")
(define-entry-point glResetHistogram PFNGLRESETHISTOGRAMPROC "typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);")
(define-entry-point glResetMinmax PFNGLRESETMINMAXPROC "typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);")
(define-entry-point glTexImage3D PFNGLTEXIMAGE3DPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glTexSubImage3D PFNGLTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glCopyTexSubImage3D PFNGLCOPYTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glActiveTexture PFNGLACTIVETEXTUREPROC "typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);")
(define-entry-point glClientActiveTexture PFNGLCLIENTACTIVETEXTUREPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);")
(define-entry-point glMultiTexCoord1d PFNGLMULTITEXCOORD1DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);")
(define-entry-point glMultiTexCoord1dv PFNGLMULTITEXCOORD1DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord1f PFNGLMULTITEXCOORD1FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);")
(define-entry-point glMultiTexCoord1fv PFNGLMULTITEXCOORD1FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord1i PFNGLMULTITEXCOORD1IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);")
(define-entry-point glMultiTexCoord1iv PFNGLMULTITEXCOORD1IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord1s PFNGLMULTITEXCOORD1SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);")
(define-entry-point glMultiTexCoord1sv PFNGLMULTITEXCOORD1SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord2d PFNGLMULTITEXCOORD2DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);")
(define-entry-point glMultiTexCoord2dv PFNGLMULTITEXCOORD2DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord2f PFNGLMULTITEXCOORD2FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);")
(define-entry-point glMultiTexCoord2fv PFNGLMULTITEXCOORD2FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord2i PFNGLMULTITEXCOORD2IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);")
(define-entry-point glMultiTexCoord2iv PFNGLMULTITEXCOORD2IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord2s PFNGLMULTITEXCOORD2SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);")
(define-entry-point glMultiTexCoord2sv PFNGLMULTITEXCOORD2SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord3d PFNGLMULTITEXCOORD3DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);")
(define-entry-point glMultiTexCoord3dv PFNGLMULTITEXCOORD3DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord3f PFNGLMULTITEXCOORD3FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);")
(define-entry-point glMultiTexCoord3fv PFNGLMULTITEXCOORD3FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord3i PFNGLMULTITEXCOORD3IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);")
(define-entry-point glMultiTexCoord3iv PFNGLMULTITEXCOORD3IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord3s PFNGLMULTITEXCOORD3SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);")
(define-entry-point glMultiTexCoord3sv PFNGLMULTITEXCOORD3SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord4d PFNGLMULTITEXCOORD4DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);")
(define-entry-point glMultiTexCoord4dv PFNGLMULTITEXCOORD4DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord4f PFNGLMULTITEXCOORD4FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);")
(define-entry-point glMultiTexCoord4fv PFNGLMULTITEXCOORD4FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord4i PFNGLMULTITEXCOORD4IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);")
(define-entry-point glMultiTexCoord4iv PFNGLMULTITEXCOORD4IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord4s PFNGLMULTITEXCOORD4SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);")
(define-entry-point glMultiTexCoord4sv PFNGLMULTITEXCOORD4SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glLoadTransposeMatrixf PFNGLLOADTRANSPOSEMATRIXFPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);")
(define-entry-point glLoadTransposeMatrixd PFNGLLOADTRANSPOSEMATRIXDPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);")
(define-entry-point glMultTransposeMatrixf PFNGLMULTTRANSPOSEMATRIXFPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);")
(define-entry-point glMultTransposeMatrixd PFNGLMULTTRANSPOSEMATRIXDPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);")
(define-entry-point glSampleCoverage PFNGLSAMPLECOVERAGEPROC "typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glCompressedTexImage3D PFNGLCOMPRESSEDTEXIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexImage2D PFNGLCOMPRESSEDTEXIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexImage1D PFNGLCOMPRESSEDTEXIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage3D PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage2D PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage1D PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glGetCompressedTexImage PFNGLGETCOMPRESSEDTEXIMAGEPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);")
(define-entry-point glBlendFuncSeparate PFNGLBLENDFUNCSEPARATEPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glFogCoordf PFNGLFOGCOORDFPROC "typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);")
(define-entry-point glFogCoordfv PFNGLFOGCOORDFVPROC "typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);")
(define-entry-point glFogCoordd PFNGLFOGCOORDDPROC "typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);")
(define-entry-point glFogCoorddv PFNGLFOGCOORDDVPROC "typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);")
(define-entry-point glFogCoordPointer PFNGLFOGCOORDPOINTERPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glMultiDrawArrays PFNGLMULTIDRAWARRAYSPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);")
(define-entry-point glMultiDrawElements PFNGLMULTIDRAWELEMENTSPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);")
(define-entry-point glPointParameterf PFNGLPOINTPARAMETERFPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfv PFNGLPOINTPARAMETERFVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glPointParameteri PFNGLPOINTPARAMETERIPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);")
(define-entry-point glPointParameteriv PFNGLPOINTPARAMETERIVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glSecondaryColor3b PFNGLSECONDARYCOLOR3BPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);")
(define-entry-point glSecondaryColor3bv PFNGLSECONDARYCOLOR3BVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);")
(define-entry-point glSecondaryColor3d PFNGLSECONDARYCOLOR3DPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);")
(define-entry-point glSecondaryColor3dv PFNGLSECONDARYCOLOR3DVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);")
(define-entry-point glSecondaryColor3f PFNGLSECONDARYCOLOR3FPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);")
(define-entry-point glSecondaryColor3fv PFNGLSECONDARYCOLOR3FVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);")
(define-entry-point glSecondaryColor3i PFNGLSECONDARYCOLOR3IPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);")
(define-entry-point glSecondaryColor3iv PFNGLSECONDARYCOLOR3IVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);")
(define-entry-point glSecondaryColor3s PFNGLSECONDARYCOLOR3SPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);")
(define-entry-point glSecondaryColor3sv PFNGLSECONDARYCOLOR3SVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);")
(define-entry-point glSecondaryColor3ub PFNGLSECONDARYCOLOR3UBPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);")
(define-entry-point glSecondaryColor3ubv PFNGLSECONDARYCOLOR3UBVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);")
(define-entry-point glSecondaryColor3ui PFNGLSECONDARYCOLOR3UIPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);")
(define-entry-point glSecondaryColor3uiv PFNGLSECONDARYCOLOR3UIVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);")
(define-entry-point glSecondaryColor3us PFNGLSECONDARYCOLOR3USPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);")
(define-entry-point glSecondaryColor3usv PFNGLSECONDARYCOLOR3USVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);")
(define-entry-point glSecondaryColorPointer PFNGLSECONDARYCOLORPOINTERPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glWindowPos2d PFNGLWINDOWPOS2DPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dv PFNGLWINDOWPOS2DVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2f PFNGLWINDOWPOS2FPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fv PFNGLWINDOWPOS2FVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2i PFNGLWINDOWPOS2IPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2iv PFNGLWINDOWPOS2IVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);")
(define-entry-point glWindowPos2s PFNGLWINDOWPOS2SPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2sv PFNGLWINDOWPOS2SVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);")
(define-entry-point glWindowPos3d PFNGLWINDOWPOS3DPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dv PFNGLWINDOWPOS3DVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3f PFNGLWINDOWPOS3FPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fv PFNGLWINDOWPOS3FVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3i PFNGLWINDOWPOS3IPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3iv PFNGLWINDOWPOS3IVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);")
(define-entry-point glWindowPos3s PFNGLWINDOWPOS3SPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3sv PFNGLWINDOWPOS3SVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);")
(define-entry-point glGenQueries PFNGLGENQUERIESPROC "typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteQueries PFNGLDELETEQUERIESPROC "typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsQuery PFNGLISQUERYPROC "typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);")
(define-entry-point glBeginQuery PFNGLBEGINQUERYPROC "typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);")
(define-entry-point glEndQuery PFNGLENDQUERYPROC "typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);")
(define-entry-point glGetQueryiv PFNGLGETQUERYIVPROC "typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectiv PFNGLGETQUERYOBJECTIVPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectuiv PFNGLGETQUERYOBJECTUIVPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glBindBuffer PFNGLBINDBUFFERPROC "typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);")
(define-entry-point glDeleteBuffers PFNGLDELETEBUFFERSPROC "typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);")
(define-entry-point glGenBuffers PFNGLGENBUFFERSPROC "typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);")
(define-entry-point glIsBuffer PFNGLISBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);")
(define-entry-point glBufferData PFNGLBUFFERDATAPROC "typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);")
(define-entry-point glBufferSubData PFNGLBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);")
(define-entry-point glGetBufferSubData PFNGLGETBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);")
(define-entry-point glMapBuffer PFNGLMAPBUFFERPROC "typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);")
(define-entry-point glUnmapBuffer PFNGLUNMAPBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);")
(define-entry-point glGetBufferParameteriv PFNGLGETBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetBufferPointerv PFNGLGETBUFFERPOINTERVPROC "typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);")
(define-entry-point glBlendEquationSeparate PFNGLBLENDEQUATIONSEPARATEPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glDrawBuffers PFNGLDRAWBUFFERSPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glStencilOpSeparate PFNGLSTENCILOPSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);")
(define-entry-point glStencilFuncSeparate PFNGLSTENCILFUNCSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);")
(define-entry-point glStencilMaskSeparate PFNGLSTENCILMASKSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);")
(define-entry-point glAttachShader PFNGLATTACHSHADERPROC "typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);")
(define-entry-point glBindAttribLocation PFNGLBINDATTRIBLOCATIONPROC "typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);")
(define-entry-point glCompileShader PFNGLCOMPILESHADERPROC "typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);")
(define-entry-point glCreateProgram PFNGLCREATEPROGRAMPROC "typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);")
(define-entry-point glCreateShader PFNGLCREATESHADERPROC "typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);")
(define-entry-point glDeleteProgram PFNGLDELETEPROGRAMPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);")
(define-entry-point glDeleteShader PFNGLDELETESHADERPROC "typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);")
(define-entry-point glDetachShader PFNGLDETACHSHADERPROC "typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);")
(define-entry-point glDisableVertexAttribArray PFNGLDISABLEVERTEXATTRIBARRAYPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);")
(define-entry-point glEnableVertexAttribArray PFNGLENABLEVERTEXATTRIBARRAYPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);")
(define-entry-point glGetActiveAttrib PFNGLGETACTIVEATTRIBPROC "typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);")
(define-entry-point glGetActiveUniform PFNGLGETACTIVEUNIFORMPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);")
(define-entry-point glGetAttachedShaders PFNGLGETATTACHEDSHADERSPROC "typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);")
(define-entry-point glGetAttribLocation PFNGLGETATTRIBLOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetProgramiv PFNGLGETPROGRAMIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);")
(define-entry-point glGetProgramInfoLog PFNGLGETPROGRAMINFOLOGPROC "typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);")
(define-entry-point glGetShaderiv PFNGLGETSHADERIVPROC "typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);")
(define-entry-point glGetShaderInfoLog PFNGLGETSHADERINFOLOGPROC "typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);")
(define-entry-point glGetShaderSource PFNGLGETSHADERSOURCEPROC "typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);")
(define-entry-point glGetUniformLocation PFNGLGETUNIFORMLOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetUniformfv PFNGLGETUNIFORMFVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);")
(define-entry-point glGetUniformiv PFNGLGETUNIFORMIVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);")
(define-entry-point glGetVertexAttribdv PFNGLGETVERTEXATTRIBDVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfv PFNGLGETVERTEXATTRIBFVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribiv PFNGLGETVERTEXATTRIBIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointerv PFNGLGETVERTEXATTRIBPOINTERVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);")
(define-entry-point glIsProgram PFNGLISPROGRAMPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);")
(define-entry-point glIsShader PFNGLISSHADERPROC "typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);")
(define-entry-point glLinkProgram PFNGLLINKPROGRAMPROC "typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);")
(define-entry-point glShaderSource PFNGLSHADERSOURCEPROC "typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);")
(define-entry-point glUseProgram PFNGLUSEPROGRAMPROC "typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);")
(define-entry-point glUniform1f PFNGLUNIFORM1FPROC "typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);")
(define-entry-point glUniform2f PFNGLUNIFORM2FPROC "typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glUniform3f PFNGLUNIFORM3FPROC "typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glUniform4f PFNGLUNIFORM4FPROC "typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glUniform1i PFNGLUNIFORM1IPROC "typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);")
(define-entry-point glUniform2i PFNGLUNIFORM2IPROC "typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);")
(define-entry-point glUniform3i PFNGLUNIFORM3IPROC "typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glUniform4i PFNGLUNIFORM4IPROC "typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glUniform1fv PFNGLUNIFORM1FVPROC "typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform2fv PFNGLUNIFORM2FVPROC "typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform3fv PFNGLUNIFORM3FVPROC "typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform4fv PFNGLUNIFORM4FVPROC "typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform1iv PFNGLUNIFORM1IVPROC "typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform2iv PFNGLUNIFORM2IVPROC "typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform3iv PFNGLUNIFORM3IVPROC "typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform4iv PFNGLUNIFORM4IVPROC "typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniformMatrix2fv PFNGLUNIFORMMATRIX2FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3fv PFNGLUNIFORMMATRIX3FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4fv PFNGLUNIFORMMATRIX4FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glValidateProgram PFNGLVALIDATEPROGRAMPROC "typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);")
(define-entry-point glVertexAttrib1d PFNGLVERTEXATTRIB1DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dv PFNGLVERTEXATTRIB1DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1f PFNGLVERTEXATTRIB1FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fv PFNGLVERTEXATTRIB1FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1s PFNGLVERTEXATTRIB1SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1sv PFNGLVERTEXATTRIB1SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2d PFNGLVERTEXATTRIB2DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dv PFNGLVERTEXATTRIB2DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2f PFNGLVERTEXATTRIB2FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fv PFNGLVERTEXATTRIB2FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2s PFNGLVERTEXATTRIB2SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2sv PFNGLVERTEXATTRIB2SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3d PFNGLVERTEXATTRIB3DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dv PFNGLVERTEXATTRIB3DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3f PFNGLVERTEXATTRIB3FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fv PFNGLVERTEXATTRIB3FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3s PFNGLVERTEXATTRIB3SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3sv PFNGLVERTEXATTRIB3SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4Nbv PFNGLVERTEXATTRIB4NBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4Niv PFNGLVERTEXATTRIB4NIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4Nsv PFNGLVERTEXATTRIB4NSVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4Nub PFNGLVERTEXATTRIB4NUBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4Nubv PFNGLVERTEXATTRIB4NUBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4Nuiv PFNGLVERTEXATTRIB4NUIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4Nusv PFNGLVERTEXATTRIB4NUSVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttrib4bv PFNGLVERTEXATTRIB4BVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4d PFNGLVERTEXATTRIB4DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dv PFNGLVERTEXATTRIB4DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4f PFNGLVERTEXATTRIB4FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fv PFNGLVERTEXATTRIB4FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4iv PFNGLVERTEXATTRIB4IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4s PFNGLVERTEXATTRIB4SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4sv PFNGLVERTEXATTRIB4SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubv PFNGLVERTEXATTRIB4UBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4uiv PFNGLVERTEXATTRIB4UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4usv PFNGLVERTEXATTRIB4USVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttribPointer PFNGLVERTEXATTRIBPOINTERPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glActiveTextureARB PFNGLACTIVETEXTUREARBPROC "typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);")
(define-entry-point glClientActiveTextureARB PFNGLCLIENTACTIVETEXTUREARBPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);")
(define-entry-point glMultiTexCoord1dARB PFNGLMULTITEXCOORD1DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);")
(define-entry-point glMultiTexCoord1dvARB PFNGLMULTITEXCOORD1DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord1fARB PFNGLMULTITEXCOORD1FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);")
(define-entry-point glMultiTexCoord1fvARB PFNGLMULTITEXCOORD1FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord1iARB PFNGLMULTITEXCOORD1IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);")
(define-entry-point glMultiTexCoord1ivARB PFNGLMULTITEXCOORD1IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord1sARB PFNGLMULTITEXCOORD1SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);")
(define-entry-point glMultiTexCoord1svARB PFNGLMULTITEXCOORD1SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord2dARB PFNGLMULTITEXCOORD2DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);")
(define-entry-point glMultiTexCoord2dvARB PFNGLMULTITEXCOORD2DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord2fARB PFNGLMULTITEXCOORD2FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);")
(define-entry-point glMultiTexCoord2fvARB PFNGLMULTITEXCOORD2FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord2iARB PFNGLMULTITEXCOORD2IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);")
(define-entry-point glMultiTexCoord2ivARB PFNGLMULTITEXCOORD2IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord2sARB PFNGLMULTITEXCOORD2SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);")
(define-entry-point glMultiTexCoord2svARB PFNGLMULTITEXCOORD2SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord3dARB PFNGLMULTITEXCOORD3DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);")
(define-entry-point glMultiTexCoord3dvARB PFNGLMULTITEXCOORD3DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord3fARB PFNGLMULTITEXCOORD3FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);")
(define-entry-point glMultiTexCoord3fvARB PFNGLMULTITEXCOORD3FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord3iARB PFNGLMULTITEXCOORD3IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);")
(define-entry-point glMultiTexCoord3ivARB PFNGLMULTITEXCOORD3IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord3sARB PFNGLMULTITEXCOORD3SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);")
(define-entry-point glMultiTexCoord3svARB PFNGLMULTITEXCOORD3SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord4dARB PFNGLMULTITEXCOORD4DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);")
(define-entry-point glMultiTexCoord4dvARB PFNGLMULTITEXCOORD4DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord4fARB PFNGLMULTITEXCOORD4FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);")
(define-entry-point glMultiTexCoord4fvARB PFNGLMULTITEXCOORD4FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord4iARB PFNGLMULTITEXCOORD4IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);")
(define-entry-point glMultiTexCoord4ivARB PFNGLMULTITEXCOORD4IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord4sARB PFNGLMULTITEXCOORD4SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);")
(define-entry-point glMultiTexCoord4svARB PFNGLMULTITEXCOORD4SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glLoadTransposeMatrixfARB PFNGLLOADTRANSPOSEMATRIXFARBPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);")
(define-entry-point glLoadTransposeMatrixdARB PFNGLLOADTRANSPOSEMATRIXDARBPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);")
(define-entry-point glMultTransposeMatrixfARB PFNGLMULTTRANSPOSEMATRIXFARBPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);")
(define-entry-point glMultTransposeMatrixdARB PFNGLMULTTRANSPOSEMATRIXDARBPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);")
(define-entry-point glSampleCoverageARB PFNGLSAMPLECOVERAGEARBPROC "typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glCompressedTexImage3DARB PFNGLCOMPRESSEDTEXIMAGE3DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexImage2DARB PFNGLCOMPRESSEDTEXIMAGE2DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexImage1DARB PFNGLCOMPRESSEDTEXIMAGE1DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage3DARB PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage2DARB PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glCompressedTexSubImage1DARB PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);")
(define-entry-point glGetCompressedTexImageARB PFNGLGETCOMPRESSEDTEXIMAGEARBPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);")
(define-entry-point glPointParameterfARB PFNGLPOINTPARAMETERFARBPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvARB PFNGLPOINTPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glWeightbvARB PFNGLWEIGHTBVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);")
(define-entry-point glWeightsvARB PFNGLWEIGHTSVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);")
(define-entry-point glWeightivARB PFNGLWEIGHTIVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);")
(define-entry-point glWeightfvARB PFNGLWEIGHTFVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);")
(define-entry-point glWeightdvARB PFNGLWEIGHTDVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);")
(define-entry-point glWeightubvARB PFNGLWEIGHTUBVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);")
(define-entry-point glWeightusvARB PFNGLWEIGHTUSVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);")
(define-entry-point glWeightuivARB PFNGLWEIGHTUIVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);")
(define-entry-point glWeightPointerARB PFNGLWEIGHTPOINTERARBPROC "typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glVertexBlendARB PFNGLVERTEXBLENDARBPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);")
(define-entry-point glCurrentPaletteMatrixARB PFNGLCURRENTPALETTEMATRIXARBPROC "typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);")
(define-entry-point glMatrixIndexubvARB PFNGLMATRIXINDEXUBVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);")
(define-entry-point glMatrixIndexusvARB PFNGLMATRIXINDEXUSVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);")
(define-entry-point glMatrixIndexuivARB PFNGLMATRIXINDEXUIVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);")
(define-entry-point glMatrixIndexPointerARB PFNGLMATRIXINDEXPOINTERARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glWindowPos2dARB PFNGLWINDOWPOS2DARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dvARB PFNGLWINDOWPOS2DVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2fARB PFNGLWINDOWPOS2FARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fvARB PFNGLWINDOWPOS2FVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2iARB PFNGLWINDOWPOS2IARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2ivARB PFNGLWINDOWPOS2IVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);")
(define-entry-point glWindowPos2sARB PFNGLWINDOWPOS2SARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2svARB PFNGLWINDOWPOS2SVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);")
(define-entry-point glWindowPos3dARB PFNGLWINDOWPOS3DARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dvARB PFNGLWINDOWPOS3DVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3fARB PFNGLWINDOWPOS3FARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fvARB PFNGLWINDOWPOS3FVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3iARB PFNGLWINDOWPOS3IARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3ivARB PFNGLWINDOWPOS3IVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);")
(define-entry-point glWindowPos3sARB PFNGLWINDOWPOS3SARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3svARB PFNGLWINDOWPOS3SVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);")
(define-entry-point glVertexAttrib1dARB PFNGLVERTEXATTRIB1DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dvARB PFNGLVERTEXATTRIB1DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1fARB PFNGLVERTEXATTRIB1FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fvARB PFNGLVERTEXATTRIB1FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1sARB PFNGLVERTEXATTRIB1SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1svARB PFNGLVERTEXATTRIB1SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2dARB PFNGLVERTEXATTRIB2DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dvARB PFNGLVERTEXATTRIB2DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2fARB PFNGLVERTEXATTRIB2FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fvARB PFNGLVERTEXATTRIB2FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2sARB PFNGLVERTEXATTRIB2SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2svARB PFNGLVERTEXATTRIB2SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3dARB PFNGLVERTEXATTRIB3DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dvARB PFNGLVERTEXATTRIB3DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3fARB PFNGLVERTEXATTRIB3FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fvARB PFNGLVERTEXATTRIB3FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3sARB PFNGLVERTEXATTRIB3SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3svARB PFNGLVERTEXATTRIB3SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4NbvARB PFNGLVERTEXATTRIB4NBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4NivARB PFNGLVERTEXATTRIB4NIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4NsvARB PFNGLVERTEXATTRIB4NSVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4NubARB PFNGLVERTEXATTRIB4NUBARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4NubvARB PFNGLVERTEXATTRIB4NUBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4NuivARB PFNGLVERTEXATTRIB4NUIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4NusvARB PFNGLVERTEXATTRIB4NUSVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttrib4bvARB PFNGLVERTEXATTRIB4BVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4dARB PFNGLVERTEXATTRIB4DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dvARB PFNGLVERTEXATTRIB4DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4fARB PFNGLVERTEXATTRIB4FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fvARB PFNGLVERTEXATTRIB4FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4ivARB PFNGLVERTEXATTRIB4IVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4sARB PFNGLVERTEXATTRIB4SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4svARB PFNGLVERTEXATTRIB4SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubvARB PFNGLVERTEXATTRIB4UBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4uivARB PFNGLVERTEXATTRIB4UIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4usvARB PFNGLVERTEXATTRIB4USVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttribPointerARB PFNGLVERTEXATTRIBPOINTERARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glEnableVertexAttribArrayARB PFNGLENABLEVERTEXATTRIBARRAYARBPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);")
(define-entry-point glDisableVertexAttribArrayARB PFNGLDISABLEVERTEXATTRIBARRAYARBPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);")
(define-entry-point glProgramStringARB PFNGLPROGRAMSTRINGARBPROC "typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);")
(define-entry-point glBindProgramARB PFNGLBINDPROGRAMARBPROC "typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);")
(define-entry-point glDeleteProgramsARB PFNGLDELETEPROGRAMSARBPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glGenProgramsARB PFNGLGENPROGRAMSARBPROC "typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);")
(define-entry-point glProgramEnvParameter4dARB PFNGLPROGRAMENVPARAMETER4DARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramEnvParameter4dvARB PFNGLPROGRAMENVPARAMETER4DVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);")
(define-entry-point glProgramEnvParameter4fARB PFNGLPROGRAMENVPARAMETER4FARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramEnvParameter4fvARB PFNGLPROGRAMENVPARAMETER4FVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);")
(define-entry-point glProgramLocalParameter4dARB PFNGLPROGRAMLOCALPARAMETER4DARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramLocalParameter4dvARB PFNGLPROGRAMLOCALPARAMETER4DVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);")
(define-entry-point glProgramLocalParameter4fARB PFNGLPROGRAMLOCALPARAMETER4FARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramLocalParameter4fvARB PFNGLPROGRAMLOCALPARAMETER4FVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);")
(define-entry-point glGetProgramEnvParameterdvARB PFNGLGETPROGRAMENVPARAMETERDVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);")
(define-entry-point glGetProgramEnvParameterfvARB PFNGLGETPROGRAMENVPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);")
(define-entry-point glGetProgramLocalParameterdvARB PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);")
(define-entry-point glGetProgramLocalParameterfvARB PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);")
(define-entry-point glGetProgramivARB PFNGLGETPROGRAMIVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetProgramStringARB PFNGLGETPROGRAMSTRINGARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);")
(define-entry-point glGetVertexAttribdvARB PFNGLGETVERTEXATTRIBDVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfvARB PFNGLGETVERTEXATTRIBFVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribivARB PFNGLGETVERTEXATTRIBIVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointervARB PFNGLGETVERTEXATTRIBPOINTERVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);")
(define-entry-point glIsProgramARB PFNGLISPROGRAMARBPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);")
(define-entry-point glBindBufferARB PFNGLBINDBUFFERARBPROC "typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);")
(define-entry-point glDeleteBuffersARB PFNGLDELETEBUFFERSARBPROC "typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);")
(define-entry-point glGenBuffersARB PFNGLGENBUFFERSARBPROC "typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);")
(define-entry-point glIsBufferARB PFNGLISBUFFERARBPROC "typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);")
(define-entry-point glBufferDataARB PFNGLBUFFERDATAARBPROC "typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);")
(define-entry-point glBufferSubDataARB PFNGLBUFFERSUBDATAARBPROC "typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);")
(define-entry-point glGetBufferSubDataARB PFNGLGETBUFFERSUBDATAARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);")
(define-entry-point glMapBufferARB PFNGLMAPBUFFERARBPROC "typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);")
(define-entry-point glUnmapBufferARB PFNGLUNMAPBUFFERARBPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);")
(define-entry-point glGetBufferParameterivARB PFNGLGETBUFFERPARAMETERIVARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetBufferPointervARB PFNGLGETBUFFERPOINTERVARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);")
(define-entry-point glGenQueriesARB PFNGLGENQUERIESARBPROC "typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteQueriesARB PFNGLDELETEQUERIESARBPROC "typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsQueryARB PFNGLISQUERYARBPROC "typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);")
(define-entry-point glBeginQueryARB PFNGLBEGINQUERYARBPROC "typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);")
(define-entry-point glEndQueryARB PFNGLENDQUERYARBPROC "typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);")
(define-entry-point glGetQueryivARB PFNGLGETQUERYIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectivARB PFNGLGETQUERYOBJECTIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectuivARB PFNGLGETQUERYOBJECTUIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glDeleteObjectARB PFNGLDELETEOBJECTARBPROC "typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);")
(define-entry-point glGetHandleARB PFNGLGETHANDLEARBPROC "typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);")
(define-entry-point glDetachObjectARB PFNGLDETACHOBJECTARBPROC "typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);")
(define-entry-point glCreateShaderObjectARB PFNGLCREATESHADEROBJECTARBPROC "typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);")
(define-entry-point glShaderSourceARB PFNGLSHADERSOURCEARBPROC "typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);")
(define-entry-point glCompileShaderARB PFNGLCOMPILESHADERARBPROC "typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);")
(define-entry-point glCreateProgramObjectARB PFNGLCREATEPROGRAMOBJECTARBPROC "typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);")
(define-entry-point glAttachObjectARB PFNGLATTACHOBJECTARBPROC "typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);")
(define-entry-point glLinkProgramARB PFNGLLINKPROGRAMARBPROC "typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);")
(define-entry-point glUseProgramObjectARB PFNGLUSEPROGRAMOBJECTARBPROC "typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);")
(define-entry-point glValidateProgramARB PFNGLVALIDATEPROGRAMARBPROC "typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);")
(define-entry-point glUniform1fARB PFNGLUNIFORM1FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);")
(define-entry-point glUniform2fARB PFNGLUNIFORM2FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glUniform3fARB PFNGLUNIFORM3FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glUniform4fARB PFNGLUNIFORM4FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glUniform1iARB PFNGLUNIFORM1IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);")
(define-entry-point glUniform2iARB PFNGLUNIFORM2IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);")
(define-entry-point glUniform3iARB PFNGLUNIFORM3IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glUniform4iARB PFNGLUNIFORM4IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glUniform1fvARB PFNGLUNIFORM1FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform2fvARB PFNGLUNIFORM2FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform3fvARB PFNGLUNIFORM3FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform4fvARB PFNGLUNIFORM4FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform1ivARB PFNGLUNIFORM1IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform2ivARB PFNGLUNIFORM2IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform3ivARB PFNGLUNIFORM3IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform4ivARB PFNGLUNIFORM4IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniformMatrix2fvARB PFNGLUNIFORMMATRIX2FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3fvARB PFNGLUNIFORMMATRIX3FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4fvARB PFNGLUNIFORMMATRIX4FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glGetObjectParameterfvARB PFNGLGETOBJECTPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);")
(define-entry-point glGetObjectParameterivARB PFNGLGETOBJECTPARAMETERIVARBPROC "typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);")
(define-entry-point glGetInfoLogARB PFNGLGETINFOLOGARBPROC "typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);")
(define-entry-point glGetAttachedObjectsARB PFNGLGETATTACHEDOBJECTSARBPROC "typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);")
(define-entry-point glGetUniformLocationARB PFNGLGETUNIFORMLOCATIONARBPROC "typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);")
(define-entry-point glGetActiveUniformARB PFNGLGETACTIVEUNIFORMARBPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);")
(define-entry-point glGetUniformfvARB PFNGLGETUNIFORMFVARBPROC "typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);")
(define-entry-point glGetUniformivARB PFNGLGETUNIFORMIVARBPROC "typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);")
(define-entry-point glGetShaderSourceARB PFNGLGETSHADERSOURCEARBPROC "typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);")
(define-entry-point glBindAttribLocationARB PFNGLBINDATTRIBLOCATIONARBPROC "typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);")
(define-entry-point glGetActiveAttribARB PFNGLGETACTIVEATTRIBARBPROC "typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);")
(define-entry-point glGetAttribLocationARB PFNGLGETATTRIBLOCATIONARBPROC "typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);")
(define-entry-point glDrawBuffersARB PFNGLDRAWBUFFERSARBPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glClampColorARB PFNGLCLAMPCOLORARBPROC "typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);")
(define-entry-point glBlendColorEXT PFNGLBLENDCOLOREXTPROC "typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);")
(define-entry-point glPolygonOffsetEXT PFNGLPOLYGONOFFSETEXTPROC "typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);")
(define-entry-point glTexImage3DEXT PFNGLTEXIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glTexSubImage3DEXT PFNGLTEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glGetTexFilterFuncSGIS PFNGLGETTEXFILTERFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);")
(define-entry-point glTexFilterFuncSGIS PFNGLTEXFILTERFUNCSGISPROC "typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);")
(define-entry-point glTexSubImage1DEXT PFNGLTEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glTexSubImage2DEXT PFNGLTEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glCopyTexImage1DEXT PFNGLCOPYTEXIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);")
(define-entry-point glCopyTexImage2DEXT PFNGLCOPYTEXIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);")
(define-entry-point glCopyTexSubImage1DEXT PFNGLCOPYTEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyTexSubImage2DEXT PFNGLCOPYTEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glCopyTexSubImage3DEXT PFNGLCOPYTEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetHistogramEXT PFNGLGETHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);")
(define-entry-point glGetHistogramParameterfvEXT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetHistogramParameterivEXT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMinmaxEXT PFNGLGETMINMAXEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);")
(define-entry-point glGetMinmaxParameterfvEXT PFNGLGETMINMAXPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMinmaxParameterivEXT PFNGLGETMINMAXPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glHistogramEXT PFNGLHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);")
(define-entry-point glMinmaxEXT PFNGLMINMAXEXTPROC "typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);")
(define-entry-point glResetHistogramEXT PFNGLRESETHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);")
(define-entry-point glResetMinmaxEXT PFNGLRESETMINMAXEXTPROC "typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);")
(define-entry-point glConvolutionFilter1DEXT PFNGLCONVOLUTIONFILTER1DEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);")
(define-entry-point glConvolutionFilter2DEXT PFNGLCONVOLUTIONFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);")
(define-entry-point glConvolutionParameterfEXT PFNGLCONVOLUTIONPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);")
(define-entry-point glConvolutionParameterfvEXT PFNGLCONVOLUTIONPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glConvolutionParameteriEXT PFNGLCONVOLUTIONPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);")
(define-entry-point glConvolutionParameterivEXT PFNGLCONVOLUTIONPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyConvolutionFilter1DEXT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyConvolutionFilter2DEXT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetConvolutionFilterEXT PFNGLGETCONVOLUTIONFILTEREXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);")
(define-entry-point glGetConvolutionParameterfvEXT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetConvolutionParameterivEXT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetSeparableFilterEXT PFNGLGETSEPARABLEFILTEREXTPROC "typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);")
(define-entry-point glSeparableFilter2DEXT PFNGLSEPARABLEFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);")
(define-entry-point glColorTableSGI PFNGLCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);")
(define-entry-point glColorTableParameterfvSGI PFNGLCOLORTABLEPARAMETERFVSGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glColorTableParameterivSGI PFNGLCOLORTABLEPARAMETERIVSGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyColorTableSGI PFNGLCOPYCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glGetColorTableSGI PFNGLGETCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);")
(define-entry-point glGetColorTableParameterfvSGI PFNGLGETCOLORTABLEPARAMETERFVSGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetColorTableParameterivSGI PFNGLGETCOLORTABLEPARAMETERIVSGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glPixelTexGenSGIX PFNGLPIXELTEXGENSGIXPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);")
(define-entry-point glPixelTexGenParameteriSGIS PFNGLPIXELTEXGENPARAMETERISGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);")
(define-entry-point glPixelTexGenParameterivSGIS PFNGLPIXELTEXGENPARAMETERIVSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);")
(define-entry-point glPixelTexGenParameterfSGIS PFNGLPIXELTEXGENPARAMETERFSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPixelTexGenParameterfvSGIS PFNGLPIXELTEXGENPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glGetPixelTexGenParameterivSGIS PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC "typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);")
(define-entry-point glGetPixelTexGenParameterfvSGIS PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);")
(define-entry-point glTexImage4DSGIS PFNGLTEXIMAGE4DSGISPROC "typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glTexSubImage4DSGIS PFNGLTEXSUBIMAGE4DSGISPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);")
(define-entry-point glAreTexturesResidentEXT PFNGLARETEXTURESRESIDENTEXTPROC "typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);")
(define-entry-point glBindTextureEXT PFNGLBINDTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);")
(define-entry-point glDeleteTexturesEXT PFNGLDELETETEXTURESEXTPROC "typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);")
(define-entry-point glGenTexturesEXT PFNGLGENTEXTURESEXTPROC "typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);")
(define-entry-point glIsTextureEXT PFNGLISTEXTUREEXTPROC "typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);")
(define-entry-point glPrioritizeTexturesEXT PFNGLPRIORITIZETEXTURESEXTPROC "typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);")
(define-entry-point glDetailTexFuncSGIS PFNGLDETAILTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);")
(define-entry-point glGetDetailTexFuncSGIS PFNGLGETDETAILTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);")
(define-entry-point glSharpenTexFuncSGIS PFNGLSHARPENTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);")
(define-entry-point glGetSharpenTexFuncSGIS PFNGLGETSHARPENTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);")
(define-entry-point glSampleMaskSGIS PFNGLSAMPLEMASKSGISPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glSamplePatternSGIS PFNGLSAMPLEPATTERNSGISPROC "typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);")
(define-entry-point glArrayElementEXT PFNGLARRAYELEMENTEXTPROC "typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);")
(define-entry-point glColorPointerEXT PFNGLCOLORPOINTEREXTPROC "typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);")
(define-entry-point glDrawArraysEXT PFNGLDRAWARRAYSEXTPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);")
(define-entry-point glEdgeFlagPointerEXT PFNGLEDGEFLAGPOINTEREXTPROC "typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);")
(define-entry-point glGetPointervEXT PFNGLGETPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);")
(define-entry-point glIndexPointerEXT PFNGLINDEXPOINTEREXTPROC "typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);")
(define-entry-point glNormalPointerEXT PFNGLNORMALPOINTEREXTPROC "typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);")
(define-entry-point glTexCoordPointerEXT PFNGLTEXCOORDPOINTEREXTPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);")
(define-entry-point glVertexPointerEXT PFNGLVERTEXPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);")
(define-entry-point glBlendEquationEXT PFNGLBLENDEQUATIONEXTPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);")
(define-entry-point glSpriteParameterfSGIX PFNGLSPRITEPARAMETERFSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);")
(define-entry-point glSpriteParameterfvSGIX PFNGLSPRITEPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glSpriteParameteriSGIX PFNGLSPRITEPARAMETERISGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glSpriteParameterivSGIX PFNGLSPRITEPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);")
(define-entry-point glPointParameterfEXT PFNGLPOINTPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvEXT PFNGLPOINTPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glPointParameterfSGIS PFNGLPOINTPARAMETERFSGISPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvSGIS PFNGLPOINTPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glGetInstrumentsSGIX PFNGLGETINSTRUMENTSSGIXPROC "typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);")
(define-entry-point glInstrumentsBufferSGIX PFNGLINSTRUMENTSBUFFERSGIXPROC "typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);")
(define-entry-point glPollInstrumentsSGIX PFNGLPOLLINSTRUMENTSSGIXPROC "typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);")
(define-entry-point glReadInstrumentsSGIX PFNGLREADINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);")
(define-entry-point glStartInstrumentsSGIX PFNGLSTARTINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);")
(define-entry-point glStopInstrumentsSGIX PFNGLSTOPINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);")
(define-entry-point glFrameZoomSGIX PFNGLFRAMEZOOMSGIXPROC "typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);")
(define-entry-point glTagSampleBufferSGIX PFNGLTAGSAMPLEBUFFERSGIXPROC "typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);")
(define-entry-point glDeformationMap3dSGIX PFNGLDEFORMATIONMAP3DSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);")
(define-entry-point glDeformationMap3fSGIX PFNGLDEFORMATIONMAP3FSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);")
(define-entry-point glDeformSGIX PFNGLDEFORMSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);")
(define-entry-point glLoadIdentityDeformationMapSGIX PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC "typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);")
(define-entry-point glReferencePlaneSGIX PFNGLREFERENCEPLANESGIXPROC "typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);")
(define-entry-point glFlushRasterSGIX PFNGLFLUSHRASTERSGIXPROC "typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);")
(define-entry-point glFogFuncSGIS PFNGLFOGFUNCSGISPROC "typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);")
(define-entry-point glGetFogFuncSGIS PFNGLGETFOGFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);")
(define-entry-point glImageTransformParameteriHP PFNGLIMAGETRANSFORMPARAMETERIHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glImageTransformParameterfHP PFNGLIMAGETRANSFORMPARAMETERFHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glImageTransformParameterivHP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glImageTransformParameterfvHP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glGetImageTransformParameterivHP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC "typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetImageTransformParameterfvHP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC "typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glColorSubTableEXT PFNGLCOLORSUBTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);")
(define-entry-point glCopyColorSubTableEXT PFNGLCOPYCOLORSUBTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);")
(define-entry-point glHintPGI PFNGLHINTPGIPROC "typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);")
(define-entry-point glColorTableEXT PFNGLCOLORTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);")
(define-entry-point glGetColorTableEXT PFNGLGETCOLORTABLEEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);")
(define-entry-point glGetColorTableParameterivEXT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetColorTableParameterfvEXT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetListParameterfvSGIX PFNGLGETLISTPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);")
(define-entry-point glGetListParameterivSGIX PFNGLGETLISTPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);")
(define-entry-point glListParameterfSGIX PFNGLLISTPARAMETERFSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);")
(define-entry-point glListParameterfvSGIX PFNGLLISTPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);")
(define-entry-point glListParameteriSGIX PFNGLLISTPARAMETERISGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);")
(define-entry-point glListParameterivSGIX PFNGLLISTPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);")
(define-entry-point glIndexMaterialEXT PFNGLINDEXMATERIALEXTPROC "typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);")
(define-entry-point glIndexFuncEXT PFNGLINDEXFUNCEXTPROC "typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);")
(define-entry-point glLockArraysEXT PFNGLLOCKARRAYSEXTPROC "typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);")
(define-entry-point glUnlockArraysEXT PFNGLUNLOCKARRAYSEXTPROC "typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);")
(define-entry-point glCullParameterdvEXT PFNGLCULLPARAMETERDVEXTPROC "typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);")
(define-entry-point glCullParameterfvEXT PFNGLCULLPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);")
(define-entry-point glFragmentColorMaterialSGIX PFNGLFRAGMENTCOLORMATERIALSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);")
(define-entry-point glFragmentLightfSGIX PFNGLFRAGMENTLIGHTFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);")
(define-entry-point glFragmentLightfvSGIX PFNGLFRAGMENTLIGHTFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentLightiSGIX PFNGLFRAGMENTLIGHTISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);")
(define-entry-point glFragmentLightivSGIX PFNGLFRAGMENTLIGHTIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);")
(define-entry-point glFragmentLightModelfSGIX PFNGLFRAGMENTLIGHTMODELFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);")
(define-entry-point glFragmentLightModelfvSGIX PFNGLFRAGMENTLIGHTMODELFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentLightModeliSGIX PFNGLFRAGMENTLIGHTMODELISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glFragmentLightModelivSGIX PFNGLFRAGMENTLIGHTMODELIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);")
(define-entry-point glFragmentMaterialfSGIX PFNGLFRAGMENTMATERIALFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);")
(define-entry-point glFragmentMaterialfvSGIX PFNGLFRAGMENTMATERIALFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentMaterialiSGIX PFNGLFRAGMENTMATERIALISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);")
(define-entry-point glFragmentMaterialivSGIX PFNGLFRAGMENTMATERIALIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);")
(define-entry-point glGetFragmentLightfvSGIX PFNGLGETFRAGMENTLIGHTFVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);")
(define-entry-point glGetFragmentLightivSGIX PFNGLGETFRAGMENTLIGHTIVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);")
(define-entry-point glGetFragmentMaterialfvSGIX PFNGLGETFRAGMENTMATERIALFVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);")
(define-entry-point glGetFragmentMaterialivSGIX PFNGLGETFRAGMENTMATERIALIVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);")
(define-entry-point glLightEnviSGIX PFNGLLIGHTENVISGIXPROC "typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glDrawRangeElementsEXT PFNGLDRAWRANGEELEMENTSEXTPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);")
(define-entry-point glApplyTextureEXT PFNGLAPPLYTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);")
(define-entry-point glTextureLightEXT PFNGLTEXTURELIGHTEXTPROC "typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);")
(define-entry-point glTextureMaterialEXT PFNGLTEXTUREMATERIALEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);")
(define-entry-point glAsyncMarkerSGIX PFNGLASYNCMARKERSGIXPROC "typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);")
(define-entry-point glFinishAsyncSGIX PFNGLFINISHASYNCSGIXPROC "typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);")
(define-entry-point glPollAsyncSGIX PFNGLPOLLASYNCSGIXPROC "typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);")
(define-entry-point glGenAsyncMarkersSGIX PFNGLGENASYNCMARKERSSGIXPROC "typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);")
(define-entry-point glDeleteAsyncMarkersSGIX PFNGLDELETEASYNCMARKERSSGIXPROC "typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);")
(define-entry-point glIsAsyncMarkerSGIX PFNGLISASYNCMARKERSGIXPROC "typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);")
(define-entry-point glVertexPointervINTEL PFNGLVERTEXPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);")
(define-entry-point glNormalPointervINTEL PFNGLNORMALPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);")
(define-entry-point glColorPointervINTEL PFNGLCOLORPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);")
(define-entry-point glTexCoordPointervINTEL PFNGLTEXCOORDPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);")
(define-entry-point glPixelTransformParameteriEXT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glPixelTransformParameterfEXT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glPixelTransformParameterivEXT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glPixelTransformParameterfvEXT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glSecondaryColor3bEXT PFNGLSECONDARYCOLOR3BEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);")
(define-entry-point glSecondaryColor3bvEXT PFNGLSECONDARYCOLOR3BVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glSecondaryColor3dEXT PFNGLSECONDARYCOLOR3DEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);")
(define-entry-point glSecondaryColor3dvEXT PFNGLSECONDARYCOLOR3DVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glSecondaryColor3fEXT PFNGLSECONDARYCOLOR3FEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);")
(define-entry-point glSecondaryColor3fvEXT PFNGLSECONDARYCOLOR3FVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glSecondaryColor3iEXT PFNGLSECONDARYCOLOR3IEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);")
(define-entry-point glSecondaryColor3ivEXT PFNGLSECONDARYCOLOR3IVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);")
(define-entry-point glSecondaryColor3sEXT PFNGLSECONDARYCOLOR3SEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);")
(define-entry-point glSecondaryColor3svEXT PFNGLSECONDARYCOLOR3SVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);")
(define-entry-point glSecondaryColor3ubEXT PFNGLSECONDARYCOLOR3UBEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);")
(define-entry-point glSecondaryColor3ubvEXT PFNGLSECONDARYCOLOR3UBVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);")
(define-entry-point glSecondaryColor3uiEXT PFNGLSECONDARYCOLOR3UIEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);")
(define-entry-point glSecondaryColor3uivEXT PFNGLSECONDARYCOLOR3UIVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);")
(define-entry-point glSecondaryColor3usEXT PFNGLSECONDARYCOLOR3USEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);")
(define-entry-point glSecondaryColor3usvEXT PFNGLSECONDARYCOLOR3USVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);")
(define-entry-point glSecondaryColorPointerEXT PFNGLSECONDARYCOLORPOINTEREXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glTextureNormalEXT PFNGLTEXTURENORMALEXTPROC "typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);")
(define-entry-point glMultiDrawArraysEXT PFNGLMULTIDRAWARRAYSEXTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);")
(define-entry-point glMultiDrawElementsEXT PFNGLMULTIDRAWELEMENTSEXTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);")
(define-entry-point glFogCoordfEXT PFNGLFOGCOORDFEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);")
(define-entry-point glFogCoordfvEXT PFNGLFOGCOORDFVEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);")
(define-entry-point glFogCoorddEXT PFNGLFOGCOORDDEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);")
(define-entry-point glFogCoorddvEXT PFNGLFOGCOORDDVEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);")
(define-entry-point glFogCoordPointerEXT PFNGLFOGCOORDPOINTEREXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glTangent3bEXT PFNGLTANGENT3BEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);")
(define-entry-point glTangent3bvEXT PFNGLTANGENT3BVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glTangent3dEXT PFNGLTANGENT3DEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);")
(define-entry-point glTangent3dvEXT PFNGLTANGENT3DVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glTangent3fEXT PFNGLTANGENT3FEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);")
(define-entry-point glTangent3fvEXT PFNGLTANGENT3FVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glTangent3iEXT PFNGLTANGENT3IEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);")
(define-entry-point glTangent3ivEXT PFNGLTANGENT3IVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);")
(define-entry-point glTangent3sEXT PFNGLTANGENT3SEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);")
(define-entry-point glTangent3svEXT PFNGLTANGENT3SVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);")
(define-entry-point glBinormal3bEXT PFNGLBINORMAL3BEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);")
(define-entry-point glBinormal3bvEXT PFNGLBINORMAL3BVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glBinormal3dEXT PFNGLBINORMAL3DEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);")
(define-entry-point glBinormal3dvEXT PFNGLBINORMAL3DVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glBinormal3fEXT PFNGLBINORMAL3FEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);")
(define-entry-point glBinormal3fvEXT PFNGLBINORMAL3FVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glBinormal3iEXT PFNGLBINORMAL3IEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);")
(define-entry-point glBinormal3ivEXT PFNGLBINORMAL3IVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);")
(define-entry-point glBinormal3sEXT PFNGLBINORMAL3SEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);")
(define-entry-point glBinormal3svEXT PFNGLBINORMAL3SVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);")
(define-entry-point glTangentPointerEXT PFNGLTANGENTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glBinormalPointerEXT PFNGLBINORMALPOINTEREXTPROC "typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glFinishTextureSUNX PFNGLFINISHTEXTURESUNXPROC "typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);")
(define-entry-point glGlobalAlphaFactorbSUN PFNGLGLOBALALPHAFACTORBSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);")
(define-entry-point glGlobalAlphaFactorsSUN PFNGLGLOBALALPHAFACTORSSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);")
(define-entry-point glGlobalAlphaFactoriSUN PFNGLGLOBALALPHAFACTORISUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);")
(define-entry-point glGlobalAlphaFactorfSUN PFNGLGLOBALALPHAFACTORFSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);")
(define-entry-point glGlobalAlphaFactordSUN PFNGLGLOBALALPHAFACTORDSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);")
(define-entry-point glGlobalAlphaFactorubSUN PFNGLGLOBALALPHAFACTORUBSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);")
(define-entry-point glGlobalAlphaFactorusSUN PFNGLGLOBALALPHAFACTORUSSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);")
(define-entry-point glGlobalAlphaFactoruiSUN PFNGLGLOBALALPHAFACTORUISUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);")
(define-entry-point glReplacementCodeuiSUN PFNGLREPLACEMENTCODEUISUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);")
(define-entry-point glReplacementCodeusSUN PFNGLREPLACEMENTCODEUSSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);")
(define-entry-point glReplacementCodeubSUN PFNGLREPLACEMENTCODEUBSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);")
(define-entry-point glReplacementCodeuivSUN PFNGLREPLACEMENTCODEUIVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);")
(define-entry-point glReplacementCodeusvSUN PFNGLREPLACEMENTCODEUSVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);")
(define-entry-point glReplacementCodeubvSUN PFNGLREPLACEMENTCODEUBVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);")
(define-entry-point glReplacementCodePointerSUN PFNGLREPLACEMENTCODEPOINTERSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);")
(define-entry-point glColor4ubVertex2fSUN PFNGLCOLOR4UBVERTEX2FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);")
(define-entry-point glColor4ubVertex2fvSUN PFNGLCOLOR4UBVERTEX2FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);")
(define-entry-point glColor4ubVertex3fSUN PFNGLCOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor4ubVertex3fvSUN PFNGLCOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);")
(define-entry-point glColor3fVertex3fSUN PFNGLCOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor3fVertex3fvSUN PFNGLCOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);")
(define-entry-point glNormal3fVertex3fSUN PFNGLNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glNormal3fVertex3fvSUN PFNGLNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);")
(define-entry-point glColor4fNormal3fVertex3fSUN PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor4fNormal3fVertex3fvSUN PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord2fVertex3fSUN PFNGLTEXCOORD2FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fVertex3fvSUN PFNGLTEXCOORD2FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);")
(define-entry-point glTexCoord4fVertex4fSUN PFNGLTEXCOORD4FVERTEX4FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glTexCoord4fVertex4fvSUN PFNGLTEXCOORD4FVERTEX4FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);")
(define-entry-point glTexCoord2fColor4ubVertex3fSUN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor4ubVertex3fvSUN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);")
(define-entry-point glTexCoord2fColor3fVertex3fSUN PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor3fVertex3fvSUN PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);")
(define-entry-point glTexCoord2fNormal3fVertex3fSUN PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fNormal3fVertex3fvSUN PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord2fColor4fNormal3fVertex3fSUN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor4fNormal3fVertex3fvSUN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord4fColor4fNormal3fVertex4fSUN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glTexCoord4fColor4fNormal3fVertex4fvSUN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiVertex3fSUN PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiVertex3fvSUN PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor4ubVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor4ubVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor3fVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor3fVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);")
(define-entry-point glReplacementCodeuiNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor4fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor4fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glBlendFuncSeparateEXT PFNGLBLENDFUNCSEPARATEEXTPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glBlendFuncSeparateINGR PFNGLBLENDFUNCSEPARATEINGRPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glVertexWeightfEXT PFNGLVERTEXWEIGHTFEXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);")
(define-entry-point glVertexWeightfvEXT PFNGLVERTEXWEIGHTFVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);")
(define-entry-point glVertexWeightPointerEXT PFNGLVERTEXWEIGHTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glFlushVertexArrayRangeNV PFNGLFLUSHVERTEXARRAYRANGENVPROC "typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);")
(define-entry-point glVertexArrayRangeNV PFNGLVERTEXARRAYRANGENVPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);")
(define-entry-point glCombinerParameterfvNV PFNGLCOMBINERPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glCombinerParameterfNV PFNGLCOMBINERPARAMETERFNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);")
(define-entry-point glCombinerParameterivNV PFNGLCOMBINERPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glCombinerParameteriNV PFNGLCOMBINERPARAMETERINVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);")
(define-entry-point glCombinerInputNV PFNGLCOMBINERINPUTNVPROC "typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);")
(define-entry-point glCombinerOutputNV PFNGLCOMBINEROUTPUTNVPROC "typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);")
(define-entry-point glFinalCombinerInputNV PFNGLFINALCOMBINERINPUTNVPROC "typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);")
(define-entry-point glGetCombinerInputParameterfvNV PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);")
(define-entry-point glGetCombinerInputParameterivNV PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);")
(define-entry-point glGetCombinerOutputParameterfvNV PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);")
(define-entry-point glGetCombinerOutputParameterivNV PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);")
(define-entry-point glGetFinalCombinerInputParameterfvNV PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);")
(define-entry-point glGetFinalCombinerInputParameterivNV PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);")
(define-entry-point glResizeBuffersMESA PFNGLRESIZEBUFFERSMESAPROC "typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);")
(define-entry-point glWindowPos2dMESA PFNGLWINDOWPOS2DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dvMESA PFNGLWINDOWPOS2DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2fMESA PFNGLWINDOWPOS2FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fvMESA PFNGLWINDOWPOS2FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2iMESA PFNGLWINDOWPOS2IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2ivMESA PFNGLWINDOWPOS2IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos2sMESA PFNGLWINDOWPOS2SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2svMESA PFNGLWINDOWPOS2SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);")
(define-entry-point glWindowPos3dMESA PFNGLWINDOWPOS3DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dvMESA PFNGLWINDOWPOS3DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3fMESA PFNGLWINDOWPOS3FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fvMESA PFNGLWINDOWPOS3FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3iMESA PFNGLWINDOWPOS3IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3ivMESA PFNGLWINDOWPOS3IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos3sMESA PFNGLWINDOWPOS3SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3svMESA PFNGLWINDOWPOS3SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);")
(define-entry-point glWindowPos4dMESA PFNGLWINDOWPOS4DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glWindowPos4dvMESA PFNGLWINDOWPOS4DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos4fMESA PFNGLWINDOWPOS4FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glWindowPos4fvMESA PFNGLWINDOWPOS4FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos4iMESA PFNGLWINDOWPOS4IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glWindowPos4ivMESA PFNGLWINDOWPOS4IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos4sMESA PFNGLWINDOWPOS4SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glWindowPos4svMESA PFNGLWINDOWPOS4SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);")
(define-entry-point glMultiModeDrawArraysIBM PFNGLMULTIMODEDRAWARRAYSIBMPROC "typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);")
(define-entry-point glMultiModeDrawElementsIBM PFNGLMULTIMODEDRAWELEMENTSIBMPROC "typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);")
(define-entry-point glColorPointerListIBM PFNGLCOLORPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glSecondaryColorPointerListIBM PFNGLSECONDARYCOLORPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glEdgeFlagPointerListIBM PFNGLEDGEFLAGPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);")
(define-entry-point glFogCoordPointerListIBM PFNGLFOGCOORDPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glIndexPointerListIBM PFNGLINDEXPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glNormalPointerListIBM PFNGLNORMALPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glTexCoordPointerListIBM PFNGLTEXCOORDPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glVertexPointerListIBM PFNGLVERTEXPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);")
(define-entry-point glTbufferMask3DFX PFNGLTBUFFERMASK3DFXPROC "typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);")
(define-entry-point glSampleMaskEXT PFNGLSAMPLEMASKEXTPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glSamplePatternEXT PFNGLSAMPLEPATTERNEXTPROC "typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);")
(define-entry-point glTextureColorMaskSGIS PFNGLTEXTURECOLORMASKSGISPROC "typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);")
(define-entry-point glIglooInterfaceSGIX PFNGLIGLOOINTERFACESGIXPROC "typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);")
(define-entry-point glDeleteFencesNV PFNGLDELETEFENCESNVPROC "typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);")
(define-entry-point glGenFencesNV PFNGLGENFENCESNVPROC "typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);")
(define-entry-point glIsFenceNV PFNGLISFENCENVPROC "typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);")
(define-entry-point glTestFenceNV PFNGLTESTFENCENVPROC "typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);")
(define-entry-point glGetFenceivNV PFNGLGETFENCEIVNVPROC "typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);")
(define-entry-point glFinishFenceNV PFNGLFINISHFENCENVPROC "typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);")
(define-entry-point glSetFenceNV PFNGLSETFENCENVPROC "typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);")
(define-entry-point glMapControlPointsNV PFNGLMAPCONTROLPOINTSNVPROC "typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);")
(define-entry-point glMapParameterivNV PFNGLMAPPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glMapParameterfvNV PFNGLMAPPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glGetMapControlPointsNV PFNGLGETMAPCONTROLPOINTSNVPROC "typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);")
(define-entry-point glGetMapParameterivNV PFNGLGETMAPPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMapParameterfvNV PFNGLGETMAPPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMapAttribParameterivNV PFNGLGETMAPATTRIBPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetMapAttribParameterfvNV PFNGLGETMAPATTRIBPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glEvalMapsNV PFNGLEVALMAPSNVPROC "typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);")
(define-entry-point glCombinerStageParameterfvNV PFNGLCOMBINERSTAGEPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);")
(define-entry-point glGetCombinerStageParameterfvNV PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);")
(define-entry-point glAreProgramsResidentNV PFNGLAREPROGRAMSRESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);")
(define-entry-point glBindProgramNV PFNGLBINDPROGRAMNVPROC "typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);")
(define-entry-point glDeleteProgramsNV PFNGLDELETEPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glExecuteProgramNV PFNGLEXECUTEPROGRAMNVPROC "typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);")
(define-entry-point glGenProgramsNV PFNGLGENPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);")
(define-entry-point glGetProgramParameterdvNV PFNGLGETPROGRAMPARAMETERDVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetProgramParameterfvNV PFNGLGETPROGRAMPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetProgramivNV PFNGLGETPROGRAMIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetProgramStringNV PFNGLGETPROGRAMSTRINGNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);")
(define-entry-point glGetTrackMatrixivNV PFNGLGETTRACKMATRIXIVNVPROC "typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribdvNV PFNGLGETVERTEXATTRIBDVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfvNV PFNGLGETVERTEXATTRIBFVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribivNV PFNGLGETVERTEXATTRIBIVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointervNV PFNGLGETVERTEXATTRIBPOINTERVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);")
(define-entry-point glIsProgramNV PFNGLISPROGRAMNVPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);")
(define-entry-point glLoadProgramNV PFNGLLOADPROGRAMNVPROC "typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);")
(define-entry-point glProgramParameter4dNV PFNGLPROGRAMPARAMETER4DNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramParameter4dvNV PFNGLPROGRAMPARAMETER4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);")
(define-entry-point glProgramParameter4fNV PFNGLPROGRAMPARAMETER4FNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramParameter4fvNV PFNGLPROGRAMPARAMETER4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);")
(define-entry-point glProgramParameters4dvNV PFNGLPROGRAMPARAMETERS4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);")
(define-entry-point glProgramParameters4fvNV PFNGLPROGRAMPARAMETERS4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);")
(define-entry-point glRequestResidentProgramsNV PFNGLREQUESTRESIDENTPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glTrackMatrixNV PFNGLTRACKMATRIXNVPROC "typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);")
(define-entry-point glVertexAttribPointerNV PFNGLVERTEXATTRIBPOINTERNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);")
(define-entry-point glVertexAttrib1dNV PFNGLVERTEXATTRIB1DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dvNV PFNGLVERTEXATTRIB1DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1fNV PFNGLVERTEXATTRIB1FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fvNV PFNGLVERTEXATTRIB1FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1sNV PFNGLVERTEXATTRIB1SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1svNV PFNGLVERTEXATTRIB1SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2dNV PFNGLVERTEXATTRIB2DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dvNV PFNGLVERTEXATTRIB2DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2fNV PFNGLVERTEXATTRIB2FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fvNV PFNGLVERTEXATTRIB2FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2sNV PFNGLVERTEXATTRIB2SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2svNV PFNGLVERTEXATTRIB2SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3dNV PFNGLVERTEXATTRIB3DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dvNV PFNGLVERTEXATTRIB3DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3fNV PFNGLVERTEXATTRIB3FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fvNV PFNGLVERTEXATTRIB3FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3sNV PFNGLVERTEXATTRIB3SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3svNV PFNGLVERTEXATTRIB3SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4dNV PFNGLVERTEXATTRIB4DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dvNV PFNGLVERTEXATTRIB4DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4fNV PFNGLVERTEXATTRIB4FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fvNV PFNGLVERTEXATTRIB4FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4sNV PFNGLVERTEXATTRIB4SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4svNV PFNGLVERTEXATTRIB4SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubNV PFNGLVERTEXATTRIB4UBNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4ubvNV PFNGLVERTEXATTRIB4UBVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttribs1dvNV PFNGLVERTEXATTRIBS1DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs1fvNV PFNGLVERTEXATTRIBS1FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs1svNV PFNGLVERTEXATTRIBS1SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs2dvNV PFNGLVERTEXATTRIBS2DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs2fvNV PFNGLVERTEXATTRIBS2FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs2svNV PFNGLVERTEXATTRIBS2SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs3dvNV PFNGLVERTEXATTRIBS3DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs3fvNV PFNGLVERTEXATTRIBS3FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs3svNV PFNGLVERTEXATTRIBS3SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs4dvNV PFNGLVERTEXATTRIBS4DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs4fvNV PFNGLVERTEXATTRIBS4FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs4svNV PFNGLVERTEXATTRIBS4SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs4ubvNV PFNGLVERTEXATTRIBS4UBVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);")
(define-entry-point glTexBumpParameterivATI PFNGLTEXBUMPPARAMETERIVATIPROC "typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);")
(define-entry-point glTexBumpParameterfvATI PFNGLTEXBUMPPARAMETERFVATIPROC "typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);")
(define-entry-point glGetTexBumpParameterivATI PFNGLGETTEXBUMPPARAMETERIVATIPROC "typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);")
(define-entry-point glGetTexBumpParameterfvATI PFNGLGETTEXBUMPPARAMETERFVATIPROC "typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);")
(define-entry-point glGenFragmentShadersATI PFNGLGENFRAGMENTSHADERSATIPROC "typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);")
(define-entry-point glBindFragmentShaderATI PFNGLBINDFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);")
(define-entry-point glDeleteFragmentShaderATI PFNGLDELETEFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);")
(define-entry-point glBeginFragmentShaderATI PFNGLBEGINFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);")
(define-entry-point glEndFragmentShaderATI PFNGLENDFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);")
(define-entry-point glPassTexCoordATI PFNGLPASSTEXCOORDATIPROC "typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);")
(define-entry-point glSampleMapATI PFNGLSAMPLEMAPATIPROC "typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);")
(define-entry-point glColorFragmentOp1ATI PFNGLCOLORFRAGMENTOP1ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);")
(define-entry-point glColorFragmentOp2ATI PFNGLCOLORFRAGMENTOP2ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);")
(define-entry-point glColorFragmentOp3ATI PFNGLCOLORFRAGMENTOP3ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);")
(define-entry-point glAlphaFragmentOp1ATI PFNGLALPHAFRAGMENTOP1ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);")
(define-entry-point glAlphaFragmentOp2ATI PFNGLALPHAFRAGMENTOP2ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);")
(define-entry-point glAlphaFragmentOp3ATI PFNGLALPHAFRAGMENTOP3ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);")
(define-entry-point glSetFragmentShaderConstantATI PFNGLSETFRAGMENTSHADERCONSTANTATIPROC "typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);")
(define-entry-point glPNTrianglesiATI PFNGLPNTRIANGLESIATIPROC "typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);")
(define-entry-point glPNTrianglesfATI PFNGLPNTRIANGLESFATIPROC "typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);")
(define-entry-point glNewObjectBufferATI PFNGLNEWOBJECTBUFFERATIPROC "typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);")
(define-entry-point glIsObjectBufferATI PFNGLISOBJECTBUFFERATIPROC "typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glUpdateObjectBufferATI PFNGLUPDATEOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);")
(define-entry-point glGetObjectBufferfvATI PFNGLGETOBJECTBUFFERFVATIPROC "typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);")
(define-entry-point glGetObjectBufferivATI PFNGLGETOBJECTBUFFERIVATIPROC "typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);")
(define-entry-point glFreeObjectBufferATI PFNGLFREEOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glArrayObjectATI PFNGLARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetArrayObjectfvATI PFNGLGETARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);")
(define-entry-point glGetArrayObjectivATI PFNGLGETARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);")
(define-entry-point glVariantArrayObjectATI PFNGLVARIANTARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetVariantArrayObjectfvATI PFNGLGETVARIANTARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);")
(define-entry-point glGetVariantArrayObjectivATI PFNGLGETVARIANTARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glBeginVertexShaderEXT PFNGLBEGINVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);")
(define-entry-point glEndVertexShaderEXT PFNGLENDVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);")
(define-entry-point glBindVertexShaderEXT PFNGLBINDVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);")
(define-entry-point glGenVertexShadersEXT PFNGLGENVERTEXSHADERSEXTPROC "typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);")
(define-entry-point glDeleteVertexShaderEXT PFNGLDELETEVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);")
(define-entry-point glShaderOp1EXT PFNGLSHADEROP1EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);")
(define-entry-point glShaderOp2EXT PFNGLSHADEROP2EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);")
(define-entry-point glShaderOp3EXT PFNGLSHADEROP3EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);")
(define-entry-point glSwizzleEXT PFNGLSWIZZLEEXTPROC "typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);")
(define-entry-point glWriteMaskEXT PFNGLWRITEMASKEXTPROC "typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);")
(define-entry-point glInsertComponentEXT PFNGLINSERTCOMPONENTEXTPROC "typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);")
(define-entry-point glExtractComponentEXT PFNGLEXTRACTCOMPONENTEXTPROC "typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);")
(define-entry-point glGenSymbolsEXT PFNGLGENSYMBOLSEXTPROC "typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);")
(define-entry-point glSetInvariantEXT PFNGLSETINVARIANTEXTPROC "typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);")
(define-entry-point glSetLocalConstantEXT PFNGLSETLOCALCONSTANTEXTPROC "typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);")
(define-entry-point glVariantbvEXT PFNGLVARIANTBVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);")
(define-entry-point glVariantsvEXT PFNGLVARIANTSVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);")
(define-entry-point glVariantivEXT PFNGLVARIANTIVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);")
(define-entry-point glVariantfvEXT PFNGLVARIANTFVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);")
(define-entry-point glVariantdvEXT PFNGLVARIANTDVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);")
(define-entry-point glVariantubvEXT PFNGLVARIANTUBVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);")
(define-entry-point glVariantusvEXT PFNGLVARIANTUSVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);")
(define-entry-point glVariantuivEXT PFNGLVARIANTUIVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);")
(define-entry-point glVariantPointerEXT PFNGLVARIANTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);")
(define-entry-point glEnableVariantClientStateEXT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC "typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);")
(define-entry-point glDisableVariantClientStateEXT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC "typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);")
(define-entry-point glBindLightParameterEXT PFNGLBINDLIGHTPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);")
(define-entry-point glBindMaterialParameterEXT PFNGLBINDMATERIALPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);")
(define-entry-point glBindTexGenParameterEXT PFNGLBINDTEXGENPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);")
(define-entry-point glBindTextureUnitParameterEXT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);")
(define-entry-point glBindParameterEXT PFNGLBINDPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);")
(define-entry-point glIsVariantEnabledEXT PFNGLISVARIANTENABLEDEXTPROC "typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);")
(define-entry-point glGetVariantBooleanvEXT PFNGLGETVARIANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetVariantIntegervEXT PFNGLGETVARIANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetVariantFloatvEXT PFNGLGETVARIANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glGetVariantPointervEXT PFNGLGETVARIANTPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);")
(define-entry-point glGetInvariantBooleanvEXT PFNGLGETINVARIANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetInvariantIntegervEXT PFNGLGETINVARIANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetInvariantFloatvEXT PFNGLGETINVARIANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glGetLocalConstantBooleanvEXT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetLocalConstantIntegervEXT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetLocalConstantFloatvEXT PFNGLGETLOCALCONSTANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glVertexStream1sATI PFNGLVERTEXSTREAM1SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);")
(define-entry-point glVertexStream1svATI PFNGLVERTEXSTREAM1SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream1iATI PFNGLVERTEXSTREAM1IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);")
(define-entry-point glVertexStream1ivATI PFNGLVERTEXSTREAM1IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream1fATI PFNGLVERTEXSTREAM1FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);")
(define-entry-point glVertexStream1fvATI PFNGLVERTEXSTREAM1FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream1dATI PFNGLVERTEXSTREAM1DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);")
(define-entry-point glVertexStream1dvATI PFNGLVERTEXSTREAM1DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream2sATI PFNGLVERTEXSTREAM2SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);")
(define-entry-point glVertexStream2svATI PFNGLVERTEXSTREAM2SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream2iATI PFNGLVERTEXSTREAM2IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);")
(define-entry-point glVertexStream2ivATI PFNGLVERTEXSTREAM2IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream2fATI PFNGLVERTEXSTREAM2FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);")
(define-entry-point glVertexStream2fvATI PFNGLVERTEXSTREAM2FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream2dATI PFNGLVERTEXSTREAM2DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);")
(define-entry-point glVertexStream2dvATI PFNGLVERTEXSTREAM2DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream3sATI PFNGLVERTEXSTREAM3SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexStream3svATI PFNGLVERTEXSTREAM3SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream3iATI PFNGLVERTEXSTREAM3IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);")
(define-entry-point glVertexStream3ivATI PFNGLVERTEXSTREAM3IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream3fATI PFNGLVERTEXSTREAM3FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexStream3fvATI PFNGLVERTEXSTREAM3FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream3dATI PFNGLVERTEXSTREAM3DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexStream3dvATI PFNGLVERTEXSTREAM3DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream4sATI PFNGLVERTEXSTREAM4SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexStream4svATI PFNGLVERTEXSTREAM4SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream4iATI PFNGLVERTEXSTREAM4IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glVertexStream4ivATI PFNGLVERTEXSTREAM4IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream4fATI PFNGLVERTEXSTREAM4FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexStream4fvATI PFNGLVERTEXSTREAM4FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream4dATI PFNGLVERTEXSTREAM4DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexStream4dvATI PFNGLVERTEXSTREAM4DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glNormalStream3bATI PFNGLNORMALSTREAM3BATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);")
(define-entry-point glNormalStream3bvATI PFNGLNORMALSTREAM3BVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);")
(define-entry-point glNormalStream3sATI PFNGLNORMALSTREAM3SATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);")
(define-entry-point glNormalStream3svATI PFNGLNORMALSTREAM3SVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glNormalStream3iATI PFNGLNORMALSTREAM3IATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);")
(define-entry-point glNormalStream3ivATI PFNGLNORMALSTREAM3IVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glNormalStream3fATI PFNGLNORMALSTREAM3FATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);")
(define-entry-point glNormalStream3fvATI PFNGLNORMALSTREAM3FVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glNormalStream3dATI PFNGLNORMALSTREAM3DATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);")
(define-entry-point glNormalStream3dvATI PFNGLNORMALSTREAM3DVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glClientActiveVertexStreamATI PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);")
(define-entry-point glVertexBlendEnviATI PFNGLVERTEXBLENDENVIATIPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);")
(define-entry-point glVertexBlendEnvfATI PFNGLVERTEXBLENDENVFATIPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);")
(define-entry-point glElementPointerATI PFNGLELEMENTPOINTERATIPROC "typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);")
(define-entry-point glDrawElementArrayATI PFNGLDRAWELEMENTARRAYATIPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);")
(define-entry-point glDrawRangeElementArrayATI PFNGLDRAWRANGEELEMENTARRAYATIPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);")
(define-entry-point glDrawMeshArraysSUN PFNGLDRAWMESHARRAYSSUNPROC "typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);")
(define-entry-point glGenOcclusionQueriesNV PFNGLGENOCCLUSIONQUERIESNVPROC "typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteOcclusionQueriesNV PFNGLDELETEOCCLUSIONQUERIESNVPROC "typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsOcclusionQueryNV PFNGLISOCCLUSIONQUERYNVPROC "typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);")
(define-entry-point glBeginOcclusionQueryNV PFNGLBEGINOCCLUSIONQUERYNVPROC "typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);")
(define-entry-point glEndOcclusionQueryNV PFNGLENDOCCLUSIONQUERYNVPROC "typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);")
(define-entry-point glGetOcclusionQueryivNV PFNGLGETOCCLUSIONQUERYIVNVPROC "typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetOcclusionQueryuivNV PFNGLGETOCCLUSIONQUERYUIVNVPROC "typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glPointParameteriNV PFNGLPOINTPARAMETERINVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);")
(define-entry-point glPointParameterivNV PFNGLPOINTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glActiveStencilFaceEXT PFNGLACTIVESTENCILFACEEXTPROC "typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);")
(define-entry-point glElementPointerAPPLE PFNGLELEMENTPOINTERAPPLEPROC "typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);")
(define-entry-point glDrawElementArrayAPPLE PFNGLDRAWELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);")
(define-entry-point glDrawRangeElementArrayAPPLE PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);")
(define-entry-point glMultiDrawElementArrayAPPLE PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);")
(define-entry-point glMultiDrawRangeElementArrayAPPLE PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);")
(define-entry-point glGenFencesAPPLE PFNGLGENFENCESAPPLEPROC "typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);")
(define-entry-point glDeleteFencesAPPLE PFNGLDELETEFENCESAPPLEPROC "typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);")
(define-entry-point glSetFenceAPPLE PFNGLSETFENCEAPPLEPROC "typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glIsFenceAPPLE PFNGLISFENCEAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glTestFenceAPPLE PFNGLTESTFENCEAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glFinishFenceAPPLE PFNGLFINISHFENCEAPPLEPROC "typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glTestObjectAPPLE PFNGLTESTOBJECTAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);")
(define-entry-point glFinishObjectAPPLE PFNGLFINISHOBJECTAPPLEPROC "typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);")
(define-entry-point glBindVertexArrayAPPLE PFNGLBINDVERTEXARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);")
(define-entry-point glDeleteVertexArraysAPPLE PFNGLDELETEVERTEXARRAYSAPPLEPROC "typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);")
(define-entry-point glGenVertexArraysAPPLE PFNGLGENVERTEXARRAYSAPPLEPROC "typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);")
(define-entry-point glIsVertexArrayAPPLE PFNGLISVERTEXARRAYAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);")
(define-entry-point glVertexArrayRangeAPPLE PFNGLVERTEXARRAYRANGEAPPLEPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);")
(define-entry-point glFlushVertexArrayRangeAPPLE PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC "typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);")
(define-entry-point glVertexArrayParameteriAPPLE PFNGLVERTEXARRAYPARAMETERIAPPLEPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);")
(define-entry-point glDrawBuffersATI PFNGLDRAWBUFFERSATIPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glProgramNamedParameter4fNV PFNGLPROGRAMNAMEDPARAMETER4FNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramNamedParameter4dNV PFNGLPROGRAMNAMEDPARAMETER4DNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramNamedParameter4fvNV PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);")
(define-entry-point glProgramNamedParameter4dvNV PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);")
(define-entry-point glGetProgramNamedParameterfvNV PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);")
(define-entry-point glGetProgramNamedParameterdvNV PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);")
(define-entry-point glVertex2hNV PFNGLVERTEX2HNVPROC "typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);")
(define-entry-point glVertex2hvNV PFNGLVERTEX2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertex3hNV PFNGLVERTEX3HNVPROC "typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);")
(define-entry-point glVertex3hvNV PFNGLVERTEX3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertex4hNV PFNGLVERTEX4HNVPROC "typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);")
(define-entry-point glVertex4hvNV PFNGLVERTEX4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glNormal3hNV PFNGLNORMAL3HNVPROC "typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);")
(define-entry-point glNormal3hvNV PFNGLNORMAL3HVNVPROC "typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glColor3hNV PFNGLCOLOR3HNVPROC "typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);")
(define-entry-point glColor3hvNV PFNGLCOLOR3HVNVPROC "typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glColor4hNV PFNGLCOLOR4HNVPROC "typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);")
(define-entry-point glColor4hvNV PFNGLCOLOR4HVNVPROC "typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord1hNV PFNGLTEXCOORD1HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);")
(define-entry-point glTexCoord1hvNV PFNGLTEXCOORD1HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord2hNV PFNGLTEXCOORD2HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);")
(define-entry-point glTexCoord2hvNV PFNGLTEXCOORD2HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord3hNV PFNGLTEXCOORD3HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);")
(define-entry-point glTexCoord3hvNV PFNGLTEXCOORD3HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord4hNV PFNGLTEXCOORD4HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);")
(define-entry-point glTexCoord4hvNV PFNGLTEXCOORD4HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glMultiTexCoord1hNV PFNGLMULTITEXCOORD1HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);")
(define-entry-point glMultiTexCoord1hvNV PFNGLMULTITEXCOORD1HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord2hNV PFNGLMULTITEXCOORD2HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);")
(define-entry-point glMultiTexCoord2hvNV PFNGLMULTITEXCOORD2HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord3hNV PFNGLMULTITEXCOORD3HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);")
(define-entry-point glMultiTexCoord3hvNV PFNGLMULTITEXCOORD3HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord4hNV PFNGLMULTITEXCOORD4HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);")
(define-entry-point glMultiTexCoord4hvNV PFNGLMULTITEXCOORD4HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glFogCoordhNV PFNGLFOGCOORDHNVPROC "typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);")
(define-entry-point glFogCoordhvNV PFNGLFOGCOORDHVNVPROC "typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);")
(define-entry-point glSecondaryColor3hNV PFNGLSECONDARYCOLOR3HNVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);")
(define-entry-point glSecondaryColor3hvNV PFNGLSECONDARYCOLOR3HVNVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertexWeighthNV PFNGLVERTEXWEIGHTHNVPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);")
(define-entry-point glVertexWeighthvNV PFNGLVERTEXWEIGHTHVNVPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);")
(define-entry-point glVertexAttrib1hNV PFNGLVERTEXATTRIB1HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);")
(define-entry-point glVertexAttrib1hvNV PFNGLVERTEXATTRIB1HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib2hNV PFNGLVERTEXATTRIB2HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);")
(define-entry-point glVertexAttrib2hvNV PFNGLVERTEXATTRIB2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib3hNV PFNGLVERTEXATTRIB3HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);")
(define-entry-point glVertexAttrib3hvNV PFNGLVERTEXATTRIB3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib4hNV PFNGLVERTEXATTRIB4HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);")
(define-entry-point glVertexAttrib4hvNV PFNGLVERTEXATTRIB4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttribs1hvNV PFNGLVERTEXATTRIBS1HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs2hvNV PFNGLVERTEXATTRIBS2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs3hvNV PFNGLVERTEXATTRIBS3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs4hvNV PFNGLVERTEXATTRIBS4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glPixelDataRangeNV PFNGLPIXELDATARANGENVPROC "typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);")
(define-entry-point glFlushPixelDataRangeNV PFNGLFLUSHPIXELDATARANGENVPROC "typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);")
(define-entry-point glPrimitiveRestartNV PFNGLPRIMITIVERESTARTNVPROC "typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);")
(define-entry-point glPrimitiveRestartIndexNV PFNGLPRIMITIVERESTARTINDEXNVPROC "typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);")
(define-entry-point glMapObjectBufferATI PFNGLMAPOBJECTBUFFERATIPROC "typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glUnmapObjectBufferATI PFNGLUNMAPOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glStencilOpSeparateATI PFNGLSTENCILOPSEPARATEATIPROC "typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);")
(define-entry-point glStencilFuncSeparateATI PFNGLSTENCILFUNCSEPARATEATIPROC "typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);")
(define-entry-point glVertexAttribArrayObjectATI PFNGLVERTEXATTRIBARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetVertexAttribArrayObjectfvATI PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribArrayObjectivATI PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glDepthBoundsEXT PFNGLDEPTHBOUNDSEXTPROC "typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);")
(define-entry-point glBlendEquationSeparateEXT PFNGLBLENDEQUATIONSEPARATEEXTPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glIsRenderbufferEXT PFNGLISRENDERBUFFEREXTPROC "typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);")
(define-entry-point glBindRenderbufferEXT PFNGLBINDRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);")
(define-entry-point glDeleteRenderbuffersEXT PFNGLDELETERENDERBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);")
(define-entry-point glGenRenderbuffersEXT PFNGLGENRENDERBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);")
(define-entry-point glRenderbufferStorageEXT PFNGLRENDERBUFFERSTORAGEEXTPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glGetRenderbufferParameterivEXT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glIsFramebufferEXT PFNGLISFRAMEBUFFEREXTPROC "typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);")
(define-entry-point glBindFramebufferEXT PFNGLBINDFRAMEBUFFEREXTPROC "typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);")
(define-entry-point glDeleteFramebuffersEXT PFNGLDELETEFRAMEBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);")
(define-entry-point glGenFramebuffersEXT PFNGLGENFRAMEBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);")
(define-entry-point glCheckFramebufferStatusEXT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC "typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);")
(define-entry-point glFramebufferTexture1DEXT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture2DEXT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture3DEXT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);")
(define-entry-point glFramebufferRenderbufferEXT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);")
(define-entry-point glGetFramebufferAttachmentParameterivEXT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);")
(define-entry-point glGenerateMipmapEXT PFNGLGENERATEMIPMAPEXTPROC "typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);")
(define-entry-point glStringMarkerGREMEDY PFNGLSTRINGMARKERGREMEDYPROC "typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);")

