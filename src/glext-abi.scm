;; This file should reflect the newest OpenGL extension ABI
;; You can regenarate this by feeding glext.h to extract-abi.scm
;; To obtain the newest glext.h, see
;;   http://oss.sgi.com/projects/ogl-sample/ABI/

;; Extensions
(define-extension-name GL_VERSION_1_2)
(define-extension-name GL_VERSION_1_3)
(define-extension-name GL_VERSION_1_4)
(define-extension-name GL_VERSION_1_5)
(define-extension-name GL_VERSION_2_0)
(define-extension-name GL_VERSION_2_1)
(define-extension-name GL_VERSION_3_0)
(define-extension-name GL_VERSION_3_1)
(define-extension-name GL_VERSION_3_2)
(define-extension-name GL_VERSION_3_3)
(define-extension-name GL_VERSION_4_0)
(define-extension-name GL_VERSION_4_1)
(define-extension-name GL_VERSION_4_2)
(define-extension-name GL_VERSION_4_3)
(define-extension-name GL_VERSION_4_4)
(define-extension-name GL_VERSION_4_5)
(define-extension-name GL_ARB_ES2_compatibility)
(define-extension-name GL_ARB_ES3_1_compatibility)
(define-extension-name GL_ARB_ES3_compatibility)
(define-extension-name GL_ARB_arrays_of_arrays)
(define-extension-name GL_ARB_base_instance)
(define-extension-name GL_ARB_bindless_texture)
(define-extension-name GL_ARB_blend_func_extended)
(define-extension-name GL_ARB_buffer_storage)
(define-extension-name GL_ARB_cl_event)
(define-extension-name GL_ARB_clear_buffer_object)
(define-extension-name GL_ARB_clear_texture)
(define-extension-name GL_ARB_clip_control)
(define-extension-name GL_ARB_color_buffer_float)
(define-extension-name GL_ARB_compatibility)
(define-extension-name GL_ARB_compressed_texture_pixel_storage)
(define-extension-name GL_ARB_compute_shader)
(define-extension-name GL_ARB_compute_variable_group_size)
(define-extension-name GL_ARB_conditional_render_inverted)
(define-extension-name GL_ARB_conservative_depth)
(define-extension-name GL_ARB_copy_buffer)
(define-extension-name GL_ARB_copy_image)
(define-extension-name GL_ARB_cull_distance)
(define-extension-name GL_ARB_debug_output)
(define-extension-name GL_ARB_depth_buffer_float)
(define-extension-name GL_ARB_depth_clamp)
(define-extension-name GL_ARB_depth_texture)
(define-extension-name GL_ARB_derivative_control)
(define-extension-name GL_ARB_direct_state_access)
(define-extension-name GL_ARB_draw_buffers)
(define-extension-name GL_ARB_draw_buffers_blend)
(define-extension-name GL_ARB_draw_elements_base_vertex)
(define-extension-name GL_ARB_draw_indirect)
(define-extension-name GL_ARB_draw_instanced)
(define-extension-name GL_ARB_enhanced_layouts)
(define-extension-name GL_ARB_explicit_attrib_location)
(define-extension-name GL_ARB_explicit_uniform_location)
(define-extension-name GL_ARB_fragment_coord_conventions)
(define-extension-name GL_ARB_fragment_layer_viewport)
(define-extension-name GL_ARB_fragment_program)
(define-extension-name GL_ARB_fragment_program_shadow)
(define-extension-name GL_ARB_fragment_shader)
(define-extension-name GL_ARB_framebuffer_no_attachments)
(define-extension-name GL_ARB_framebuffer_object)
(define-extension-name GL_ARB_framebuffer_sRGB)
(define-extension-name GL_ARB_geometry_shader4)
(define-extension-name GL_ARB_get_program_binary)
(define-extension-name GL_ARB_get_texture_sub_image)
(define-extension-name GL_ARB_gpu_shader5)
(define-extension-name GL_ARB_gpu_shader_fp64)
(define-extension-name GL_ARB_half_float_pixel)
(define-extension-name GL_ARB_half_float_vertex)
(define-extension-name GL_ARB_imaging)
(define-extension-name GL_ARB_indirect_parameters)
(define-extension-name GL_ARB_instanced_arrays)
(define-extension-name GL_ARB_internalformat_query)
(define-extension-name GL_ARB_internalformat_query2)
(define-extension-name GL_ARB_invalidate_subdata)
(define-extension-name GL_ARB_map_buffer_alignment)
(define-extension-name GL_ARB_map_buffer_range)
(define-extension-name GL_ARB_matrix_palette)
(define-extension-name GL_ARB_multi_bind)
(define-extension-name GL_ARB_multi_draw_indirect)
(define-extension-name GL_ARB_multisample)
(define-extension-name GL_ARB_multitexture)
(define-extension-name GL_ARB_occlusion_query)
(define-extension-name GL_ARB_occlusion_query2)
(define-extension-name GL_ARB_pipeline_statistics_query)
(define-extension-name GL_ARB_pixel_buffer_object)
(define-extension-name GL_ARB_point_parameters)
(define-extension-name GL_ARB_point_sprite)
(define-extension-name GL_ARB_program_interface_query)
(define-extension-name GL_ARB_provoking_vertex)
(define-extension-name GL_ARB_query_buffer_object)
(define-extension-name GL_ARB_robust_buffer_access_behavior)
(define-extension-name GL_ARB_robustness)
(define-extension-name GL_ARB_robustness_isolation)
(define-extension-name GL_ARB_sample_shading)
(define-extension-name GL_ARB_sampler_objects)
(define-extension-name GL_ARB_seamless_cube_map)
(define-extension-name GL_ARB_seamless_cubemap_per_texture)
(define-extension-name GL_ARB_separate_shader_objects)
(define-extension-name GL_ARB_shader_atomic_counters)
(define-extension-name GL_ARB_shader_bit_encoding)
(define-extension-name GL_ARB_shader_draw_parameters)
(define-extension-name GL_ARB_shader_group_vote)
(define-extension-name GL_ARB_shader_image_load_store)
(define-extension-name GL_ARB_shader_image_size)
(define-extension-name GL_ARB_shader_objects)
(define-extension-name GL_ARB_shader_precision)
(define-extension-name GL_ARB_shader_stencil_export)
(define-extension-name GL_ARB_shader_storage_buffer_object)
(define-extension-name GL_ARB_shader_subroutine)
(define-extension-name GL_ARB_shader_texture_image_samples)
(define-extension-name GL_ARB_shader_texture_lod)
(define-extension-name GL_ARB_shading_language_100)
(define-extension-name GL_ARB_shading_language_420pack)
(define-extension-name GL_ARB_shading_language_include)
(define-extension-name GL_ARB_shading_language_packing)
(define-extension-name GL_ARB_shadow)
(define-extension-name GL_ARB_shadow_ambient)
(define-extension-name GL_ARB_sparse_buffer)
(define-extension-name GL_ARB_sparse_texture)
(define-extension-name GL_ARB_stencil_texturing)
(define-extension-name GL_ARB_sync)
(define-extension-name GL_ARB_tessellation_shader)
(define-extension-name GL_ARB_texture_barrier)
(define-extension-name GL_ARB_texture_border_clamp)
(define-extension-name GL_ARB_texture_buffer_object)
(define-extension-name GL_ARB_texture_buffer_object_rgb32)
(define-extension-name GL_ARB_texture_buffer_range)
(define-extension-name GL_ARB_texture_compression)
(define-extension-name GL_ARB_texture_compression_bptc)
(define-extension-name GL_ARB_texture_compression_rgtc)
(define-extension-name GL_ARB_texture_cube_map)
(define-extension-name GL_ARB_texture_cube_map_array)
(define-extension-name GL_ARB_texture_env_add)
(define-extension-name GL_ARB_texture_env_combine)
(define-extension-name GL_ARB_texture_env_crossbar)
(define-extension-name GL_ARB_texture_env_dot3)
(define-extension-name GL_ARB_texture_float)
(define-extension-name GL_ARB_texture_gather)
(define-extension-name GL_ARB_texture_mirror_clamp_to_edge)
(define-extension-name GL_ARB_texture_mirrored_repeat)
(define-extension-name GL_ARB_texture_multisample)
(define-extension-name GL_ARB_texture_non_power_of_two)
(define-extension-name GL_ARB_texture_query_levels)
(define-extension-name GL_ARB_texture_query_lod)
(define-extension-name GL_ARB_texture_rectangle)
(define-extension-name GL_ARB_texture_rg)
(define-extension-name GL_ARB_texture_rgb10_a2ui)
(define-extension-name GL_ARB_texture_stencil8)
(define-extension-name GL_ARB_texture_storage)
(define-extension-name GL_ARB_texture_storage_multisample)
(define-extension-name GL_ARB_texture_swizzle)
(define-extension-name GL_ARB_texture_view)
(define-extension-name GL_ARB_timer_query)
(define-extension-name GL_ARB_transform_feedback2)
(define-extension-name GL_ARB_transform_feedback3)
(define-extension-name GL_ARB_transform_feedback_instanced)
(define-extension-name GL_ARB_transform_feedback_overflow_query)
(define-extension-name GL_ARB_transpose_matrix)
(define-extension-name GL_ARB_uniform_buffer_object)
(define-extension-name GL_ARB_vertex_array_bgra)
(define-extension-name GL_ARB_vertex_array_object)
(define-extension-name GL_ARB_vertex_attrib_64bit)
(define-extension-name GL_ARB_vertex_attrib_binding)
(define-extension-name GL_ARB_vertex_blend)
(define-extension-name GL_ARB_vertex_buffer_object)
(define-extension-name GL_ARB_vertex_program)
(define-extension-name GL_ARB_vertex_shader)
(define-extension-name GL_ARB_vertex_type_10f_11f_11f_rev)
(define-extension-name GL_ARB_vertex_type_2_10_10_10_rev)
(define-extension-name GL_ARB_viewport_array)
(define-extension-name GL_ARB_window_pos)
(define-extension-name GL_KHR_blend_equation_advanced)
(define-extension-name GL_KHR_blend_equation_advanced_coherent)
(define-extension-name GL_KHR_context_flush_control)
(define-extension-name GL_KHR_debug)
(define-extension-name GL_KHR_robust_buffer_access_behavior)
(define-extension-name GL_KHR_robustness)
(define-extension-name GL_KHR_texture_compression_astc_hdr)
(define-extension-name GL_KHR_texture_compression_astc_ldr)
(define-extension-name GL_OES_byte_coordinates)
(define-extension-name GL_OES_compressed_paletted_texture)
(define-extension-name GL_OES_fixed_point)
(define-extension-name GL_OES_query_matrix)
(define-extension-name GL_OES_read_format)
(define-extension-name GL_OES_single_precision)
(define-extension-name GL_3DFX_multisample)
(define-extension-name GL_3DFX_tbuffer)
(define-extension-name GL_3DFX_texture_compression_FXT1)
(define-extension-name GL_AMD_blend_minmax_factor)
(define-extension-name GL_AMD_conservative_depth)
(define-extension-name GL_AMD_debug_output)
(define-extension-name GL_AMD_depth_clamp_separate)
(define-extension-name GL_AMD_draw_buffers_blend)
(define-extension-name GL_AMD_gcn_shader)
(define-extension-name GL_AMD_gpu_shader_int64)
(define-extension-name GL_AMD_interleaved_elements)
(define-extension-name GL_AMD_multi_draw_indirect)
(define-extension-name GL_AMD_name_gen_delete)
(define-extension-name GL_AMD_occlusion_query_event)
(define-extension-name GL_AMD_performance_monitor)
(define-extension-name GL_AMD_pinned_memory)
(define-extension-name GL_AMD_query_buffer_object)
(define-extension-name GL_AMD_sample_positions)
(define-extension-name GL_AMD_seamless_cubemap_per_texture)
(define-extension-name GL_AMD_shader_atomic_counter_ops)
(define-extension-name GL_AMD_shader_stencil_export)
(define-extension-name GL_AMD_shader_trinary_minmax)
(define-extension-name GL_AMD_sparse_texture)
(define-extension-name GL_AMD_stencil_operation_extended)
(define-extension-name GL_AMD_texture_texture4)
(define-extension-name GL_AMD_transform_feedback3_lines_triangles)
(define-extension-name GL_AMD_transform_feedback4)
(define-extension-name GL_AMD_vertex_shader_layer)
(define-extension-name GL_AMD_vertex_shader_tessellator)
(define-extension-name GL_AMD_vertex_shader_viewport_index)
(define-extension-name GL_APPLE_aux_depth_stencil)
(define-extension-name GL_APPLE_client_storage)
(define-extension-name GL_APPLE_element_array)
(define-extension-name GL_APPLE_fence)
(define-extension-name GL_APPLE_float_pixels)
(define-extension-name GL_APPLE_flush_buffer_range)
(define-extension-name GL_APPLE_object_purgeable)
(define-extension-name GL_APPLE_rgb_422)
(define-extension-name GL_APPLE_row_bytes)
(define-extension-name GL_APPLE_specular_vector)
(define-extension-name GL_APPLE_texture_range)
(define-extension-name GL_APPLE_transform_hint)
(define-extension-name GL_APPLE_vertex_array_object)
(define-extension-name GL_APPLE_vertex_array_range)
(define-extension-name GL_APPLE_vertex_program_evaluators)
(define-extension-name GL_APPLE_ycbcr_422)
(define-extension-name GL_ATI_draw_buffers)
(define-extension-name GL_ATI_element_array)
(define-extension-name GL_ATI_envmap_bumpmap)
(define-extension-name GL_ATI_fragment_shader)
(define-extension-name GL_ATI_map_object_buffer)
(define-extension-name GL_ATI_meminfo)
(define-extension-name GL_ATI_pixel_format_float)
(define-extension-name GL_ATI_pn_triangles)
(define-extension-name GL_ATI_separate_stencil)
(define-extension-name GL_ATI_text_fragment_shader)
(define-extension-name GL_ATI_texture_env_combine3)
(define-extension-name GL_ATI_texture_float)
(define-extension-name GL_ATI_texture_mirror_once)
(define-extension-name GL_ATI_vertex_array_object)
(define-extension-name GL_ATI_vertex_attrib_array_object)
(define-extension-name GL_ATI_vertex_streams)
(define-extension-name GL_EXT_422_pixels)
(define-extension-name GL_EXT_abgr)
(define-extension-name GL_EXT_bgra)
(define-extension-name GL_EXT_bindable_uniform)
(define-extension-name GL_EXT_blend_color)
(define-extension-name GL_EXT_blend_equation_separate)
(define-extension-name GL_EXT_blend_func_separate)
(define-extension-name GL_EXT_blend_logic_op)
(define-extension-name GL_EXT_blend_minmax)
(define-extension-name GL_EXT_blend_subtract)
(define-extension-name GL_EXT_clip_volume_hint)
(define-extension-name GL_EXT_cmyka)
(define-extension-name GL_EXT_color_subtable)
(define-extension-name GL_EXT_compiled_vertex_array)
(define-extension-name GL_EXT_convolution)
(define-extension-name GL_EXT_coordinate_frame)
(define-extension-name GL_EXT_copy_texture)
(define-extension-name GL_EXT_cull_vertex)
(define-extension-name GL_EXT_debug_label)
(define-extension-name GL_EXT_debug_marker)
(define-extension-name GL_EXT_depth_bounds_test)
(define-extension-name GL_EXT_direct_state_access)
(define-extension-name GL_EXT_draw_buffers2)
(define-extension-name GL_EXT_draw_instanced)
(define-extension-name GL_EXT_draw_range_elements)
(define-extension-name GL_EXT_fog_coord)
(define-extension-name GL_EXT_framebuffer_blit)
(define-extension-name GL_EXT_framebuffer_multisample)
(define-extension-name GL_EXT_framebuffer_multisample_blit_scaled)
(define-extension-name GL_EXT_framebuffer_object)
(define-extension-name GL_EXT_framebuffer_sRGB)
(define-extension-name GL_EXT_geometry_shader4)
(define-extension-name GL_EXT_gpu_program_parameters)
(define-extension-name GL_EXT_gpu_shader4)
(define-extension-name GL_EXT_histogram)
(define-extension-name GL_EXT_index_array_formats)
(define-extension-name GL_EXT_index_func)
(define-extension-name GL_EXT_index_material)
(define-extension-name GL_EXT_index_texture)
(define-extension-name GL_EXT_light_texture)
(define-extension-name GL_EXT_misc_attribute)
(define-extension-name GL_EXT_multi_draw_arrays)
(define-extension-name GL_EXT_multisample)
(define-extension-name GL_EXT_packed_depth_stencil)
(define-extension-name GL_EXT_packed_float)
(define-extension-name GL_EXT_packed_pixels)
(define-extension-name GL_EXT_paletted_texture)
(define-extension-name GL_EXT_pixel_buffer_object)
(define-extension-name GL_EXT_pixel_transform)
(define-extension-name GL_EXT_pixel_transform_color_table)
(define-extension-name GL_EXT_point_parameters)
(define-extension-name GL_EXT_polygon_offset)
(define-extension-name GL_EXT_polygon_offset_clamp)
(define-extension-name GL_EXT_post_depth_coverage)
(define-extension-name GL_EXT_provoking_vertex)
(define-extension-name GL_EXT_raster_multisample)
(define-extension-name GL_EXT_rescale_normal)
(define-extension-name GL_EXT_secondary_color)
(define-extension-name GL_EXT_separate_shader_objects)
(define-extension-name GL_EXT_separate_specular_color)
(define-extension-name GL_EXT_shader_image_load_formatted)
(define-extension-name GL_EXT_shader_image_load_store)
(define-extension-name GL_EXT_shader_integer_mix)
(define-extension-name GL_EXT_shadow_funcs)
(define-extension-name GL_EXT_shared_texture_palette)
(define-extension-name GL_EXT_sparse_texture2)
(define-extension-name GL_EXT_stencil_clear_tag)
(define-extension-name GL_EXT_stencil_two_side)
(define-extension-name GL_EXT_stencil_wrap)
(define-extension-name GL_EXT_subtexture)
(define-extension-name GL_EXT_texture)
(define-extension-name GL_EXT_texture3D)
(define-extension-name GL_EXT_texture_array)
(define-extension-name GL_EXT_texture_buffer_object)
(define-extension-name GL_EXT_texture_compression_latc)
(define-extension-name GL_EXT_texture_compression_rgtc)
(define-extension-name GL_EXT_texture_compression_s3tc)
(define-extension-name GL_EXT_texture_cube_map)
(define-extension-name GL_EXT_texture_env_add)
(define-extension-name GL_EXT_texture_env_combine)
(define-extension-name GL_EXT_texture_env_dot3)
(define-extension-name GL_EXT_texture_filter_anisotropic)
(define-extension-name GL_EXT_texture_filter_minmax)
(define-extension-name GL_EXT_texture_integer)
(define-extension-name GL_EXT_texture_lod_bias)
(define-extension-name GL_EXT_texture_mirror_clamp)
(define-extension-name GL_EXT_texture_object)
(define-extension-name GL_EXT_texture_perturb_normal)
(define-extension-name GL_EXT_texture_sRGB)
(define-extension-name GL_EXT_texture_sRGB_decode)
(define-extension-name GL_EXT_texture_shared_exponent)
(define-extension-name GL_EXT_texture_snorm)
(define-extension-name GL_EXT_texture_swizzle)
(define-extension-name GL_EXT_timer_query)
(define-extension-name GL_EXT_transform_feedback)
(define-extension-name GL_EXT_vertex_array)
(define-extension-name GL_EXT_vertex_array_bgra)
(define-extension-name GL_EXT_vertex_attrib_64bit)
(define-extension-name GL_EXT_vertex_shader)
(define-extension-name GL_EXT_vertex_weighting)
(define-extension-name GL_EXT_x11_sync_object)
(define-extension-name GL_GREMEDY_frame_terminator)
(define-extension-name GL_GREMEDY_string_marker)
(define-extension-name GL_HP_convolution_border_modes)
(define-extension-name GL_HP_image_transform)
(define-extension-name GL_HP_occlusion_test)
(define-extension-name GL_HP_texture_lighting)
(define-extension-name GL_IBM_cull_vertex)
(define-extension-name GL_IBM_multimode_draw_arrays)
(define-extension-name GL_IBM_rasterpos_clip)
(define-extension-name GL_IBM_static_data)
(define-extension-name GL_IBM_texture_mirrored_repeat)
(define-extension-name GL_IBM_vertex_array_lists)
(define-extension-name GL_INGR_blend_func_separate)
(define-extension-name GL_INGR_color_clamp)
(define-extension-name GL_INGR_interlace_read)
(define-extension-name GL_INTEL_fragment_shader_ordering)
(define-extension-name GL_INTEL_map_texture)
(define-extension-name GL_INTEL_parallel_arrays)
(define-extension-name GL_INTEL_performance_query)
(define-extension-name GL_MESAX_texture_stack)
(define-extension-name GL_MESA_pack_invert)
(define-extension-name GL_MESA_resize_buffers)
(define-extension-name GL_MESA_window_pos)
(define-extension-name GL_MESA_ycbcr_texture)
(define-extension-name GL_NVX_conditional_render)
(define-extension-name GL_NVX_gpu_memory_info)
(define-extension-name GL_NV_bindless_multi_draw_indirect)
(define-extension-name GL_NV_bindless_multi_draw_indirect_count)
(define-extension-name GL_NV_bindless_texture)
(define-extension-name GL_NV_blend_equation_advanced)
(define-extension-name GL_NV_blend_equation_advanced_coherent)
(define-extension-name GL_NV_blend_square)
(define-extension-name GL_NV_compute_program5)
(define-extension-name GL_NV_conditional_render)
(define-extension-name GL_NV_conservative_raster)
(define-extension-name GL_NV_copy_depth_to_color)
(define-extension-name GL_NV_copy_image)
(define-extension-name GL_NV_deep_texture3D)
(define-extension-name GL_NV_depth_buffer_float)
(define-extension-name GL_NV_depth_clamp)
(define-extension-name GL_NV_draw_texture)
(define-extension-name GL_NV_evaluators)
(define-extension-name GL_NV_explicit_multisample)
(define-extension-name GL_NV_fence)
(define-extension-name GL_NV_fill_rectangle)
(define-extension-name GL_NV_float_buffer)
(define-extension-name GL_NV_fog_distance)
(define-extension-name GL_NV_fragment_coverage_to_color)
(define-extension-name GL_NV_fragment_program)
(define-extension-name GL_NV_fragment_program2)
(define-extension-name GL_NV_fragment_program4)
(define-extension-name GL_NV_fragment_program_option)
(define-extension-name GL_NV_fragment_shader_interlock)
(define-extension-name GL_NV_framebuffer_mixed_samples)
(define-extension-name GL_NV_framebuffer_multisample_coverage)
(define-extension-name GL_NV_geometry_program4)
(define-extension-name GL_NV_geometry_shader4)
(define-extension-name GL_NV_geometry_shader_passthrough)
(define-extension-name GL_NV_gpu_program4)
(define-extension-name GL_NV_gpu_program5)
(define-extension-name GL_NV_gpu_program5_mem_extended)
(define-extension-name GL_NV_gpu_shader5)
(define-extension-name GL_NV_half_float)
(define-extension-name GL_NV_internalformat_sample_query)
(define-extension-name GL_NV_light_max_exponent)
(define-extension-name GL_NV_multisample_coverage)
(define-extension-name GL_NV_multisample_filter_hint)
(define-extension-name GL_NV_occlusion_query)
(define-extension-name GL_NV_packed_depth_stencil)
(define-extension-name GL_NV_parameter_buffer_object)
(define-extension-name GL_NV_parameter_buffer_object2)
(define-extension-name GL_NV_path_rendering)
(define-extension-name GL_NV_path_rendering_shared_edge)
(define-extension-name GL_NV_pixel_data_range)
(define-extension-name GL_NV_point_sprite)
(define-extension-name GL_NV_present_video)
(define-extension-name GL_NV_primitive_restart)
(define-extension-name GL_NV_register_combiners)
(define-extension-name GL_NV_register_combiners2)
(define-extension-name GL_NV_sample_locations)
(define-extension-name GL_NV_sample_mask_override_coverage)
(define-extension-name GL_NV_shader_atomic_counters)
(define-extension-name GL_NV_shader_atomic_float)
(define-extension-name GL_NV_shader_atomic_fp16_vector)
(define-extension-name GL_NV_shader_atomic_int64)
(define-extension-name GL_NV_shader_buffer_load)
(define-extension-name GL_NV_shader_buffer_store)
(define-extension-name GL_NV_shader_storage_buffer_object)
(define-extension-name GL_NV_shader_thread_group)
(define-extension-name GL_NV_shader_thread_shuffle)
(define-extension-name GL_NV_tessellation_program5)
(define-extension-name GL_NV_texgen_emboss)
(define-extension-name GL_NV_texgen_reflection)
(define-extension-name GL_NV_texture_barrier)
(define-extension-name GL_NV_texture_compression_vtc)
(define-extension-name GL_NV_texture_env_combine4)
(define-extension-name GL_NV_texture_expand_normal)
(define-extension-name GL_NV_texture_multisample)
(define-extension-name GL_NV_texture_rectangle)
(define-extension-name GL_NV_texture_shader)
(define-extension-name GL_NV_texture_shader2)
(define-extension-name GL_NV_texture_shader3)
(define-extension-name GL_NV_transform_feedback)
(define-extension-name GL_NV_transform_feedback2)
(define-extension-name GL_NV_uniform_buffer_unified_memory)
(define-extension-name GL_NV_vdpau_interop)
(define-extension-name GL_NV_vertex_array_range)
(define-extension-name GL_NV_vertex_array_range2)
(define-extension-name GL_NV_vertex_attrib_integer_64bit)
(define-extension-name GL_NV_vertex_buffer_unified_memory)
(define-extension-name GL_NV_vertex_program)
(define-extension-name GL_NV_vertex_program1_1)
(define-extension-name GL_NV_vertex_program2)
(define-extension-name GL_NV_vertex_program2_option)
(define-extension-name GL_NV_vertex_program3)
(define-extension-name GL_NV_vertex_program4)
(define-extension-name GL_NV_video_capture)
(define-extension-name GL_OML_interlace)
(define-extension-name GL_OML_resample)
(define-extension-name GL_OML_subsample)
(define-extension-name GL_PGI_misc_hints)
(define-extension-name GL_PGI_vertex_hints)
(define-extension-name GL_REND_screen_coordinates)
(define-extension-name GL_S3_s3tc)
(define-extension-name GL_SGIS_detail_texture)
(define-extension-name GL_SGIS_fog_function)
(define-extension-name GL_SGIS_generate_mipmap)
(define-extension-name GL_SGIS_multisample)
(define-extension-name GL_SGIS_pixel_texture)
(define-extension-name GL_SGIS_point_line_texgen)
(define-extension-name GL_SGIS_point_parameters)
(define-extension-name GL_SGIS_sharpen_texture)
(define-extension-name GL_SGIS_texture4D)
(define-extension-name GL_SGIS_texture_border_clamp)
(define-extension-name GL_SGIS_texture_color_mask)
(define-extension-name GL_SGIS_texture_edge_clamp)
(define-extension-name GL_SGIS_texture_filter4)
(define-extension-name GL_SGIS_texture_lod)
(define-extension-name GL_SGIS_texture_select)
(define-extension-name GL_SGIX_async)
(define-extension-name GL_SGIX_async_histogram)
(define-extension-name GL_SGIX_async_pixel)
(define-extension-name GL_SGIX_blend_alpha_minmax)
(define-extension-name GL_SGIX_calligraphic_fragment)
(define-extension-name GL_SGIX_clipmap)
(define-extension-name GL_SGIX_convolution_accuracy)
(define-extension-name GL_SGIX_depth_pass_instrument)
(define-extension-name GL_SGIX_depth_texture)
(define-extension-name GL_SGIX_flush_raster)
(define-extension-name GL_SGIX_fog_offset)
(define-extension-name GL_SGIX_fragment_lighting)
(define-extension-name GL_SGIX_framezoom)
(define-extension-name GL_SGIX_igloo_interface)
(define-extension-name GL_SGIX_instruments)
(define-extension-name GL_SGIX_interlace)
(define-extension-name GL_SGIX_ir_instrument1)
(define-extension-name GL_SGIX_list_priority)
(define-extension-name GL_SGIX_pixel_texture)
(define-extension-name GL_SGIX_pixel_tiles)
(define-extension-name GL_SGIX_polynomial_ffd)
(define-extension-name GL_SGIX_reference_plane)
(define-extension-name GL_SGIX_resample)
(define-extension-name GL_SGIX_scalebias_hint)
(define-extension-name GL_SGIX_shadow)
(define-extension-name GL_SGIX_shadow_ambient)
(define-extension-name GL_SGIX_sprite)
(define-extension-name GL_SGIX_subsample)
(define-extension-name GL_SGIX_tag_sample_buffer)
(define-extension-name GL_SGIX_texture_add_env)
(define-extension-name GL_SGIX_texture_coordinate_clamp)
(define-extension-name GL_SGIX_texture_lod_bias)
(define-extension-name GL_SGIX_texture_multi_buffer)
(define-extension-name GL_SGIX_texture_scale_bias)
(define-extension-name GL_SGIX_vertex_preclip)
(define-extension-name GL_SGIX_ycrcb)
(define-extension-name GL_SGIX_ycrcb_subsample)
(define-extension-name GL_SGIX_ycrcba)
(define-extension-name GL_SGI_color_matrix)
(define-extension-name GL_SGI_color_table)
(define-extension-name GL_SGI_texture_color_table)
(define-extension-name GL_SUNX_constant_data)
(define-extension-name GL_SUN_convolution_border_modes)
(define-extension-name GL_SUN_global_alpha)
(define-extension-name GL_SUN_mesh_array)
(define-extension-name GL_SUN_slice_accum)
(define-extension-name GL_SUN_triangle_list)
(define-extension-name GL_SUN_vertex)
(define-extension-name GL_WIN_phong_shading)
(define-extension-name GL_WIN_specular_fog)

;; Constants
(define-constant GL_FALSE #x0000)
(define-constant GL_TRUE #x0001)
(define-constant GL_BYTE #x1400)
(define-constant GL_UNSIGNED_BYTE #x1401)
(define-constant GL_SHORT #x1402)
(define-constant GL_UNSIGNED_SHORT #x1403)
(define-constant GL_INT #x1404)
(define-constant GL_UNSIGNED_INT #x1405)
(define-constant GL_FLOAT #x1406)
(define-constant GL_DOUBLE #x140a)
(define-constant GL_2_BYTES #x1407)
(define-constant GL_3_BYTES #x1408)
(define-constant GL_4_BYTES #x1409)
(define-constant GL_POINTS #x0000)
(define-constant GL_LINES #x0001)
(define-constant GL_LINE_LOOP #x0002)
(define-constant GL_LINE_STRIP #x0003)
(define-constant GL_TRIANGLES #x0004)
(define-constant GL_TRIANGLE_STRIP #x0005)
(define-constant GL_TRIANGLE_FAN #x0006)
(define-constant GL_QUADS #x0007)
(define-constant GL_QUAD_STRIP #x0008)
(define-constant GL_POLYGON #x0009)
(define-constant GL_VERTEX_ARRAY #x8074)
(define-constant GL_NORMAL_ARRAY #x8075)
(define-constant GL_COLOR_ARRAY #x8076)
(define-constant GL_INDEX_ARRAY #x8077)
(define-constant GL_TEXTURE_COORD_ARRAY #x8078)
(define-constant GL_EDGE_FLAG_ARRAY #x8079)
(define-constant GL_VERTEX_ARRAY_SIZE #x807a)
(define-constant GL_VERTEX_ARRAY_TYPE #x807b)
(define-constant GL_VERTEX_ARRAY_STRIDE #x807c)
(define-constant GL_NORMAL_ARRAY_TYPE #x807e)
(define-constant GL_NORMAL_ARRAY_STRIDE #x807f)
(define-constant GL_COLOR_ARRAY_SIZE #x8081)
(define-constant GL_COLOR_ARRAY_TYPE #x8082)
(define-constant GL_COLOR_ARRAY_STRIDE #x8083)
(define-constant GL_INDEX_ARRAY_TYPE #x8085)
(define-constant GL_INDEX_ARRAY_STRIDE #x8086)
(define-constant GL_TEXTURE_COORD_ARRAY_SIZE #x8088)
(define-constant GL_TEXTURE_COORD_ARRAY_TYPE #x8089)
(define-constant GL_TEXTURE_COORD_ARRAY_STRIDE #x808a)
(define-constant GL_EDGE_FLAG_ARRAY_STRIDE #x808c)
(define-constant GL_VERTEX_ARRAY_POINTER #x808e)
(define-constant GL_NORMAL_ARRAY_POINTER #x808f)
(define-constant GL_COLOR_ARRAY_POINTER #x8090)
(define-constant GL_INDEX_ARRAY_POINTER #x8091)
(define-constant GL_TEXTURE_COORD_ARRAY_POINTER #x8092)
(define-constant GL_EDGE_FLAG_ARRAY_POINTER #x8093)
(define-constant GL_V2F #x2a20)
(define-constant GL_V3F #x2a21)
(define-constant GL_C4UB_V2F #x2a22)
(define-constant GL_C4UB_V3F #x2a23)
(define-constant GL_C3F_V3F #x2a24)
(define-constant GL_N3F_V3F #x2a25)
(define-constant GL_C4F_N3F_V3F #x2a26)
(define-constant GL_T2F_V3F #x2a27)
(define-constant GL_T4F_V4F #x2a28)
(define-constant GL_T2F_C4UB_V3F #x2a29)
(define-constant GL_T2F_C3F_V3F #x2a2a)
(define-constant GL_T2F_N3F_V3F #x2a2b)
(define-constant GL_T2F_C4F_N3F_V3F #x2a2c)
(define-constant GL_T4F_C4F_N3F_V4F #x2a2d)
(define-constant GL_MATRIX_MODE #x0ba0)
(define-constant GL_MODELVIEW #x1700)
(define-constant GL_PROJECTION #x1701)
(define-constant GL_TEXTURE #x1702)
(define-constant GL_POINT_SMOOTH #x0b10)
(define-constant GL_POINT_SIZE #x0b11)
(define-constant GL_POINT_SIZE_GRANULARITY #x0b13)
(define-constant GL_POINT_SIZE_RANGE #x0b12)
(define-constant GL_LINE_SMOOTH #x0b20)
(define-constant GL_LINE_STIPPLE #x0b24)
(define-constant GL_LINE_STIPPLE_PATTERN #x0b25)
(define-constant GL_LINE_STIPPLE_REPEAT #x0b26)
(define-constant GL_LINE_WIDTH #x0b21)
(define-constant GL_LINE_WIDTH_GRANULARITY #x0b23)
(define-constant GL_LINE_WIDTH_RANGE #x0b22)
(define-constant GL_POINT #x1b00)
(define-constant GL_LINE #x1b01)
(define-constant GL_FILL #x1b02)
(define-constant GL_CW #x0900)
(define-constant GL_CCW #x0901)
(define-constant GL_FRONT #x0404)
(define-constant GL_BACK #x0405)
(define-constant GL_POLYGON_MODE #x0b40)
(define-constant GL_POLYGON_SMOOTH #x0b41)
(define-constant GL_POLYGON_STIPPLE #x0b42)
(define-constant GL_EDGE_FLAG #x0b43)
(define-constant GL_CULL_FACE #x0b44)
(define-constant GL_CULL_FACE_MODE #x0b45)
(define-constant GL_FRONT_FACE #x0b46)
(define-constant GL_POLYGON_OFFSET_FACTOR #x8038)
(define-constant GL_POLYGON_OFFSET_UNITS #x2a00)
(define-constant GL_POLYGON_OFFSET_POINT #x2a01)
(define-constant GL_POLYGON_OFFSET_LINE #x2a02)
(define-constant GL_POLYGON_OFFSET_FILL #x8037)
(define-constant GL_COMPILE #x1300)
(define-constant GL_COMPILE_AND_EXECUTE #x1301)
(define-constant GL_LIST_BASE #x0b32)
(define-constant GL_LIST_INDEX #x0b33)
(define-constant GL_LIST_MODE #x0b30)
(define-constant GL_NEVER #x0200)
(define-constant GL_LESS #x0201)
(define-constant GL_EQUAL #x0202)
(define-constant GL_LEQUAL #x0203)
(define-constant GL_GREATER #x0204)
(define-constant GL_NOTEQUAL #x0205)
(define-constant GL_GEQUAL #x0206)
(define-constant GL_ALWAYS #x0207)
(define-constant GL_DEPTH_TEST #x0b71)
(define-constant GL_DEPTH_BITS #x0d56)
(define-constant GL_DEPTH_CLEAR_VALUE #x0b73)
(define-constant GL_DEPTH_FUNC #x0b74)
(define-constant GL_DEPTH_RANGE #x0b70)
(define-constant GL_DEPTH_WRITEMASK #x0b72)
(define-constant GL_DEPTH_COMPONENT #x1902)
(define-constant GL_LIGHTING #x0b50)
(define-constant GL_LIGHT0 #x4000)
(define-constant GL_LIGHT1 #x4001)
(define-constant GL_LIGHT2 #x4002)
(define-constant GL_LIGHT3 #x4003)
(define-constant GL_LIGHT4 #x4004)
(define-constant GL_LIGHT5 #x4005)
(define-constant GL_LIGHT6 #x4006)
(define-constant GL_LIGHT7 #x4007)
(define-constant GL_SPOT_EXPONENT #x1205)
(define-constant GL_SPOT_CUTOFF #x1206)
(define-constant GL_CONSTANT_ATTENUATION #x1207)
(define-constant GL_LINEAR_ATTENUATION #x1208)
(define-constant GL_QUADRATIC_ATTENUATION #x1209)
(define-constant GL_AMBIENT #x1200)
(define-constant GL_DIFFUSE #x1201)
(define-constant GL_SPECULAR #x1202)
(define-constant GL_SHININESS #x1601)
(define-constant GL_EMISSION #x1600)
(define-constant GL_POSITION #x1203)
(define-constant GL_SPOT_DIRECTION #x1204)
(define-constant GL_AMBIENT_AND_DIFFUSE #x1602)
(define-constant GL_COLOR_INDEXES #x1603)
(define-constant GL_LIGHT_MODEL_TWO_SIDE #x0b52)
(define-constant GL_LIGHT_MODEL_LOCAL_VIEWER #x0b51)
(define-constant GL_LIGHT_MODEL_AMBIENT #x0b53)
(define-constant GL_FRONT_AND_BACK #x0408)
(define-constant GL_SHADE_MODEL #x0b54)
(define-constant GL_FLAT #x1d00)
(define-constant GL_SMOOTH #x1d01)
(define-constant GL_COLOR_MATERIAL #x0b57)
(define-constant GL_COLOR_MATERIAL_FACE #x0b55)
(define-constant GL_COLOR_MATERIAL_PARAMETER #x0b56)
(define-constant GL_NORMALIZE #x0ba1)
(define-constant GL_CLIP_PLANE0 #x3000)
(define-constant GL_CLIP_PLANE1 #x3001)
(define-constant GL_CLIP_PLANE2 #x3002)
(define-constant GL_CLIP_PLANE3 #x3003)
(define-constant GL_CLIP_PLANE4 #x3004)
(define-constant GL_CLIP_PLANE5 #x3005)
(define-constant GL_ACCUM_RED_BITS #x0d58)
(define-constant GL_ACCUM_GREEN_BITS #x0d59)
(define-constant GL_ACCUM_BLUE_BITS #x0d5a)
(define-constant GL_ACCUM_ALPHA_BITS #x0d5b)
(define-constant GL_ACCUM_CLEAR_VALUE #x0b80)
(define-constant GL_ACCUM #x0100)
(define-constant GL_ADD #x0104)
(define-constant GL_LOAD #x0101)
(define-constant GL_MULT #x0103)
(define-constant GL_RETURN #x0102)
(define-constant GL_ALPHA_TEST #x0bc0)
(define-constant GL_ALPHA_TEST_REF #x0bc2)
(define-constant GL_ALPHA_TEST_FUNC #x0bc1)
(define-constant GL_BLEND #x0be2)
(define-constant GL_BLEND_SRC #x0be1)
(define-constant GL_BLEND_DST #x0be0)
(define-constant GL_ZERO #x0000)
(define-constant GL_ONE #x0001)
(define-constant GL_SRC_COLOR #x0300)
(define-constant GL_ONE_MINUS_SRC_COLOR #x0301)
(define-constant GL_SRC_ALPHA #x0302)
(define-constant GL_ONE_MINUS_SRC_ALPHA #x0303)
(define-constant GL_DST_ALPHA #x0304)
(define-constant GL_ONE_MINUS_DST_ALPHA #x0305)
(define-constant GL_DST_COLOR #x0306)
(define-constant GL_ONE_MINUS_DST_COLOR #x0307)
(define-constant GL_SRC_ALPHA_SATURATE #x0308)
(define-constant GL_CONSTANT_COLOR #x8001)
(define-constant GL_ONE_MINUS_CONSTANT_COLOR #x8002)
(define-constant GL_CONSTANT_ALPHA #x8003)
(define-constant GL_ONE_MINUS_CONSTANT_ALPHA #x8004)
(define-constant GL_FEEDBACK #x1c01)
(define-constant GL_RENDER #x1c00)
(define-constant GL_SELECT #x1c02)
(define-constant GL_2D #x0600)
(define-constant GL_3D #x0601)
(define-constant GL_3D_COLOR #x0602)
(define-constant GL_3D_COLOR_TEXTURE #x0603)
(define-constant GL_4D_COLOR_TEXTURE #x0604)
(define-constant GL_POINT_TOKEN #x0701)
(define-constant GL_LINE_TOKEN #x0702)
(define-constant GL_LINE_RESET_TOKEN #x0707)
(define-constant GL_POLYGON_TOKEN #x0703)
(define-constant GL_BITMAP_TOKEN #x0704)
(define-constant GL_DRAW_PIXEL_TOKEN #x0705)
(define-constant GL_COPY_PIXEL_TOKEN #x0706)
(define-constant GL_PASS_THROUGH_TOKEN #x0700)
(define-constant GL_FEEDBACK_BUFFER_POINTER #x0df0)
(define-constant GL_FEEDBACK_BUFFER_SIZE #x0df1)
(define-constant GL_FEEDBACK_BUFFER_TYPE #x0df2)
(define-constant GL_SELECTION_BUFFER_POINTER #x0df3)
(define-constant GL_SELECTION_BUFFER_SIZE #x0df4)
(define-constant GL_FOG #x0b60)
(define-constant GL_FOG_MODE #x0b65)
(define-constant GL_FOG_DENSITY #x0b62)
(define-constant GL_FOG_COLOR #x0b66)
(define-constant GL_FOG_INDEX #x0b61)
(define-constant GL_FOG_START #x0b63)
(define-constant GL_FOG_END #x0b64)
(define-constant GL_LINEAR #x2601)
(define-constant GL_EXP #x0800)
(define-constant GL_EXP2 #x0801)
(define-constant GL_LOGIC_OP #x0bf1)
(define-constant GL_INDEX_LOGIC_OP #x0bf1)
(define-constant GL_COLOR_LOGIC_OP #x0bf2)
(define-constant GL_LOGIC_OP_MODE #x0bf0)
(define-constant GL_CLEAR #x1500)
(define-constant GL_SET #x150f)
(define-constant GL_COPY #x1503)
(define-constant GL_COPY_INVERTED #x150c)
(define-constant GL_NOOP #x1505)
(define-constant GL_INVERT #x150a)
(define-constant GL_AND #x1501)
(define-constant GL_NAND #x150e)
(define-constant GL_OR #x1507)
(define-constant GL_NOR #x1508)
(define-constant GL_XOR #x1506)
(define-constant GL_EQUIV #x1509)
(define-constant GL_AND_REVERSE #x1502)
(define-constant GL_AND_INVERTED #x1504)
(define-constant GL_OR_REVERSE #x150b)
(define-constant GL_OR_INVERTED #x150d)
(define-constant GL_STENCIL_TEST #x0b90)
(define-constant GL_STENCIL_WRITEMASK #x0b98)
(define-constant GL_STENCIL_BITS #x0d57)
(define-constant GL_STENCIL_FUNC #x0b92)
(define-constant GL_STENCIL_VALUE_MASK #x0b93)
(define-constant GL_STENCIL_REF #x0b97)
(define-constant GL_STENCIL_FAIL #x0b94)
(define-constant GL_STENCIL_PASS_DEPTH_PASS #x0b96)
(define-constant GL_STENCIL_PASS_DEPTH_FAIL #x0b95)
(define-constant GL_STENCIL_CLEAR_VALUE #x0b91)
(define-constant GL_STENCIL_INDEX #x1901)
(define-constant GL_KEEP #x1e00)
(define-constant GL_REPLACE #x1e01)
(define-constant GL_INCR #x1e02)
(define-constant GL_DECR #x1e03)
(define-constant GL_NONE #x0000)
(define-constant GL_LEFT #x0406)
(define-constant GL_RIGHT #x0407)
(define-constant GL_FRONT_LEFT #x0400)
(define-constant GL_FRONT_RIGHT #x0401)
(define-constant GL_BACK_LEFT #x0402)
(define-constant GL_BACK_RIGHT #x0403)
(define-constant GL_AUX0 #x0409)
(define-constant GL_AUX1 #x040a)
(define-constant GL_AUX2 #x040b)
(define-constant GL_AUX3 #x040c)
(define-constant GL_COLOR_INDEX #x1900)
(define-constant GL_RED #x1903)
(define-constant GL_GREEN #x1904)
(define-constant GL_BLUE #x1905)
(define-constant GL_ALPHA #x1906)
(define-constant GL_LUMINANCE #x1909)
(define-constant GL_LUMINANCE_ALPHA #x190a)
(define-constant GL_ALPHA_BITS #x0d55)
(define-constant GL_RED_BITS #x0d52)
(define-constant GL_GREEN_BITS #x0d53)
(define-constant GL_BLUE_BITS #x0d54)
(define-constant GL_INDEX_BITS #x0d51)
(define-constant GL_SUBPIXEL_BITS #x0d50)
(define-constant GL_AUX_BUFFERS #x0c00)
(define-constant GL_READ_BUFFER #x0c02)
(define-constant GL_DRAW_BUFFER #x0c01)
(define-constant GL_DOUBLEBUFFER #x0c32)
(define-constant GL_STEREO #x0c33)
(define-constant GL_BITMAP #x1a00)
(define-constant GL_COLOR #x1800)
(define-constant GL_DEPTH #x1801)
(define-constant GL_STENCIL #x1802)
(define-constant GL_DITHER #x0bd0)
(define-constant GL_RGB #x1907)
(define-constant GL_RGBA #x1908)
(define-constant GL_MAX_LIST_NESTING #x0b31)
(define-constant GL_MAX_ATTRIB_STACK_DEPTH #x0d35)
(define-constant GL_MAX_MODELVIEW_STACK_DEPTH #x0d36)
(define-constant GL_MAX_NAME_STACK_DEPTH #x0d37)
(define-constant GL_MAX_PROJECTION_STACK_DEPTH #x0d38)
(define-constant GL_MAX_TEXTURE_STACK_DEPTH #x0d39)
(define-constant GL_MAX_EVAL_ORDER #x0d30)
(define-constant GL_MAX_LIGHTS #x0d31)
(define-constant GL_MAX_CLIP_PLANES #x0d32)
(define-constant GL_MAX_TEXTURE_SIZE #x0d33)
(define-constant GL_MAX_PIXEL_MAP_TABLE #x0d34)
(define-constant GL_MAX_VIEWPORT_DIMS #x0d3a)
(define-constant GL_MAX_CLIENT_ATTRIB_STACK_DEPTH #x0d3b)
(define-constant GL_ATTRIB_STACK_DEPTH #x0bb0)
(define-constant GL_CLIENT_ATTRIB_STACK_DEPTH #x0bb1)
(define-constant GL_COLOR_CLEAR_VALUE #x0c22)
(define-constant GL_COLOR_WRITEMASK #x0c23)
(define-constant GL_CURRENT_INDEX #x0b01)
(define-constant GL_CURRENT_COLOR #x0b00)
(define-constant GL_CURRENT_NORMAL #x0b02)
(define-constant GL_CURRENT_RASTER_COLOR #x0b04)
(define-constant GL_CURRENT_RASTER_DISTANCE #x0b09)
(define-constant GL_CURRENT_RASTER_INDEX #x0b05)
(define-constant GL_CURRENT_RASTER_POSITION #x0b07)
(define-constant GL_CURRENT_RASTER_TEXTURE_COORDS #x0b06)
(define-constant GL_CURRENT_RASTER_POSITION_VALID #x0b08)
(define-constant GL_CURRENT_TEXTURE_COORDS #x0b03)
(define-constant GL_INDEX_CLEAR_VALUE #x0c20)
(define-constant GL_INDEX_MODE #x0c30)
(define-constant GL_INDEX_WRITEMASK #x0c21)
(define-constant GL_MODELVIEW_MATRIX #x0ba6)
(define-constant GL_MODELVIEW_STACK_DEPTH #x0ba3)
(define-constant GL_NAME_STACK_DEPTH #x0d70)
(define-constant GL_PROJECTION_MATRIX #x0ba7)
(define-constant GL_PROJECTION_STACK_DEPTH #x0ba4)
(define-constant GL_RENDER_MODE #x0c40)
(define-constant GL_RGBA_MODE #x0c31)
(define-constant GL_TEXTURE_MATRIX #x0ba8)
(define-constant GL_TEXTURE_STACK_DEPTH #x0ba5)
(define-constant GL_VIEWPORT #x0ba2)
(define-constant GL_AUTO_NORMAL #x0d80)
(define-constant GL_MAP1_COLOR_4 #x0d90)
(define-constant GL_MAP1_GRID_DOMAIN #x0dd0)
(define-constant GL_MAP1_GRID_SEGMENTS #x0dd1)
(define-constant GL_MAP1_INDEX #x0d91)
(define-constant GL_MAP1_NORMAL #x0d92)
(define-constant GL_MAP1_TEXTURE_COORD_1 #x0d93)
(define-constant GL_MAP1_TEXTURE_COORD_2 #x0d94)
(define-constant GL_MAP1_TEXTURE_COORD_3 #x0d95)
(define-constant GL_MAP1_TEXTURE_COORD_4 #x0d96)
(define-constant GL_MAP1_VERTEX_3 #x0d97)
(define-constant GL_MAP1_VERTEX_4 #x0d98)
(define-constant GL_MAP2_COLOR_4 #x0db0)
(define-constant GL_MAP2_GRID_DOMAIN #x0dd2)
(define-constant GL_MAP2_GRID_SEGMENTS #x0dd3)
(define-constant GL_MAP2_INDEX #x0db1)
(define-constant GL_MAP2_NORMAL #x0db2)
(define-constant GL_MAP2_TEXTURE_COORD_1 #x0db3)
(define-constant GL_MAP2_TEXTURE_COORD_2 #x0db4)
(define-constant GL_MAP2_TEXTURE_COORD_3 #x0db5)
(define-constant GL_MAP2_TEXTURE_COORD_4 #x0db6)
(define-constant GL_MAP2_VERTEX_3 #x0db7)
(define-constant GL_MAP2_VERTEX_4 #x0db8)
(define-constant GL_COEFF #x0a00)
(define-constant GL_DOMAIN #x0a02)
(define-constant GL_ORDER #x0a01)
(define-constant GL_FOG_HINT #x0c54)
(define-constant GL_LINE_SMOOTH_HINT #x0c52)
(define-constant GL_PERSPECTIVE_CORRECTION_HINT #x0c50)
(define-constant GL_POINT_SMOOTH_HINT #x0c51)
(define-constant GL_POLYGON_SMOOTH_HINT #x0c53)
(define-constant GL_DONT_CARE #x1100)
(define-constant GL_FASTEST #x1101)
(define-constant GL_NICEST #x1102)
(define-constant GL_SCISSOR_TEST #x0c11)
(define-constant GL_SCISSOR_BOX #x0c10)
(define-constant GL_MAP_COLOR #x0d10)
(define-constant GL_MAP_STENCIL #x0d11)
(define-constant GL_INDEX_SHIFT #x0d12)
(define-constant GL_INDEX_OFFSET #x0d13)
(define-constant GL_RED_SCALE #x0d14)
(define-constant GL_RED_BIAS #x0d15)
(define-constant GL_GREEN_SCALE #x0d18)
(define-constant GL_GREEN_BIAS #x0d19)
(define-constant GL_BLUE_SCALE #x0d1a)
(define-constant GL_BLUE_BIAS #x0d1b)
(define-constant GL_ALPHA_SCALE #x0d1c)
(define-constant GL_ALPHA_BIAS #x0d1d)
(define-constant GL_DEPTH_SCALE #x0d1e)
(define-constant GL_DEPTH_BIAS #x0d1f)
(define-constant GL_PIXEL_MAP_S_TO_S_SIZE #x0cb1)
(define-constant GL_PIXEL_MAP_I_TO_I_SIZE #x0cb0)
(define-constant GL_PIXEL_MAP_I_TO_R_SIZE #x0cb2)
(define-constant GL_PIXEL_MAP_I_TO_G_SIZE #x0cb3)
(define-constant GL_PIXEL_MAP_I_TO_B_SIZE #x0cb4)
(define-constant GL_PIXEL_MAP_I_TO_A_SIZE #x0cb5)
(define-constant GL_PIXEL_MAP_R_TO_R_SIZE #x0cb6)
(define-constant GL_PIXEL_MAP_G_TO_G_SIZE #x0cb7)
(define-constant GL_PIXEL_MAP_B_TO_B_SIZE #x0cb8)
(define-constant GL_PIXEL_MAP_A_TO_A_SIZE #x0cb9)
(define-constant GL_PIXEL_MAP_S_TO_S #x0c71)
(define-constant GL_PIXEL_MAP_I_TO_I #x0c70)
(define-constant GL_PIXEL_MAP_I_TO_R #x0c72)
(define-constant GL_PIXEL_MAP_I_TO_G #x0c73)
(define-constant GL_PIXEL_MAP_I_TO_B #x0c74)
(define-constant GL_PIXEL_MAP_I_TO_A #x0c75)
(define-constant GL_PIXEL_MAP_R_TO_R #x0c76)
(define-constant GL_PIXEL_MAP_G_TO_G #x0c77)
(define-constant GL_PIXEL_MAP_B_TO_B #x0c78)
(define-constant GL_PIXEL_MAP_A_TO_A #x0c79)
(define-constant GL_PACK_ALIGNMENT #x0d05)
(define-constant GL_PACK_LSB_FIRST #x0d01)
(define-constant GL_PACK_ROW_LENGTH #x0d02)
(define-constant GL_PACK_SKIP_PIXELS #x0d04)
(define-constant GL_PACK_SKIP_ROWS #x0d03)
(define-constant GL_PACK_SWAP_BYTES #x0d00)
(define-constant GL_UNPACK_ALIGNMENT #x0cf5)
(define-constant GL_UNPACK_LSB_FIRST #x0cf1)
(define-constant GL_UNPACK_ROW_LENGTH #x0cf2)
(define-constant GL_UNPACK_SKIP_PIXELS #x0cf4)
(define-constant GL_UNPACK_SKIP_ROWS #x0cf3)
(define-constant GL_UNPACK_SWAP_BYTES #x0cf0)
(define-constant GL_ZOOM_X #x0d16)
(define-constant GL_ZOOM_Y #x0d17)
(define-constant GL_TEXTURE_ENV #x2300)
(define-constant GL_TEXTURE_ENV_MODE #x2200)
(define-constant GL_TEXTURE_1D #x0de0)
(define-constant GL_TEXTURE_2D #x0de1)
(define-constant GL_TEXTURE_WRAP_S #x2802)
(define-constant GL_TEXTURE_WRAP_T #x2803)
(define-constant GL_TEXTURE_MAG_FILTER #x2800)
(define-constant GL_TEXTURE_MIN_FILTER #x2801)
(define-constant GL_TEXTURE_ENV_COLOR #x2201)
(define-constant GL_TEXTURE_GEN_S #x0c60)
(define-constant GL_TEXTURE_GEN_T #x0c61)
(define-constant GL_TEXTURE_GEN_MODE #x2500)
(define-constant GL_TEXTURE_BORDER_COLOR #x1004)
(define-constant GL_TEXTURE_WIDTH #x1000)
(define-constant GL_TEXTURE_HEIGHT #x1001)
(define-constant GL_TEXTURE_BORDER #x1005)
(define-constant GL_TEXTURE_COMPONENTS #x1003)
(define-constant GL_TEXTURE_RED_SIZE #x805c)
(define-constant GL_TEXTURE_GREEN_SIZE #x805d)
(define-constant GL_TEXTURE_BLUE_SIZE #x805e)
(define-constant GL_TEXTURE_ALPHA_SIZE #x805f)
(define-constant GL_TEXTURE_LUMINANCE_SIZE #x8060)
(define-constant GL_TEXTURE_INTENSITY_SIZE #x8061)
(define-constant GL_NEAREST_MIPMAP_NEAREST #x2700)
(define-constant GL_NEAREST_MIPMAP_LINEAR #x2702)
(define-constant GL_LINEAR_MIPMAP_NEAREST #x2701)
(define-constant GL_LINEAR_MIPMAP_LINEAR #x2703)
(define-constant GL_OBJECT_LINEAR #x2401)
(define-constant GL_OBJECT_PLANE #x2501)
(define-constant GL_EYE_LINEAR #x2400)
(define-constant GL_EYE_PLANE #x2502)
(define-constant GL_SPHERE_MAP #x2402)
(define-constant GL_DECAL #x2101)
(define-constant GL_MODULATE #x2100)
(define-constant GL_NEAREST #x2600)
(define-constant GL_REPEAT #x2901)
(define-constant GL_CLAMP #x2900)
(define-constant GL_S #x2000)
(define-constant GL_T #x2001)
(define-constant GL_R #x2002)
(define-constant GL_Q #x2003)
(define-constant GL_TEXTURE_GEN_R #x0c62)
(define-constant GL_TEXTURE_GEN_Q #x0c63)
(define-constant GL_VENDOR #x1f00)
(define-constant GL_RENDERER #x1f01)
(define-constant GL_VERSION #x1f02)
(define-constant GL_EXTENSIONS #x1f03)
(define-constant GL_NO_ERROR #x0000)
(define-constant GL_INVALID_VALUE #x0501)
(define-constant GL_INVALID_ENUM #x0500)
(define-constant GL_INVALID_OPERATION #x0502)
(define-constant GL_STACK_OVERFLOW #x0503)
(define-constant GL_STACK_UNDERFLOW #x0504)
(define-constant GL_OUT_OF_MEMORY #x0505)
(define-constant GL_CURRENT_BIT #x0001)
(define-constant GL_POINT_BIT #x0002)
(define-constant GL_LINE_BIT #x0004)
(define-constant GL_POLYGON_BIT #x0008)
(define-constant GL_POLYGON_STIPPLE_BIT #x0010)
(define-constant GL_PIXEL_MODE_BIT #x0020)
(define-constant GL_LIGHTING_BIT #x0040)
(define-constant GL_FOG_BIT #x0080)
(define-constant GL_DEPTH_BUFFER_BIT #x0100)
(define-constant GL_ACCUM_BUFFER_BIT #x0200)
(define-constant GL_STENCIL_BUFFER_BIT #x0400)
(define-constant GL_VIEWPORT_BIT #x0800)
(define-constant GL_TRANSFORM_BIT #x1000)
(define-constant GL_ENABLE_BIT #x2000)
(define-constant GL_COLOR_BUFFER_BIT #x4000)
(define-constant GL_HINT_BIT #x8000)
(define-constant GL_EVAL_BIT #x10000)
(define-constant GL_LIST_BIT #x20000)
(define-constant GL_TEXTURE_BIT #x40000)
(define-constant GL_SCISSOR_BIT #x80000)
(define-constant GL_ALL_ATTRIB_BITS #xfffff)
(define-constant GL_PROXY_TEXTURE_1D #x8063)
(define-constant GL_PROXY_TEXTURE_2D #x8064)
(define-constant GL_TEXTURE_PRIORITY #x8066)
(define-constant GL_TEXTURE_RESIDENT #x8067)
(define-constant GL_TEXTURE_BINDING_1D #x8068)
(define-constant GL_TEXTURE_BINDING_2D #x8069)
(define-constant GL_TEXTURE_INTERNAL_FORMAT #x1003)
(define-constant GL_ALPHA4 #x803b)
(define-constant GL_ALPHA8 #x803c)
(define-constant GL_ALPHA12 #x803d)
(define-constant GL_ALPHA16 #x803e)
(define-constant GL_LUMINANCE4 #x803f)
(define-constant GL_LUMINANCE8 #x8040)
(define-constant GL_LUMINANCE12 #x8041)
(define-constant GL_LUMINANCE16 #x8042)
(define-constant GL_LUMINANCE4_ALPHA4 #x8043)
(define-constant GL_LUMINANCE6_ALPHA2 #x8044)
(define-constant GL_LUMINANCE8_ALPHA8 #x8045)
(define-constant GL_LUMINANCE12_ALPHA4 #x8046)
(define-constant GL_LUMINANCE12_ALPHA12 #x8047)
(define-constant GL_LUMINANCE16_ALPHA16 #x8048)
(define-constant GL_INTENSITY #x8049)
(define-constant GL_INTENSITY4 #x804a)
(define-constant GL_INTENSITY8 #x804b)
(define-constant GL_INTENSITY12 #x804c)
(define-constant GL_INTENSITY16 #x804d)
(define-constant GL_R3_G3_B2 #x2a10)
(define-constant GL_RGB4 #x804f)
(define-constant GL_RGB5 #x8050)
(define-constant GL_RGB8 #x8051)
(define-constant GL_RGB10 #x8052)
(define-constant GL_RGB12 #x8053)
(define-constant GL_RGB16 #x8054)
(define-constant GL_RGBA2 #x8055)
(define-constant GL_RGBA4 #x8056)
(define-constant GL_RGB5_A1 #x8057)
(define-constant GL_RGBA8 #x8058)
(define-constant GL_RGB10_A2 #x8059)
(define-constant GL_RGBA12 #x805a)
(define-constant GL_RGBA16 #x805b)
(define-constant GL_CLIENT_PIXEL_STORE_BIT #x0001)
(define-constant GL_CLIENT_VERTEX_ARRAY_BIT #x0002)
(define-constant GL_ALL_CLIENT_ATTRIB_BITS #xffffffff)
(define-constant GL_CLIENT_ALL_ATTRIB_BITS #xffffffff)
(define-constant GL_GLEXT_VERSION #x133543e)
(define-constant GL_UNSIGNED_BYTE_3_3_2 #x8032)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4 #x8033)
(define-constant GL_UNSIGNED_SHORT_5_5_5_1 #x8034)
(define-constant GL_UNSIGNED_INT_8_8_8_8 #x8035)
(define-constant GL_UNSIGNED_INT_10_10_10_2 #x8036)
(define-constant GL_TEXTURE_BINDING_3D #x806a)
(define-constant GL_PACK_SKIP_IMAGES #x806b)
(define-constant GL_PACK_IMAGE_HEIGHT #x806c)
(define-constant GL_UNPACK_SKIP_IMAGES #x806d)
(define-constant GL_UNPACK_IMAGE_HEIGHT #x806e)
(define-constant GL_TEXTURE_3D #x806f)
(define-constant GL_PROXY_TEXTURE_3D #x8070)
(define-constant GL_TEXTURE_DEPTH #x8071)
(define-constant GL_TEXTURE_WRAP_R #x8072)
(define-constant GL_MAX_3D_TEXTURE_SIZE #x8073)
(define-constant GL_UNSIGNED_BYTE_2_3_3_REV #x8362)
(define-constant GL_UNSIGNED_SHORT_5_6_5 #x8363)
(define-constant GL_UNSIGNED_SHORT_5_6_5_REV #x8364)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4_REV #x8365)
(define-constant GL_UNSIGNED_SHORT_1_5_5_5_REV #x8366)
(define-constant GL_UNSIGNED_INT_8_8_8_8_REV #x8367)
(define-constant GL_UNSIGNED_INT_2_10_10_10_REV #x8368)
(define-constant GL_BGR #x80e0)
(define-constant GL_BGRA #x80e1)
(define-constant GL_MAX_ELEMENTS_VERTICES #x80e8)
(define-constant GL_MAX_ELEMENTS_INDICES #x80e9)
(define-constant GL_CLAMP_TO_EDGE #x812f)
(define-constant GL_TEXTURE_MIN_LOD #x813a)
(define-constant GL_TEXTURE_MAX_LOD #x813b)
(define-constant GL_TEXTURE_BASE_LEVEL #x813c)
(define-constant GL_TEXTURE_MAX_LEVEL #x813d)
(define-constant GL_SMOOTH_POINT_SIZE_RANGE #x0b12)
(define-constant GL_SMOOTH_POINT_SIZE_GRANULARITY #x0b13)
(define-constant GL_SMOOTH_LINE_WIDTH_RANGE #x0b22)
(define-constant GL_SMOOTH_LINE_WIDTH_GRANULARITY #x0b23)
(define-constant GL_ALIASED_LINE_WIDTH_RANGE #x846e)
(define-constant GL_RESCALE_NORMAL #x803a)
(define-constant GL_LIGHT_MODEL_COLOR_CONTROL #x81f8)
(define-constant GL_SINGLE_COLOR #x81f9)
(define-constant GL_SEPARATE_SPECULAR_COLOR #x81fa)
(define-constant GL_ALIASED_POINT_SIZE_RANGE #x846d)
(define-constant GL_TEXTURE0 #x84c0)
(define-constant GL_TEXTURE1 #x84c1)
(define-constant GL_TEXTURE2 #x84c2)
(define-constant GL_TEXTURE3 #x84c3)
(define-constant GL_TEXTURE4 #x84c4)
(define-constant GL_TEXTURE5 #x84c5)
(define-constant GL_TEXTURE6 #x84c6)
(define-constant GL_TEXTURE7 #x84c7)
(define-constant GL_TEXTURE8 #x84c8)
(define-constant GL_TEXTURE9 #x84c9)
(define-constant GL_TEXTURE10 #x84ca)
(define-constant GL_TEXTURE11 #x84cb)
(define-constant GL_TEXTURE12 #x84cc)
(define-constant GL_TEXTURE13 #x84cd)
(define-constant GL_TEXTURE14 #x84ce)
(define-constant GL_TEXTURE15 #x84cf)
(define-constant GL_TEXTURE16 #x84d0)
(define-constant GL_TEXTURE17 #x84d1)
(define-constant GL_TEXTURE18 #x84d2)
(define-constant GL_TEXTURE19 #x84d3)
(define-constant GL_TEXTURE20 #x84d4)
(define-constant GL_TEXTURE21 #x84d5)
(define-constant GL_TEXTURE22 #x84d6)
(define-constant GL_TEXTURE23 #x84d7)
(define-constant GL_TEXTURE24 #x84d8)
(define-constant GL_TEXTURE25 #x84d9)
(define-constant GL_TEXTURE26 #x84da)
(define-constant GL_TEXTURE27 #x84db)
(define-constant GL_TEXTURE28 #x84dc)
(define-constant GL_TEXTURE29 #x84dd)
(define-constant GL_TEXTURE30 #x84de)
(define-constant GL_TEXTURE31 #x84df)
(define-constant GL_ACTIVE_TEXTURE #x84e0)
(define-constant GL_MULTISAMPLE #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_COVERAGE #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE #x809f)
(define-constant GL_SAMPLE_COVERAGE #x80a0)
(define-constant GL_SAMPLE_BUFFERS #x80a8)
(define-constant GL_SAMPLES #x80a9)
(define-constant GL_SAMPLE_COVERAGE_VALUE #x80aa)
(define-constant GL_SAMPLE_COVERAGE_INVERT #x80ab)
(define-constant GL_TEXTURE_CUBE_MAP #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE #x851c)
(define-constant GL_COMPRESSED_RGB #x84ed)
(define-constant GL_COMPRESSED_RGBA #x84ee)
(define-constant GL_TEXTURE_COMPRESSION_HINT #x84ef)
(define-constant GL_TEXTURE_COMPRESSED_IMAGE_SIZE #x86a0)
(define-constant GL_TEXTURE_COMPRESSED #x86a1)
(define-constant GL_NUM_COMPRESSED_TEXTURE_FORMATS #x86a2)
(define-constant GL_COMPRESSED_TEXTURE_FORMATS #x86a3)
(define-constant GL_CLAMP_TO_BORDER #x812d)
(define-constant GL_CLIENT_ACTIVE_TEXTURE #x84e1)
(define-constant GL_MAX_TEXTURE_UNITS #x84e2)
(define-constant GL_TRANSPOSE_MODELVIEW_MATRIX #x84e3)
(define-constant GL_TRANSPOSE_PROJECTION_MATRIX #x84e4)
(define-constant GL_TRANSPOSE_TEXTURE_MATRIX #x84e5)
(define-constant GL_TRANSPOSE_COLOR_MATRIX #x84e6)
(define-constant GL_MULTISAMPLE_BIT #x20000000)
(define-constant GL_NORMAL_MAP #x8511)
(define-constant GL_REFLECTION_MAP #x8512)
(define-constant GL_COMPRESSED_ALPHA #x84e9)
(define-constant GL_COMPRESSED_LUMINANCE #x84ea)
(define-constant GL_COMPRESSED_LUMINANCE_ALPHA #x84eb)
(define-constant GL_COMPRESSED_INTENSITY #x84ec)
(define-constant GL_COMBINE #x8570)
(define-constant GL_COMBINE_RGB #x8571)
(define-constant GL_COMBINE_ALPHA #x8572)
(define-constant GL_SOURCE0_RGB #x8580)
(define-constant GL_SOURCE1_RGB #x8581)
(define-constant GL_SOURCE2_RGB #x8582)
(define-constant GL_SOURCE0_ALPHA #x8588)
(define-constant GL_SOURCE1_ALPHA #x8589)
(define-constant GL_SOURCE2_ALPHA #x858a)
(define-constant GL_OPERAND0_RGB #x8590)
(define-constant GL_OPERAND1_RGB #x8591)
(define-constant GL_OPERAND2_RGB #x8592)
(define-constant GL_OPERAND0_ALPHA #x8598)
(define-constant GL_OPERAND1_ALPHA #x8599)
(define-constant GL_OPERAND2_ALPHA #x859a)
(define-constant GL_RGB_SCALE #x8573)
(define-constant GL_ADD_SIGNED #x8574)
(define-constant GL_INTERPOLATE #x8575)
(define-constant GL_SUBTRACT #x84e7)
(define-constant GL_CONSTANT #x8576)
(define-constant GL_PRIMARY_COLOR #x8577)
(define-constant GL_PREVIOUS #x8578)
(define-constant GL_DOT3_RGB #x86ae)
(define-constant GL_DOT3_RGBA #x86af)
(define-constant GL_BLEND_DST_RGB #x80c8)
(define-constant GL_BLEND_SRC_RGB #x80c9)
(define-constant GL_BLEND_DST_ALPHA #x80ca)
(define-constant GL_BLEND_SRC_ALPHA #x80cb)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE #x8128)
(define-constant GL_DEPTH_COMPONENT16 #x81a5)
(define-constant GL_DEPTH_COMPONENT24 #x81a6)
(define-constant GL_DEPTH_COMPONENT32 #x81a7)
(define-constant GL_MIRRORED_REPEAT #x8370)
(define-constant GL_MAX_TEXTURE_LOD_BIAS #x84fd)
(define-constant GL_TEXTURE_LOD_BIAS #x8501)
(define-constant GL_INCR_WRAP #x8507)
(define-constant GL_DECR_WRAP #x8508)
(define-constant GL_TEXTURE_DEPTH_SIZE #x884a)
(define-constant GL_TEXTURE_COMPARE_MODE #x884c)
(define-constant GL_TEXTURE_COMPARE_FUNC #x884d)
(define-constant GL_POINT_SIZE_MIN #x8126)
(define-constant GL_POINT_SIZE_MAX #x8127)
(define-constant GL_POINT_DISTANCE_ATTENUATION #x8129)
(define-constant GL_GENERATE_MIPMAP #x8191)
(define-constant GL_GENERATE_MIPMAP_HINT #x8192)
(define-constant GL_FOG_COORDINATE_SOURCE #x8450)
(define-constant GL_FOG_COORDINATE #x8451)
(define-constant GL_FRAGMENT_DEPTH #x8452)
(define-constant GL_CURRENT_FOG_COORDINATE #x8453)
(define-constant GL_FOG_COORDINATE_ARRAY_TYPE #x8454)
(define-constant GL_FOG_COORDINATE_ARRAY_STRIDE #x8455)
(define-constant GL_FOG_COORDINATE_ARRAY_POINTER #x8456)
(define-constant GL_FOG_COORDINATE_ARRAY #x8457)
(define-constant GL_COLOR_SUM #x8458)
(define-constant GL_CURRENT_SECONDARY_COLOR #x8459)
(define-constant GL_SECONDARY_COLOR_ARRAY_SIZE #x845a)
(define-constant GL_SECONDARY_COLOR_ARRAY_TYPE #x845b)
(define-constant GL_SECONDARY_COLOR_ARRAY_STRIDE #x845c)
(define-constant GL_SECONDARY_COLOR_ARRAY_POINTER #x845d)
(define-constant GL_SECONDARY_COLOR_ARRAY #x845e)
(define-constant GL_TEXTURE_FILTER_CONTROL #x8500)
(define-constant GL_DEPTH_TEXTURE_MODE #x884b)
(define-constant GL_COMPARE_R_TO_TEXTURE #x884e)
(define-constant GL_FUNC_ADD #x8006)
(define-constant GL_FUNC_SUBTRACT #x800a)
(define-constant GL_FUNC_REVERSE_SUBTRACT #x800b)
(define-constant GL_MIN #x8007)
(define-constant GL_MAX #x8008)
(define-constant GL_BUFFER_SIZE #x8764)
(define-constant GL_BUFFER_USAGE #x8765)
(define-constant GL_QUERY_COUNTER_BITS #x8864)
(define-constant GL_CURRENT_QUERY #x8865)
(define-constant GL_QUERY_RESULT #x8866)
(define-constant GL_QUERY_RESULT_AVAILABLE #x8867)
(define-constant GL_ARRAY_BUFFER #x8892)
(define-constant GL_ELEMENT_ARRAY_BUFFER #x8893)
(define-constant GL_ARRAY_BUFFER_BINDING #x8894)
(define-constant GL_ELEMENT_ARRAY_BUFFER_BINDING #x8895)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING #x889f)
(define-constant GL_READ_ONLY #x88b8)
(define-constant GL_WRITE_ONLY #x88b9)
(define-constant GL_READ_WRITE #x88ba)
(define-constant GL_BUFFER_ACCESS #x88bb)
(define-constant GL_BUFFER_MAPPED #x88bc)
(define-constant GL_BUFFER_MAP_POINTER #x88bd)
(define-constant GL_STREAM_DRAW #x88e0)
(define-constant GL_STREAM_READ #x88e1)
(define-constant GL_STREAM_COPY #x88e2)
(define-constant GL_STATIC_DRAW #x88e4)
(define-constant GL_STATIC_READ #x88e5)
(define-constant GL_STATIC_COPY #x88e6)
(define-constant GL_DYNAMIC_DRAW #x88e8)
(define-constant GL_DYNAMIC_READ #x88e9)
(define-constant GL_DYNAMIC_COPY #x88ea)
(define-constant GL_SAMPLES_PASSED #x8914)
(define-constant GL_SRC1_ALPHA #x8589)
(define-constant GL_VERTEX_ARRAY_BUFFER_BINDING #x8896)
(define-constant GL_NORMAL_ARRAY_BUFFER_BINDING #x8897)
(define-constant GL_COLOR_ARRAY_BUFFER_BINDING #x8898)
(define-constant GL_INDEX_ARRAY_BUFFER_BINDING #x8899)
(define-constant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING #x889a)
(define-constant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING #x889b)
(define-constant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING #x889c)
(define-constant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING #x889d)
(define-constant GL_WEIGHT_ARRAY_BUFFER_BINDING #x889e)
(define-constant GL_FOG_COORD_SRC #x8450)
(define-constant GL_FOG_COORD #x8451)
(define-constant GL_CURRENT_FOG_COORD #x8453)
(define-constant GL_FOG_COORD_ARRAY_TYPE #x8454)
(define-constant GL_FOG_COORD_ARRAY_STRIDE #x8455)
(define-constant GL_FOG_COORD_ARRAY_POINTER #x8456)
(define-constant GL_FOG_COORD_ARRAY #x8457)
(define-constant GL_FOG_COORD_ARRAY_BUFFER_BINDING #x889d)
(define-constant GL_SRC0_RGB #x8580)
(define-constant GL_SRC1_RGB #x8581)
(define-constant GL_SRC2_RGB #x8582)
(define-constant GL_SRC0_ALPHA #x8588)
(define-constant GL_SRC2_ALPHA #x858a)
(define-constant GL_BLEND_EQUATION_RGB #x8009)
(define-constant GL_VERTEX_ATTRIB_ARRAY_ENABLED #x8622)
(define-constant GL_VERTEX_ATTRIB_ARRAY_SIZE #x8623)
(define-constant GL_VERTEX_ATTRIB_ARRAY_STRIDE #x8624)
(define-constant GL_VERTEX_ATTRIB_ARRAY_TYPE #x8625)
(define-constant GL_CURRENT_VERTEX_ATTRIB #x8626)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE #x8642)
(define-constant GL_VERTEX_ATTRIB_ARRAY_POINTER #x8645)
(define-constant GL_STENCIL_BACK_FUNC #x8800)
(define-constant GL_STENCIL_BACK_FAIL #x8801)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_FAIL #x8802)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_PASS #x8803)
(define-constant GL_MAX_DRAW_BUFFERS #x8824)
(define-constant GL_DRAW_BUFFER0 #x8825)
(define-constant GL_DRAW_BUFFER1 #x8826)
(define-constant GL_DRAW_BUFFER2 #x8827)
(define-constant GL_DRAW_BUFFER3 #x8828)
(define-constant GL_DRAW_BUFFER4 #x8829)
(define-constant GL_DRAW_BUFFER5 #x882a)
(define-constant GL_DRAW_BUFFER6 #x882b)
(define-constant GL_DRAW_BUFFER7 #x882c)
(define-constant GL_DRAW_BUFFER8 #x882d)
(define-constant GL_DRAW_BUFFER9 #x882e)
(define-constant GL_DRAW_BUFFER10 #x882f)
(define-constant GL_DRAW_BUFFER11 #x8830)
(define-constant GL_DRAW_BUFFER12 #x8831)
(define-constant GL_DRAW_BUFFER13 #x8832)
(define-constant GL_DRAW_BUFFER14 #x8833)
(define-constant GL_DRAW_BUFFER15 #x8834)
(define-constant GL_BLEND_EQUATION_ALPHA #x883d)
(define-constant GL_MAX_VERTEX_ATTRIBS #x8869)
(define-constant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED #x886a)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS #x8872)
(define-constant GL_FRAGMENT_SHADER #x8b30)
(define-constant GL_VERTEX_SHADER #x8b31)
(define-constant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS #x8b49)
(define-constant GL_MAX_VERTEX_UNIFORM_COMPONENTS #x8b4a)
(define-constant GL_MAX_VARYING_FLOATS #x8b4b)
(define-constant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS #x8b4c)
(define-constant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS #x8b4d)
(define-constant GL_SHADER_TYPE #x8b4f)
(define-constant GL_FLOAT_VEC2 #x8b50)
(define-constant GL_FLOAT_VEC3 #x8b51)
(define-constant GL_FLOAT_VEC4 #x8b52)
(define-constant GL_INT_VEC2 #x8b53)
(define-constant GL_INT_VEC3 #x8b54)
(define-constant GL_INT_VEC4 #x8b55)
(define-constant GL_BOOL #x8b56)
(define-constant GL_BOOL_VEC2 #x8b57)
(define-constant GL_BOOL_VEC3 #x8b58)
(define-constant GL_BOOL_VEC4 #x8b59)
(define-constant GL_FLOAT_MAT2 #x8b5a)
(define-constant GL_FLOAT_MAT3 #x8b5b)
(define-constant GL_FLOAT_MAT4 #x8b5c)
(define-constant GL_SAMPLER_1D #x8b5d)
(define-constant GL_SAMPLER_2D #x8b5e)
(define-constant GL_SAMPLER_3D #x8b5f)
(define-constant GL_SAMPLER_CUBE #x8b60)
(define-constant GL_SAMPLER_1D_SHADOW #x8b61)
(define-constant GL_SAMPLER_2D_SHADOW #x8b62)
(define-constant GL_DELETE_STATUS #x8b80)
(define-constant GL_COMPILE_STATUS #x8b81)
(define-constant GL_LINK_STATUS #x8b82)
(define-constant GL_VALIDATE_STATUS #x8b83)
(define-constant GL_INFO_LOG_LENGTH #x8b84)
(define-constant GL_ATTACHED_SHADERS #x8b85)
(define-constant GL_ACTIVE_UNIFORMS #x8b86)
(define-constant GL_ACTIVE_UNIFORM_MAX_LENGTH #x8b87)
(define-constant GL_SHADER_SOURCE_LENGTH #x8b88)
(define-constant GL_ACTIVE_ATTRIBUTES #x8b89)
(define-constant GL_ACTIVE_ATTRIBUTE_MAX_LENGTH #x8b8a)
(define-constant GL_FRAGMENT_SHADER_DERIVATIVE_HINT #x8b8b)
(define-constant GL_SHADING_LANGUAGE_VERSION #x8b8c)
(define-constant GL_CURRENT_PROGRAM #x8b8d)
(define-constant GL_POINT_SPRITE_COORD_ORIGIN #x8ca0)
(define-constant GL_LOWER_LEFT #x8ca1)
(define-constant GL_UPPER_LEFT #x8ca2)
(define-constant GL_STENCIL_BACK_REF #x8ca3)
(define-constant GL_STENCIL_BACK_VALUE_MASK #x8ca4)
(define-constant GL_STENCIL_BACK_WRITEMASK #x8ca5)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE #x8643)
(define-constant GL_POINT_SPRITE #x8861)
(define-constant GL_COORD_REPLACE #x8862)
(define-constant GL_MAX_TEXTURE_COORDS #x8871)
(define-constant GL_PIXEL_PACK_BUFFER #x88eb)
(define-constant GL_PIXEL_UNPACK_BUFFER #x88ec)
(define-constant GL_PIXEL_PACK_BUFFER_BINDING #x88ed)
(define-constant GL_PIXEL_UNPACK_BUFFER_BINDING #x88ef)
(define-constant GL_FLOAT_MAT2x3 #x8b65)
(define-constant GL_FLOAT_MAT2x4 #x8b66)
(define-constant GL_FLOAT_MAT3x2 #x8b67)
(define-constant GL_FLOAT_MAT3x4 #x8b68)
(define-constant GL_FLOAT_MAT4x2 #x8b69)
(define-constant GL_FLOAT_MAT4x3 #x8b6a)
(define-constant GL_SRGB #x8c40)
(define-constant GL_SRGB8 #x8c41)
(define-constant GL_SRGB_ALPHA #x8c42)
(define-constant GL_SRGB8_ALPHA8 #x8c43)
(define-constant GL_COMPRESSED_SRGB #x8c48)
(define-constant GL_COMPRESSED_SRGB_ALPHA #x8c49)
(define-constant GL_CURRENT_RASTER_SECONDARY_COLOR #x845f)
(define-constant GL_SLUMINANCE_ALPHA #x8c44)
(define-constant GL_SLUMINANCE8_ALPHA8 #x8c45)
(define-constant GL_SLUMINANCE #x8c46)
(define-constant GL_SLUMINANCE8 #x8c47)
(define-constant GL_COMPRESSED_SLUMINANCE #x8c4a)
(define-constant GL_COMPRESSED_SLUMINANCE_ALPHA #x8c4b)
(define-constant GL_COMPARE_REF_TO_TEXTURE #x884e)
(define-constant GL_CLIP_DISTANCE0 #x3000)
(define-constant GL_CLIP_DISTANCE1 #x3001)
(define-constant GL_CLIP_DISTANCE2 #x3002)
(define-constant GL_CLIP_DISTANCE3 #x3003)
(define-constant GL_CLIP_DISTANCE4 #x3004)
(define-constant GL_CLIP_DISTANCE5 #x3005)
(define-constant GL_CLIP_DISTANCE6 #x3006)
(define-constant GL_CLIP_DISTANCE7 #x3007)
(define-constant GL_MAX_CLIP_DISTANCES #x0d32)
(define-constant GL_MAJOR_VERSION #x821b)
(define-constant GL_MINOR_VERSION #x821c)
(define-constant GL_NUM_EXTENSIONS #x821d)
(define-constant GL_CONTEXT_FLAGS #x821e)
(define-constant GL_COMPRESSED_RED #x8225)
(define-constant GL_COMPRESSED_RG #x8226)
(define-constant GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT #x0001)
(define-constant GL_RGBA32F #x8814)
(define-constant GL_RGB32F #x8815)
(define-constant GL_RGBA16F #x881a)
(define-constant GL_RGB16F #x881b)
(define-constant GL_VERTEX_ATTRIB_ARRAY_INTEGER #x88fd)
(define-constant GL_MAX_ARRAY_TEXTURE_LAYERS #x88ff)
(define-constant GL_MIN_PROGRAM_TEXEL_OFFSET #x8904)
(define-constant GL_MAX_PROGRAM_TEXEL_OFFSET #x8905)
(define-constant GL_CLAMP_READ_COLOR #x891c)
(define-constant GL_FIXED_ONLY #x891d)
(define-constant GL_MAX_VARYING_COMPONENTS #x8b4b)
(define-constant GL_TEXTURE_1D_ARRAY #x8c18)
(define-constant GL_PROXY_TEXTURE_1D_ARRAY #x8c19)
(define-constant GL_TEXTURE_2D_ARRAY #x8c1a)
(define-constant GL_PROXY_TEXTURE_2D_ARRAY #x8c1b)
(define-constant GL_TEXTURE_BINDING_1D_ARRAY #x8c1c)
(define-constant GL_TEXTURE_BINDING_2D_ARRAY #x8c1d)
(define-constant GL_R11F_G11F_B10F #x8c3a)
(define-constant GL_UNSIGNED_INT_10F_11F_11F_REV #x8c3b)
(define-constant GL_RGB9_E5 #x8c3d)
(define-constant GL_UNSIGNED_INT_5_9_9_9_REV #x8c3e)
(define-constant GL_TEXTURE_SHARED_SIZE #x8c3f)
(define-constant GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH #x8c76)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_MODE #x8c7f)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS #x8c80)
(define-constant GL_TRANSFORM_FEEDBACK_VARYINGS #x8c83)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_START #x8c84)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE #x8c85)
(define-constant GL_PRIMITIVES_GENERATED #x8c87)
(define-constant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN #x8c88)
(define-constant GL_RASTERIZER_DISCARD #x8c89)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS #x8c8a)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS #x8c8b)
(define-constant GL_INTERLEAVED_ATTRIBS #x8c8c)
(define-constant GL_SEPARATE_ATTRIBS #x8c8d)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER #x8c8e)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING #x8c8f)
(define-constant GL_RGBA32UI #x8d70)
(define-constant GL_RGB32UI #x8d71)
(define-constant GL_RGBA16UI #x8d76)
(define-constant GL_RGB16UI #x8d77)
(define-constant GL_RGBA8UI #x8d7c)
(define-constant GL_RGB8UI #x8d7d)
(define-constant GL_RGBA32I #x8d82)
(define-constant GL_RGB32I #x8d83)
(define-constant GL_RGBA16I #x8d88)
(define-constant GL_RGB16I #x8d89)
(define-constant GL_RGBA8I #x8d8e)
(define-constant GL_RGB8I #x8d8f)
(define-constant GL_RED_INTEGER #x8d94)
(define-constant GL_GREEN_INTEGER #x8d95)
(define-constant GL_BLUE_INTEGER #x8d96)
(define-constant GL_RGB_INTEGER #x8d98)
(define-constant GL_RGBA_INTEGER #x8d99)
(define-constant GL_BGR_INTEGER #x8d9a)
(define-constant GL_BGRA_INTEGER #x8d9b)
(define-constant GL_SAMPLER_1D_ARRAY #x8dc0)
(define-constant GL_SAMPLER_2D_ARRAY #x8dc1)
(define-constant GL_SAMPLER_1D_ARRAY_SHADOW #x8dc3)
(define-constant GL_SAMPLER_2D_ARRAY_SHADOW #x8dc4)
(define-constant GL_SAMPLER_CUBE_SHADOW #x8dc5)
(define-constant GL_UNSIGNED_INT_VEC2 #x8dc6)
(define-constant GL_UNSIGNED_INT_VEC3 #x8dc7)
(define-constant GL_UNSIGNED_INT_VEC4 #x8dc8)
(define-constant GL_INT_SAMPLER_1D #x8dc9)
(define-constant GL_INT_SAMPLER_2D #x8dca)
(define-constant GL_INT_SAMPLER_3D #x8dcb)
(define-constant GL_INT_SAMPLER_CUBE #x8dcc)
(define-constant GL_INT_SAMPLER_1D_ARRAY #x8dce)
(define-constant GL_INT_SAMPLER_2D_ARRAY #x8dcf)
(define-constant GL_UNSIGNED_INT_SAMPLER_1D #x8dd1)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D #x8dd2)
(define-constant GL_UNSIGNED_INT_SAMPLER_3D #x8dd3)
(define-constant GL_UNSIGNED_INT_SAMPLER_CUBE #x8dd4)
(define-constant GL_UNSIGNED_INT_SAMPLER_1D_ARRAY #x8dd6)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_ARRAY #x8dd7)
(define-constant GL_QUERY_WAIT #x8e13)
(define-constant GL_QUERY_NO_WAIT #x8e14)
(define-constant GL_QUERY_BY_REGION_WAIT #x8e15)
(define-constant GL_QUERY_BY_REGION_NO_WAIT #x8e16)
(define-constant GL_BUFFER_ACCESS_FLAGS #x911f)
(define-constant GL_BUFFER_MAP_LENGTH #x9120)
(define-constant GL_BUFFER_MAP_OFFSET #x9121)
(define-constant GL_DEPTH_COMPONENT32F #x8cac)
(define-constant GL_DEPTH32F_STENCIL8 #x8cad)
(define-constant GL_FLOAT_32_UNSIGNED_INT_24_8_REV #x8dad)
(define-constant GL_INVALID_FRAMEBUFFER_OPERATION #x0506)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING #x8210)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE #x8211)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE #x8212)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE #x8213)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE #x8214)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE #x8215)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE #x8216)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE #x8217)
(define-constant GL_FRAMEBUFFER_DEFAULT #x8218)
(define-constant GL_FRAMEBUFFER_UNDEFINED #x8219)
(define-constant GL_DEPTH_STENCIL_ATTACHMENT #x821a)
(define-constant GL_MAX_RENDERBUFFER_SIZE #x84e8)
(define-constant GL_DEPTH_STENCIL #x84f9)
(define-constant GL_UNSIGNED_INT_24_8 #x84fa)
(define-constant GL_DEPTH24_STENCIL8 #x88f0)
(define-constant GL_TEXTURE_STENCIL_SIZE #x88f1)
(define-constant GL_TEXTURE_RED_TYPE #x8c10)
(define-constant GL_TEXTURE_GREEN_TYPE #x8c11)
(define-constant GL_TEXTURE_BLUE_TYPE #x8c12)
(define-constant GL_TEXTURE_ALPHA_TYPE #x8c13)
(define-constant GL_TEXTURE_DEPTH_TYPE #x8c16)
(define-constant GL_UNSIGNED_NORMALIZED #x8c17)
(define-constant GL_FRAMEBUFFER_BINDING #x8ca6)
(define-constant GL_DRAW_FRAMEBUFFER_BINDING #x8ca6)
(define-constant GL_RENDERBUFFER_BINDING #x8ca7)
(define-constant GL_READ_FRAMEBUFFER #x8ca8)
(define-constant GL_DRAW_FRAMEBUFFER #x8ca9)
(define-constant GL_READ_FRAMEBUFFER_BINDING #x8caa)
(define-constant GL_RENDERBUFFER_SAMPLES #x8cab)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE #x8cd0)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME #x8cd1)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL #x8cd2)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE #x8cd3)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER #x8cd4)
(define-constant GL_FRAMEBUFFER_COMPLETE #x8cd5)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT #x8cd6)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT #x8cd7)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER #x8cdb)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER #x8cdc)
(define-constant GL_FRAMEBUFFER_UNSUPPORTED #x8cdd)
(define-constant GL_MAX_COLOR_ATTACHMENTS #x8cdf)
(define-constant GL_COLOR_ATTACHMENT0 #x8ce0)
(define-constant GL_COLOR_ATTACHMENT1 #x8ce1)
(define-constant GL_COLOR_ATTACHMENT2 #x8ce2)
(define-constant GL_COLOR_ATTACHMENT3 #x8ce3)
(define-constant GL_COLOR_ATTACHMENT4 #x8ce4)
(define-constant GL_COLOR_ATTACHMENT5 #x8ce5)
(define-constant GL_COLOR_ATTACHMENT6 #x8ce6)
(define-constant GL_COLOR_ATTACHMENT7 #x8ce7)
(define-constant GL_COLOR_ATTACHMENT8 #x8ce8)
(define-constant GL_COLOR_ATTACHMENT9 #x8ce9)
(define-constant GL_COLOR_ATTACHMENT10 #x8cea)
(define-constant GL_COLOR_ATTACHMENT11 #x8ceb)
(define-constant GL_COLOR_ATTACHMENT12 #x8cec)
(define-constant GL_COLOR_ATTACHMENT13 #x8ced)
(define-constant GL_COLOR_ATTACHMENT14 #x8cee)
(define-constant GL_COLOR_ATTACHMENT15 #x8cef)
(define-constant GL_DEPTH_ATTACHMENT #x8d00)
(define-constant GL_STENCIL_ATTACHMENT #x8d20)
(define-constant GL_FRAMEBUFFER #x8d40)
(define-constant GL_RENDERBUFFER #x8d41)
(define-constant GL_RENDERBUFFER_WIDTH #x8d42)
(define-constant GL_RENDERBUFFER_HEIGHT #x8d43)
(define-constant GL_RENDERBUFFER_INTERNAL_FORMAT #x8d44)
(define-constant GL_STENCIL_INDEX1 #x8d46)
(define-constant GL_STENCIL_INDEX4 #x8d47)
(define-constant GL_STENCIL_INDEX8 #x8d48)
(define-constant GL_STENCIL_INDEX16 #x8d49)
(define-constant GL_RENDERBUFFER_RED_SIZE #x8d50)
(define-constant GL_RENDERBUFFER_GREEN_SIZE #x8d51)
(define-constant GL_RENDERBUFFER_BLUE_SIZE #x8d52)
(define-constant GL_RENDERBUFFER_ALPHA_SIZE #x8d53)
(define-constant GL_RENDERBUFFER_DEPTH_SIZE #x8d54)
(define-constant GL_RENDERBUFFER_STENCIL_SIZE #x8d55)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE #x8d56)
(define-constant GL_MAX_SAMPLES #x8d57)
(define-constant GL_INDEX #x8222)
(define-constant GL_TEXTURE_LUMINANCE_TYPE #x8c14)
(define-constant GL_TEXTURE_INTENSITY_TYPE #x8c15)
(define-constant GL_FRAMEBUFFER_SRGB #x8db9)
(define-constant GL_HALF_FLOAT #x140b)
(define-constant GL_MAP_READ_BIT #x0001)
(define-constant GL_MAP_WRITE_BIT #x0002)
(define-constant GL_MAP_INVALIDATE_RANGE_BIT #x0004)
(define-constant GL_MAP_INVALIDATE_BUFFER_BIT #x0008)
(define-constant GL_MAP_FLUSH_EXPLICIT_BIT #x0010)
(define-constant GL_MAP_UNSYNCHRONIZED_BIT #x0020)
(define-constant GL_COMPRESSED_RED_RGTC1 #x8dbb)
(define-constant GL_COMPRESSED_SIGNED_RED_RGTC1 #x8dbc)
(define-constant GL_COMPRESSED_RG_RGTC2 #x8dbd)
(define-constant GL_COMPRESSED_SIGNED_RG_RGTC2 #x8dbe)
(define-constant GL_RG #x8227)
(define-constant GL_RG_INTEGER #x8228)
(define-constant GL_R8 #x8229)
(define-constant GL_R16 #x822a)
(define-constant GL_RG8 #x822b)
(define-constant GL_RG16 #x822c)
(define-constant GL_R16F #x822d)
(define-constant GL_R32F #x822e)
(define-constant GL_RG16F #x822f)
(define-constant GL_RG32F #x8230)
(define-constant GL_R8I #x8231)
(define-constant GL_R8UI #x8232)
(define-constant GL_R16I #x8233)
(define-constant GL_R16UI #x8234)
(define-constant GL_R32I #x8235)
(define-constant GL_R32UI #x8236)
(define-constant GL_RG8I #x8237)
(define-constant GL_RG8UI #x8238)
(define-constant GL_RG16I #x8239)
(define-constant GL_RG16UI #x823a)
(define-constant GL_RG32I #x823b)
(define-constant GL_RG32UI #x823c)
(define-constant GL_VERTEX_ARRAY_BINDING #x85b5)
(define-constant GL_CLAMP_VERTEX_COLOR #x891a)
(define-constant GL_CLAMP_FRAGMENT_COLOR #x891b)
(define-constant GL_ALPHA_INTEGER #x8d97)
(define-constant GL_SAMPLER_2D_RECT #x8b63)
(define-constant GL_SAMPLER_2D_RECT_SHADOW #x8b64)
(define-constant GL_SAMPLER_BUFFER #x8dc2)
(define-constant GL_INT_SAMPLER_2D_RECT #x8dcd)
(define-constant GL_INT_SAMPLER_BUFFER #x8dd0)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_RECT #x8dd5)
(define-constant GL_UNSIGNED_INT_SAMPLER_BUFFER #x8dd8)
(define-constant GL_TEXTURE_BUFFER #x8c2a)
(define-constant GL_MAX_TEXTURE_BUFFER_SIZE #x8c2b)
(define-constant GL_TEXTURE_BINDING_BUFFER #x8c2c)
(define-constant GL_TEXTURE_BUFFER_DATA_STORE_BINDING #x8c2d)
(define-constant GL_TEXTURE_RECTANGLE #x84f5)
(define-constant GL_TEXTURE_BINDING_RECTANGLE #x84f6)
(define-constant GL_PROXY_TEXTURE_RECTANGLE #x84f7)
(define-constant GL_MAX_RECTANGLE_TEXTURE_SIZE #x84f8)
(define-constant GL_R8_SNORM #x8f94)
(define-constant GL_RG8_SNORM #x8f95)
(define-constant GL_RGB8_SNORM #x8f96)
(define-constant GL_RGBA8_SNORM #x8f97)
(define-constant GL_R16_SNORM #x8f98)
(define-constant GL_RG16_SNORM #x8f99)
(define-constant GL_RGB16_SNORM #x8f9a)
(define-constant GL_RGBA16_SNORM #x8f9b)
(define-constant GL_SIGNED_NORMALIZED #x8f9c)
(define-constant GL_PRIMITIVE_RESTART #x8f9d)
(define-constant GL_PRIMITIVE_RESTART_INDEX #x8f9e)
(define-constant GL_COPY_READ_BUFFER #x8f36)
(define-constant GL_COPY_WRITE_BUFFER #x8f37)
(define-constant GL_UNIFORM_BUFFER #x8a11)
(define-constant GL_UNIFORM_BUFFER_BINDING #x8a28)
(define-constant GL_UNIFORM_BUFFER_START #x8a29)
(define-constant GL_UNIFORM_BUFFER_SIZE #x8a2a)
(define-constant GL_MAX_VERTEX_UNIFORM_BLOCKS #x8a2b)
(define-constant GL_MAX_GEOMETRY_UNIFORM_BLOCKS #x8a2c)
(define-constant GL_MAX_FRAGMENT_UNIFORM_BLOCKS #x8a2d)
(define-constant GL_MAX_COMBINED_UNIFORM_BLOCKS #x8a2e)
(define-constant GL_MAX_UNIFORM_BUFFER_BINDINGS #x8a2f)
(define-constant GL_MAX_UNIFORM_BLOCK_SIZE #x8a30)
(define-constant GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS #x8a31)
(define-constant GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS #x8a32)
(define-constant GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS #x8a33)
(define-constant GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT #x8a34)
(define-constant GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH #x8a35)
(define-constant GL_ACTIVE_UNIFORM_BLOCKS #x8a36)
(define-constant GL_UNIFORM_TYPE #x8a37)
(define-constant GL_UNIFORM_SIZE #x8a38)
(define-constant GL_UNIFORM_NAME_LENGTH #x8a39)
(define-constant GL_UNIFORM_BLOCK_INDEX #x8a3a)
(define-constant GL_UNIFORM_OFFSET #x8a3b)
(define-constant GL_UNIFORM_ARRAY_STRIDE #x8a3c)
(define-constant GL_UNIFORM_MATRIX_STRIDE #x8a3d)
(define-constant GL_UNIFORM_IS_ROW_MAJOR #x8a3e)
(define-constant GL_UNIFORM_BLOCK_BINDING #x8a3f)
(define-constant GL_UNIFORM_BLOCK_DATA_SIZE #x8a40)
(define-constant GL_UNIFORM_BLOCK_NAME_LENGTH #x8a41)
(define-constant GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS #x8a42)
(define-constant GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES #x8a43)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER #x8a44)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER #x8a45)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER #x8a46)
(define-constant GL_INVALID_INDEX #xffffffff)
(define-constant GL_CONTEXT_CORE_PROFILE_BIT #x0001)
(define-constant GL_CONTEXT_COMPATIBILITY_PROFILE_BIT #x0002)
(define-constant GL_LINES_ADJACENCY #x000a)
(define-constant GL_LINE_STRIP_ADJACENCY #x000b)
(define-constant GL_TRIANGLES_ADJACENCY #x000c)
(define-constant GL_TRIANGLE_STRIP_ADJACENCY #x000d)
(define-constant GL_PROGRAM_POINT_SIZE #x8642)
(define-constant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS #x8c29)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_LAYERED #x8da7)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS #x8da8)
(define-constant GL_GEOMETRY_SHADER #x8dd9)
(define-constant GL_GEOMETRY_VERTICES_OUT #x8916)
(define-constant GL_GEOMETRY_INPUT_TYPE #x8917)
(define-constant GL_GEOMETRY_OUTPUT_TYPE #x8918)
(define-constant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS #x8ddf)
(define-constant GL_MAX_GEOMETRY_OUTPUT_VERTICES #x8de0)
(define-constant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS #x8de1)
(define-constant GL_MAX_VERTEX_OUTPUT_COMPONENTS #x9122)
(define-constant GL_MAX_GEOMETRY_INPUT_COMPONENTS #x9123)
(define-constant GL_MAX_GEOMETRY_OUTPUT_COMPONENTS #x9124)
(define-constant GL_MAX_FRAGMENT_INPUT_COMPONENTS #x9125)
(define-constant GL_CONTEXT_PROFILE_MASK #x9126)
(define-constant GL_DEPTH_CLAMP #x864f)
(define-constant GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION #x8e4c)
(define-constant GL_FIRST_VERTEX_CONVENTION #x8e4d)
(define-constant GL_LAST_VERTEX_CONVENTION #x8e4e)
(define-constant GL_PROVOKING_VERTEX #x8e4f)
(define-constant GL_TEXTURE_CUBE_MAP_SEAMLESS #x884f)
(define-constant GL_MAX_SERVER_WAIT_TIMEOUT #x9111)
(define-constant GL_OBJECT_TYPE #x9112)
(define-constant GL_SYNC_CONDITION #x9113)
(define-constant GL_SYNC_STATUS #x9114)
(define-constant GL_SYNC_FLAGS #x9115)
(define-constant GL_SYNC_FENCE #x9116)
(define-constant GL_SYNC_GPU_COMMANDS_COMPLETE #x9117)
(define-constant GL_UNSIGNALED #x9118)
(define-constant GL_SIGNALED #x9119)
(define-constant GL_ALREADY_SIGNALED #x911a)
(define-constant GL_TIMEOUT_EXPIRED #x911b)
(define-constant GL_CONDITION_SATISFIED #x911c)
(define-constant GL_WAIT_FAILED #x911d)
(define-constant GL_TIMEOUT_IGNORED #xffffffffffffffff)
(define-constant GL_SYNC_FLUSH_COMMANDS_BIT #x0001)
(define-constant GL_SAMPLE_POSITION #x8e50)
(define-constant GL_SAMPLE_MASK #x8e51)
(define-constant GL_SAMPLE_MASK_VALUE #x8e52)
(define-constant GL_MAX_SAMPLE_MASK_WORDS #x8e59)
(define-constant GL_TEXTURE_2D_MULTISAMPLE #x9100)
(define-constant GL_PROXY_TEXTURE_2D_MULTISAMPLE #x9101)
(define-constant GL_TEXTURE_2D_MULTISAMPLE_ARRAY #x9102)
(define-constant GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY #x9103)
(define-constant GL_TEXTURE_BINDING_2D_MULTISAMPLE #x9104)
(define-constant GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY #x9105)
(define-constant GL_TEXTURE_SAMPLES #x9106)
(define-constant GL_TEXTURE_FIXED_SAMPLE_LOCATIONS #x9107)
(define-constant GL_SAMPLER_2D_MULTISAMPLE #x9108)
(define-constant GL_INT_SAMPLER_2D_MULTISAMPLE #x9109)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE #x910a)
(define-constant GL_SAMPLER_2D_MULTISAMPLE_ARRAY #x910b)
(define-constant GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY #x910c)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY #x910d)
(define-constant GL_MAX_COLOR_TEXTURE_SAMPLES #x910e)
(define-constant GL_MAX_DEPTH_TEXTURE_SAMPLES #x910f)
(define-constant GL_MAX_INTEGER_SAMPLES #x9110)
(define-constant GL_VERTEX_ATTRIB_ARRAY_DIVISOR #x88fe)
(define-constant GL_SRC1_COLOR #x88f9)
(define-constant GL_ONE_MINUS_SRC1_COLOR #x88fa)
(define-constant GL_ONE_MINUS_SRC1_ALPHA #x88fb)
(define-constant GL_MAX_DUAL_SOURCE_DRAW_BUFFERS #x88fc)
(define-constant GL_ANY_SAMPLES_PASSED #x8c2f)
(define-constant GL_SAMPLER_BINDING #x8919)
(define-constant GL_RGB10_A2UI #x906f)
(define-constant GL_TEXTURE_SWIZZLE_R #x8e42)
(define-constant GL_TEXTURE_SWIZZLE_G #x8e43)
(define-constant GL_TEXTURE_SWIZZLE_B #x8e44)
(define-constant GL_TEXTURE_SWIZZLE_A #x8e45)
(define-constant GL_TEXTURE_SWIZZLE_RGBA #x8e46)
(define-constant GL_TIME_ELAPSED #x88bf)
(define-constant GL_TIMESTAMP #x8e28)
(define-constant GL_INT_2_10_10_10_REV #x8d9f)
(define-constant GL_SAMPLE_SHADING #x8c36)
(define-constant GL_MIN_SAMPLE_SHADING_VALUE #x8c37)
(define-constant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET #x8e5e)
(define-constant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET #x8e5f)
(define-constant GL_TEXTURE_CUBE_MAP_ARRAY #x9009)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_ARRAY #x900a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_ARRAY #x900b)
(define-constant GL_SAMPLER_CUBE_MAP_ARRAY #x900c)
(define-constant GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW #x900d)
(define-constant GL_INT_SAMPLER_CUBE_MAP_ARRAY #x900e)
(define-constant GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY #x900f)
(define-constant GL_DRAW_INDIRECT_BUFFER #x8f3f)
(define-constant GL_DRAW_INDIRECT_BUFFER_BINDING #x8f43)
(define-constant GL_GEOMETRY_SHADER_INVOCATIONS #x887f)
(define-constant GL_MAX_GEOMETRY_SHADER_INVOCATIONS #x8e5a)
(define-constant GL_MIN_FRAGMENT_INTERPOLATION_OFFSET #x8e5b)
(define-constant GL_MAX_FRAGMENT_INTERPOLATION_OFFSET #x8e5c)
(define-constant GL_FRAGMENT_INTERPOLATION_OFFSET_BITS #x8e5d)
(define-constant GL_MAX_VERTEX_STREAMS #x8e71)
(define-constant GL_DOUBLE_VEC2 #x8ffc)
(define-constant GL_DOUBLE_VEC3 #x8ffd)
(define-constant GL_DOUBLE_VEC4 #x8ffe)
(define-constant GL_DOUBLE_MAT2 #x8f46)
(define-constant GL_DOUBLE_MAT3 #x8f47)
(define-constant GL_DOUBLE_MAT4 #x8f48)
(define-constant GL_DOUBLE_MAT2x3 #x8f49)
(define-constant GL_DOUBLE_MAT2x4 #x8f4a)
(define-constant GL_DOUBLE_MAT3x2 #x8f4b)
(define-constant GL_DOUBLE_MAT3x4 #x8f4c)
(define-constant GL_DOUBLE_MAT4x2 #x8f4d)
(define-constant GL_DOUBLE_MAT4x3 #x8f4e)
(define-constant GL_ACTIVE_SUBROUTINES #x8de5)
(define-constant GL_ACTIVE_SUBROUTINE_UNIFORMS #x8de6)
(define-constant GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS #x8e47)
(define-constant GL_ACTIVE_SUBROUTINE_MAX_LENGTH #x8e48)
(define-constant GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH #x8e49)
(define-constant GL_MAX_SUBROUTINES #x8de7)
(define-constant GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS #x8de8)
(define-constant GL_NUM_COMPATIBLE_SUBROUTINES #x8e4a)
(define-constant GL_COMPATIBLE_SUBROUTINES #x8e4b)
(define-constant GL_PATCHES #x000e)
(define-constant GL_PATCH_VERTICES #x8e72)
(define-constant GL_PATCH_DEFAULT_INNER_LEVEL #x8e73)
(define-constant GL_PATCH_DEFAULT_OUTER_LEVEL #x8e74)
(define-constant GL_TESS_CONTROL_OUTPUT_VERTICES #x8e75)
(define-constant GL_TESS_GEN_MODE #x8e76)
(define-constant GL_TESS_GEN_SPACING #x8e77)
(define-constant GL_TESS_GEN_VERTEX_ORDER #x8e78)
(define-constant GL_TESS_GEN_POINT_MODE #x8e79)
(define-constant GL_ISOLINES #x8e7a)
(define-constant GL_FRACTIONAL_ODD #x8e7b)
(define-constant GL_FRACTIONAL_EVEN #x8e7c)
(define-constant GL_MAX_PATCH_VERTICES #x8e7d)
(define-constant GL_MAX_TESS_GEN_LEVEL #x8e7e)
(define-constant GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS #x8e7f)
(define-constant GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS #x8e80)
(define-constant GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS #x8e81)
(define-constant GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS #x8e82)
(define-constant GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS #x8e83)
(define-constant GL_MAX_TESS_PATCH_COMPONENTS #x8e84)
(define-constant GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS #x8e85)
(define-constant GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS #x8e86)
(define-constant GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS #x8e89)
(define-constant GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS #x8e8a)
(define-constant GL_MAX_TESS_CONTROL_INPUT_COMPONENTS #x886c)
(define-constant GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS #x886d)
(define-constant GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS #x8e1e)
(define-constant GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS #x8e1f)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER #x84f0)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER #x84f1)
(define-constant GL_TESS_EVALUATION_SHADER #x8e87)
(define-constant GL_TESS_CONTROL_SHADER #x8e88)
(define-constant GL_TRANSFORM_FEEDBACK #x8e22)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED #x8e23)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE #x8e24)
(define-constant GL_TRANSFORM_FEEDBACK_BINDING #x8e25)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_BUFFERS #x8e70)
(define-constant GL_FIXED #x140c)
(define-constant GL_IMPLEMENTATION_COLOR_READ_TYPE #x8b9a)
(define-constant GL_IMPLEMENTATION_COLOR_READ_FORMAT #x8b9b)
(define-constant GL_LOW_FLOAT #x8df0)
(define-constant GL_MEDIUM_FLOAT #x8df1)
(define-constant GL_HIGH_FLOAT #x8df2)
(define-constant GL_LOW_INT #x8df3)
(define-constant GL_MEDIUM_INT #x8df4)
(define-constant GL_HIGH_INT #x8df5)
(define-constant GL_SHADER_COMPILER #x8dfa)
(define-constant GL_SHADER_BINARY_FORMATS #x8df8)
(define-constant GL_NUM_SHADER_BINARY_FORMATS #x8df9)
(define-constant GL_MAX_VERTEX_UNIFORM_VECTORS #x8dfb)
(define-constant GL_MAX_VARYING_VECTORS #x8dfc)
(define-constant GL_MAX_FRAGMENT_UNIFORM_VECTORS #x8dfd)
(define-constant GL_RGB565 #x8d62)
(define-constant GL_PROGRAM_BINARY_RETRIEVABLE_HINT #x8257)
(define-constant GL_PROGRAM_BINARY_LENGTH #x8741)
(define-constant GL_NUM_PROGRAM_BINARY_FORMATS #x87fe)
(define-constant GL_PROGRAM_BINARY_FORMATS #x87ff)
(define-constant GL_VERTEX_SHADER_BIT #x0001)
(define-constant GL_FRAGMENT_SHADER_BIT #x0002)
(define-constant GL_GEOMETRY_SHADER_BIT #x0004)
(define-constant GL_TESS_CONTROL_SHADER_BIT #x0008)
(define-constant GL_TESS_EVALUATION_SHADER_BIT #x0010)
(define-constant GL_ALL_SHADER_BITS #xffffffff)
(define-constant GL_PROGRAM_SEPARABLE #x8258)
(define-constant GL_ACTIVE_PROGRAM #x8259)
(define-constant GL_PROGRAM_PIPELINE_BINDING #x825a)
(define-constant GL_MAX_VIEWPORTS #x825b)
(define-constant GL_VIEWPORT_SUBPIXEL_BITS #x825c)
(define-constant GL_VIEWPORT_BOUNDS_RANGE #x825d)
(define-constant GL_LAYER_PROVOKING_VERTEX #x825e)
(define-constant GL_VIEWPORT_INDEX_PROVOKING_VERTEX #x825f)
(define-constant GL_UNDEFINED_VERTEX #x8260)
(define-constant GL_COPY_READ_BUFFER_BINDING #x8f36)
(define-constant GL_COPY_WRITE_BUFFER_BINDING #x8f37)
(define-constant GL_TRANSFORM_FEEDBACK_ACTIVE #x8e24)
(define-constant GL_TRANSFORM_FEEDBACK_PAUSED #x8e23)
(define-constant GL_UNPACK_COMPRESSED_BLOCK_WIDTH #x9127)
(define-constant GL_UNPACK_COMPRESSED_BLOCK_HEIGHT #x9128)
(define-constant GL_UNPACK_COMPRESSED_BLOCK_DEPTH #x9129)
(define-constant GL_UNPACK_COMPRESSED_BLOCK_SIZE #x912a)
(define-constant GL_PACK_COMPRESSED_BLOCK_WIDTH #x912b)
(define-constant GL_PACK_COMPRESSED_BLOCK_HEIGHT #x912c)
(define-constant GL_PACK_COMPRESSED_BLOCK_DEPTH #x912d)
(define-constant GL_PACK_COMPRESSED_BLOCK_SIZE #x912e)
(define-constant GL_NUM_SAMPLE_COUNTS #x9380)
(define-constant GL_MIN_MAP_BUFFER_ALIGNMENT #x90bc)
(define-constant GL_ATOMIC_COUNTER_BUFFER #x92c0)
(define-constant GL_ATOMIC_COUNTER_BUFFER_BINDING #x92c1)
(define-constant GL_ATOMIC_COUNTER_BUFFER_START #x92c2)
(define-constant GL_ATOMIC_COUNTER_BUFFER_SIZE #x92c3)
(define-constant GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE #x92c4)
(define-constant GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS #x92c5)
(define-constant GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES #x92c6)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER #x92c7)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER #x92c8)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER #x92c9)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER #x92ca)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER #x92cb)
(define-constant GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS #x92cc)
(define-constant GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS #x92cd)
(define-constant GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS #x92ce)
(define-constant GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS #x92cf)
(define-constant GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS #x92d0)
(define-constant GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS #x92d1)
(define-constant GL_MAX_VERTEX_ATOMIC_COUNTERS #x92d2)
(define-constant GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS #x92d3)
(define-constant GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS #x92d4)
(define-constant GL_MAX_GEOMETRY_ATOMIC_COUNTERS #x92d5)
(define-constant GL_MAX_FRAGMENT_ATOMIC_COUNTERS #x92d6)
(define-constant GL_MAX_COMBINED_ATOMIC_COUNTERS #x92d7)
(define-constant GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE #x92d8)
(define-constant GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS #x92dc)
(define-constant GL_ACTIVE_ATOMIC_COUNTER_BUFFERS #x92d9)
(define-constant GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX #x92da)
(define-constant GL_UNSIGNED_INT_ATOMIC_COUNTER #x92db)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT #x0001)
(define-constant GL_ELEMENT_ARRAY_BARRIER_BIT #x0002)
(define-constant GL_UNIFORM_BARRIER_BIT #x0004)
(define-constant GL_TEXTURE_FETCH_BARRIER_BIT #x0008)
(define-constant GL_SHADER_IMAGE_ACCESS_BARRIER_BIT #x0020)
(define-constant GL_COMMAND_BARRIER_BIT #x0040)
(define-constant GL_PIXEL_BUFFER_BARRIER_BIT #x0080)
(define-constant GL_TEXTURE_UPDATE_BARRIER_BIT #x0100)
(define-constant GL_BUFFER_UPDATE_BARRIER_BIT #x0200)
(define-constant GL_FRAMEBUFFER_BARRIER_BIT #x0400)
(define-constant GL_TRANSFORM_FEEDBACK_BARRIER_BIT #x0800)
(define-constant GL_ATOMIC_COUNTER_BARRIER_BIT #x1000)
(define-constant GL_ALL_BARRIER_BITS #xffffffff)
(define-constant GL_MAX_IMAGE_UNITS #x8f38)
(define-constant GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS #x8f39)
(define-constant GL_IMAGE_BINDING_NAME #x8f3a)
(define-constant GL_IMAGE_BINDING_LEVEL #x8f3b)
(define-constant GL_IMAGE_BINDING_LAYERED #x8f3c)
(define-constant GL_IMAGE_BINDING_LAYER #x8f3d)
(define-constant GL_IMAGE_BINDING_ACCESS #x8f3e)
(define-constant GL_IMAGE_1D #x904c)
(define-constant GL_IMAGE_2D #x904d)
(define-constant GL_IMAGE_3D #x904e)
(define-constant GL_IMAGE_2D_RECT #x904f)
(define-constant GL_IMAGE_CUBE #x9050)
(define-constant GL_IMAGE_BUFFER #x9051)
(define-constant GL_IMAGE_1D_ARRAY #x9052)
(define-constant GL_IMAGE_2D_ARRAY #x9053)
(define-constant GL_IMAGE_CUBE_MAP_ARRAY #x9054)
(define-constant GL_IMAGE_2D_MULTISAMPLE #x9055)
(define-constant GL_IMAGE_2D_MULTISAMPLE_ARRAY #x9056)
(define-constant GL_INT_IMAGE_1D #x9057)
(define-constant GL_INT_IMAGE_2D #x9058)
(define-constant GL_INT_IMAGE_3D #x9059)
(define-constant GL_INT_IMAGE_2D_RECT #x905a)
(define-constant GL_INT_IMAGE_CUBE #x905b)
(define-constant GL_INT_IMAGE_BUFFER #x905c)
(define-constant GL_INT_IMAGE_1D_ARRAY #x905d)
(define-constant GL_INT_IMAGE_2D_ARRAY #x905e)
(define-constant GL_INT_IMAGE_CUBE_MAP_ARRAY #x905f)
(define-constant GL_INT_IMAGE_2D_MULTISAMPLE #x9060)
(define-constant GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY #x9061)
(define-constant GL_UNSIGNED_INT_IMAGE_1D #x9062)
(define-constant GL_UNSIGNED_INT_IMAGE_2D #x9063)
(define-constant GL_UNSIGNED_INT_IMAGE_3D #x9064)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_RECT #x9065)
(define-constant GL_UNSIGNED_INT_IMAGE_CUBE #x9066)
(define-constant GL_UNSIGNED_INT_IMAGE_BUFFER #x9067)
(define-constant GL_UNSIGNED_INT_IMAGE_1D_ARRAY #x9068)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_ARRAY #x9069)
(define-constant GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY #x906a)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE #x906b)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY #x906c)
(define-constant GL_MAX_IMAGE_SAMPLES #x906d)
(define-constant GL_IMAGE_BINDING_FORMAT #x906e)
(define-constant GL_IMAGE_FORMAT_COMPATIBILITY_TYPE #x90c7)
(define-constant GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE #x90c8)
(define-constant GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS #x90c9)
(define-constant GL_MAX_VERTEX_IMAGE_UNIFORMS #x90ca)
(define-constant GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS #x90cb)
(define-constant GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS #x90cc)
(define-constant GL_MAX_GEOMETRY_IMAGE_UNIFORMS #x90cd)
(define-constant GL_MAX_FRAGMENT_IMAGE_UNIFORMS #x90ce)
(define-constant GL_MAX_COMBINED_IMAGE_UNIFORMS #x90cf)
(define-constant GL_COMPRESSED_RGBA_BPTC_UNORM #x8e8c)
(define-constant GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM #x8e8d)
(define-constant GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT #x8e8e)
(define-constant GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT #x8e8f)
(define-constant GL_TEXTURE_IMMUTABLE_FORMAT #x912f)
(define-constant GL_NUM_SHADING_LANGUAGE_VERSIONS #x82e9)
(define-constant GL_VERTEX_ATTRIB_ARRAY_LONG #x874e)
(define-constant GL_COMPRESSED_RGB8_ETC2 #x9274)
(define-constant GL_COMPRESSED_SRGB8_ETC2 #x9275)
(define-constant GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 #x9276)
(define-constant GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 #x9277)
(define-constant GL_COMPRESSED_RGBA8_ETC2_EAC #x9278)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC #x9279)
(define-constant GL_COMPRESSED_R11_EAC #x9270)
(define-constant GL_COMPRESSED_SIGNED_R11_EAC #x9271)
(define-constant GL_COMPRESSED_RG11_EAC #x9272)
(define-constant GL_COMPRESSED_SIGNED_RG11_EAC #x9273)
(define-constant GL_PRIMITIVE_RESTART_FIXED_INDEX #x8d69)
(define-constant GL_ANY_SAMPLES_PASSED_CONSERVATIVE #x8d6a)
(define-constant GL_MAX_ELEMENT_INDEX #x8d6b)
(define-constant GL_COMPUTE_SHADER #x91b9)
(define-constant GL_MAX_COMPUTE_UNIFORM_BLOCKS #x91bb)
(define-constant GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS #x91bc)
(define-constant GL_MAX_COMPUTE_IMAGE_UNIFORMS #x91bd)
(define-constant GL_MAX_COMPUTE_SHARED_MEMORY_SIZE #x8262)
(define-constant GL_MAX_COMPUTE_UNIFORM_COMPONENTS #x8263)
(define-constant GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS #x8264)
(define-constant GL_MAX_COMPUTE_ATOMIC_COUNTERS #x8265)
(define-constant GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS #x8266)
(define-constant GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS #x90eb)
(define-constant GL_MAX_COMPUTE_WORK_GROUP_COUNT #x91be)
(define-constant GL_MAX_COMPUTE_WORK_GROUP_SIZE #x91bf)
(define-constant GL_COMPUTE_WORK_GROUP_SIZE #x8267)
(define-constant GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER #x90ec)
(define-constant GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER #x90ed)
(define-constant GL_DISPATCH_INDIRECT_BUFFER #x90ee)
(define-constant GL_DISPATCH_INDIRECT_BUFFER_BINDING #x90ef)
(define-constant GL_COMPUTE_SHADER_BIT #x0020)
(define-constant GL_DEBUG_OUTPUT_SYNCHRONOUS #x8242)
(define-constant GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH #x8243)
(define-constant GL_DEBUG_CALLBACK_FUNCTION #x8244)
(define-constant GL_DEBUG_CALLBACK_USER_PARAM #x8245)
(define-constant GL_DEBUG_SOURCE_API #x8246)
(define-constant GL_DEBUG_SOURCE_WINDOW_SYSTEM #x8247)
(define-constant GL_DEBUG_SOURCE_SHADER_COMPILER #x8248)
(define-constant GL_DEBUG_SOURCE_THIRD_PARTY #x8249)
(define-constant GL_DEBUG_SOURCE_APPLICATION #x824a)
(define-constant GL_DEBUG_SOURCE_OTHER #x824b)
(define-constant GL_DEBUG_TYPE_ERROR #x824c)
(define-constant GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR #x824d)
(define-constant GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR #x824e)
(define-constant GL_DEBUG_TYPE_PORTABILITY #x824f)
(define-constant GL_DEBUG_TYPE_PERFORMANCE #x8250)
(define-constant GL_DEBUG_TYPE_OTHER #x8251)
(define-constant GL_MAX_DEBUG_MESSAGE_LENGTH #x9143)
(define-constant GL_MAX_DEBUG_LOGGED_MESSAGES #x9144)
(define-constant GL_DEBUG_LOGGED_MESSAGES #x9145)
(define-constant GL_DEBUG_SEVERITY_HIGH #x9146)
(define-constant GL_DEBUG_SEVERITY_MEDIUM #x9147)
(define-constant GL_DEBUG_SEVERITY_LOW #x9148)
(define-constant GL_DEBUG_TYPE_MARKER #x8268)
(define-constant GL_DEBUG_TYPE_PUSH_GROUP #x8269)
(define-constant GL_DEBUG_TYPE_POP_GROUP #x826a)
(define-constant GL_DEBUG_SEVERITY_NOTIFICATION #x826b)
(define-constant GL_MAX_DEBUG_GROUP_STACK_DEPTH #x826c)
(define-constant GL_DEBUG_GROUP_STACK_DEPTH #x826d)
(define-constant GL_BUFFER #x82e0)
(define-constant GL_SHADER #x82e1)
(define-constant GL_PROGRAM #x82e2)
(define-constant GL_QUERY #x82e3)
(define-constant GL_PROGRAM_PIPELINE #x82e4)
(define-constant GL_SAMPLER #x82e6)
(define-constant GL_MAX_LABEL_LENGTH #x82e8)
(define-constant GL_DEBUG_OUTPUT #x92e0)
(define-constant GL_CONTEXT_FLAG_DEBUG_BIT #x0002)
(define-constant GL_MAX_UNIFORM_LOCATIONS #x826e)
(define-constant GL_FRAMEBUFFER_DEFAULT_WIDTH #x9310)
(define-constant GL_FRAMEBUFFER_DEFAULT_HEIGHT #x9311)
(define-constant GL_FRAMEBUFFER_DEFAULT_LAYERS #x9312)
(define-constant GL_FRAMEBUFFER_DEFAULT_SAMPLES #x9313)
(define-constant GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS #x9314)
(define-constant GL_MAX_FRAMEBUFFER_WIDTH #x9315)
(define-constant GL_MAX_FRAMEBUFFER_HEIGHT #x9316)
(define-constant GL_MAX_FRAMEBUFFER_LAYERS #x9317)
(define-constant GL_MAX_FRAMEBUFFER_SAMPLES #x9318)
(define-constant GL_INTERNALFORMAT_SUPPORTED #x826f)
(define-constant GL_INTERNALFORMAT_PREFERRED #x8270)
(define-constant GL_INTERNALFORMAT_RED_SIZE #x8271)
(define-constant GL_INTERNALFORMAT_GREEN_SIZE #x8272)
(define-constant GL_INTERNALFORMAT_BLUE_SIZE #x8273)
(define-constant GL_INTERNALFORMAT_ALPHA_SIZE #x8274)
(define-constant GL_INTERNALFORMAT_DEPTH_SIZE #x8275)
(define-constant GL_INTERNALFORMAT_STENCIL_SIZE #x8276)
(define-constant GL_INTERNALFORMAT_SHARED_SIZE #x8277)
(define-constant GL_INTERNALFORMAT_RED_TYPE #x8278)
(define-constant GL_INTERNALFORMAT_GREEN_TYPE #x8279)
(define-constant GL_INTERNALFORMAT_BLUE_TYPE #x827a)
(define-constant GL_INTERNALFORMAT_ALPHA_TYPE #x827b)
(define-constant GL_INTERNALFORMAT_DEPTH_TYPE #x827c)
(define-constant GL_INTERNALFORMAT_STENCIL_TYPE #x827d)
(define-constant GL_MAX_WIDTH #x827e)
(define-constant GL_MAX_HEIGHT #x827f)
(define-constant GL_MAX_DEPTH #x8280)
(define-constant GL_MAX_LAYERS #x8281)
(define-constant GL_MAX_COMBINED_DIMENSIONS #x8282)
(define-constant GL_COLOR_COMPONENTS #x8283)
(define-constant GL_DEPTH_COMPONENTS #x8284)
(define-constant GL_STENCIL_COMPONENTS #x8285)
(define-constant GL_COLOR_RENDERABLE #x8286)
(define-constant GL_DEPTH_RENDERABLE #x8287)
(define-constant GL_STENCIL_RENDERABLE #x8288)
(define-constant GL_FRAMEBUFFER_RENDERABLE #x8289)
(define-constant GL_FRAMEBUFFER_RENDERABLE_LAYERED #x828a)
(define-constant GL_FRAMEBUFFER_BLEND #x828b)
(define-constant GL_READ_PIXELS #x828c)
(define-constant GL_READ_PIXELS_FORMAT #x828d)
(define-constant GL_READ_PIXELS_TYPE #x828e)
(define-constant GL_TEXTURE_IMAGE_FORMAT #x828f)
(define-constant GL_TEXTURE_IMAGE_TYPE #x8290)
(define-constant GL_GET_TEXTURE_IMAGE_FORMAT #x8291)
(define-constant GL_GET_TEXTURE_IMAGE_TYPE #x8292)
(define-constant GL_MIPMAP #x8293)
(define-constant GL_MANUAL_GENERATE_MIPMAP #x8294)
(define-constant GL_AUTO_GENERATE_MIPMAP #x8295)
(define-constant GL_COLOR_ENCODING #x8296)
(define-constant GL_SRGB_READ #x8297)
(define-constant GL_SRGB_WRITE #x8298)
(define-constant GL_FILTER #x829a)
(define-constant GL_VERTEX_TEXTURE #x829b)
(define-constant GL_TESS_CONTROL_TEXTURE #x829c)
(define-constant GL_TESS_EVALUATION_TEXTURE #x829d)
(define-constant GL_GEOMETRY_TEXTURE #x829e)
(define-constant GL_FRAGMENT_TEXTURE #x829f)
(define-constant GL_COMPUTE_TEXTURE #x82a0)
(define-constant GL_TEXTURE_SHADOW #x82a1)
(define-constant GL_TEXTURE_GATHER #x82a2)
(define-constant GL_TEXTURE_GATHER_SHADOW #x82a3)
(define-constant GL_SHADER_IMAGE_LOAD #x82a4)
(define-constant GL_SHADER_IMAGE_STORE #x82a5)
(define-constant GL_SHADER_IMAGE_ATOMIC #x82a6)
(define-constant GL_IMAGE_TEXEL_SIZE #x82a7)
(define-constant GL_IMAGE_COMPATIBILITY_CLASS #x82a8)
(define-constant GL_IMAGE_PIXEL_FORMAT #x82a9)
(define-constant GL_IMAGE_PIXEL_TYPE #x82aa)
(define-constant GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST #x82ac)
(define-constant GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST #x82ad)
(define-constant GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE #x82ae)
(define-constant GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE #x82af)
(define-constant GL_TEXTURE_COMPRESSED_BLOCK_WIDTH #x82b1)
(define-constant GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT #x82b2)
(define-constant GL_TEXTURE_COMPRESSED_BLOCK_SIZE #x82b3)
(define-constant GL_CLEAR_BUFFER #x82b4)
(define-constant GL_TEXTURE_VIEW #x82b5)
(define-constant GL_VIEW_COMPATIBILITY_CLASS #x82b6)
(define-constant GL_FULL_SUPPORT #x82b7)
(define-constant GL_CAVEAT_SUPPORT #x82b8)
(define-constant GL_IMAGE_CLASS_4_X_32 #x82b9)
(define-constant GL_IMAGE_CLASS_2_X_32 #x82ba)
(define-constant GL_IMAGE_CLASS_1_X_32 #x82bb)
(define-constant GL_IMAGE_CLASS_4_X_16 #x82bc)
(define-constant GL_IMAGE_CLASS_2_X_16 #x82bd)
(define-constant GL_IMAGE_CLASS_1_X_16 #x82be)
(define-constant GL_IMAGE_CLASS_4_X_8 #x82bf)
(define-constant GL_IMAGE_CLASS_2_X_8 #x82c0)
(define-constant GL_IMAGE_CLASS_1_X_8 #x82c1)
(define-constant GL_IMAGE_CLASS_11_11_10 #x82c2)
(define-constant GL_IMAGE_CLASS_10_10_10_2 #x82c3)
(define-constant GL_VIEW_CLASS_128_BITS #x82c4)
(define-constant GL_VIEW_CLASS_96_BITS #x82c5)
(define-constant GL_VIEW_CLASS_64_BITS #x82c6)
(define-constant GL_VIEW_CLASS_48_BITS #x82c7)
(define-constant GL_VIEW_CLASS_32_BITS #x82c8)
(define-constant GL_VIEW_CLASS_24_BITS #x82c9)
(define-constant GL_VIEW_CLASS_16_BITS #x82ca)
(define-constant GL_VIEW_CLASS_8_BITS #x82cb)
(define-constant GL_VIEW_CLASS_S3TC_DXT1_RGB #x82cc)
(define-constant GL_VIEW_CLASS_S3TC_DXT1_RGBA #x82cd)
(define-constant GL_VIEW_CLASS_S3TC_DXT3_RGBA #x82ce)
(define-constant GL_VIEW_CLASS_S3TC_DXT5_RGBA #x82cf)
(define-constant GL_VIEW_CLASS_RGTC1_RED #x82d0)
(define-constant GL_VIEW_CLASS_RGTC2_RG #x82d1)
(define-constant GL_VIEW_CLASS_BPTC_UNORM #x82d2)
(define-constant GL_VIEW_CLASS_BPTC_FLOAT #x82d3)
(define-constant GL_UNIFORM #x92e1)
(define-constant GL_UNIFORM_BLOCK #x92e2)
(define-constant GL_PROGRAM_INPUT #x92e3)
(define-constant GL_PROGRAM_OUTPUT #x92e4)
(define-constant GL_BUFFER_VARIABLE #x92e5)
(define-constant GL_SHADER_STORAGE_BLOCK #x92e6)
(define-constant GL_VERTEX_SUBROUTINE #x92e8)
(define-constant GL_TESS_CONTROL_SUBROUTINE #x92e9)
(define-constant GL_TESS_EVALUATION_SUBROUTINE #x92ea)
(define-constant GL_GEOMETRY_SUBROUTINE #x92eb)
(define-constant GL_FRAGMENT_SUBROUTINE #x92ec)
(define-constant GL_COMPUTE_SUBROUTINE #x92ed)
(define-constant GL_VERTEX_SUBROUTINE_UNIFORM #x92ee)
(define-constant GL_TESS_CONTROL_SUBROUTINE_UNIFORM #x92ef)
(define-constant GL_TESS_EVALUATION_SUBROUTINE_UNIFORM #x92f0)
(define-constant GL_GEOMETRY_SUBROUTINE_UNIFORM #x92f1)
(define-constant GL_FRAGMENT_SUBROUTINE_UNIFORM #x92f2)
(define-constant GL_COMPUTE_SUBROUTINE_UNIFORM #x92f3)
(define-constant GL_TRANSFORM_FEEDBACK_VARYING #x92f4)
(define-constant GL_ACTIVE_RESOURCES #x92f5)
(define-constant GL_MAX_NAME_LENGTH #x92f6)
(define-constant GL_MAX_NUM_ACTIVE_VARIABLES #x92f7)
(define-constant GL_MAX_NUM_COMPATIBLE_SUBROUTINES #x92f8)
(define-constant GL_NAME_LENGTH #x92f9)
(define-constant GL_TYPE #x92fa)
(define-constant GL_ARRAY_SIZE #x92fb)
(define-constant GL_OFFSET #x92fc)
(define-constant GL_BLOCK_INDEX #x92fd)
(define-constant GL_ARRAY_STRIDE #x92fe)
(define-constant GL_MATRIX_STRIDE #x92ff)
(define-constant GL_IS_ROW_MAJOR #x9300)
(define-constant GL_ATOMIC_COUNTER_BUFFER_INDEX #x9301)
(define-constant GL_BUFFER_BINDING #x9302)
(define-constant GL_BUFFER_DATA_SIZE #x9303)
(define-constant GL_NUM_ACTIVE_VARIABLES #x9304)
(define-constant GL_ACTIVE_VARIABLES #x9305)
(define-constant GL_REFERENCED_BY_VERTEX_SHADER #x9306)
(define-constant GL_REFERENCED_BY_TESS_CONTROL_SHADER #x9307)
(define-constant GL_REFERENCED_BY_TESS_EVALUATION_SHADER #x9308)
(define-constant GL_REFERENCED_BY_GEOMETRY_SHADER #x9309)
(define-constant GL_REFERENCED_BY_FRAGMENT_SHADER #x930a)
(define-constant GL_REFERENCED_BY_COMPUTE_SHADER #x930b)
(define-constant GL_TOP_LEVEL_ARRAY_SIZE #x930c)
(define-constant GL_TOP_LEVEL_ARRAY_STRIDE #x930d)
(define-constant GL_LOCATION #x930e)
(define-constant GL_LOCATION_INDEX #x930f)
(define-constant GL_IS_PER_PATCH #x92e7)
(define-constant GL_SHADER_STORAGE_BUFFER #x90d2)
(define-constant GL_SHADER_STORAGE_BUFFER_BINDING #x90d3)
(define-constant GL_SHADER_STORAGE_BUFFER_START #x90d4)
(define-constant GL_SHADER_STORAGE_BUFFER_SIZE #x90d5)
(define-constant GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS #x90d6)
(define-constant GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS #x90d7)
(define-constant GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS #x90d8)
(define-constant GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS #x90d9)
(define-constant GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS #x90da)
(define-constant GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS #x90db)
(define-constant GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS #x90dc)
(define-constant GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS #x90dd)
(define-constant GL_MAX_SHADER_STORAGE_BLOCK_SIZE #x90de)
(define-constant GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT #x90df)
(define-constant GL_SHADER_STORAGE_BARRIER_BIT #x2000)
(define-constant GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES #x8f39)
(define-constant GL_DEPTH_STENCIL_TEXTURE_MODE #x90ea)
(define-constant GL_TEXTURE_BUFFER_OFFSET #x919d)
(define-constant GL_TEXTURE_BUFFER_SIZE #x919e)
(define-constant GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT #x919f)
(define-constant GL_TEXTURE_VIEW_MIN_LEVEL #x82db)
(define-constant GL_TEXTURE_VIEW_NUM_LEVELS #x82dc)
(define-constant GL_TEXTURE_VIEW_MIN_LAYER #x82dd)
(define-constant GL_TEXTURE_VIEW_NUM_LAYERS #x82de)
(define-constant GL_TEXTURE_IMMUTABLE_LEVELS #x82df)
(define-constant GL_VERTEX_ATTRIB_BINDING #x82d4)
(define-constant GL_VERTEX_ATTRIB_RELATIVE_OFFSET #x82d5)
(define-constant GL_VERTEX_BINDING_DIVISOR #x82d6)
(define-constant GL_VERTEX_BINDING_OFFSET #x82d7)
(define-constant GL_VERTEX_BINDING_STRIDE #x82d8)
(define-constant GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET #x82d9)
(define-constant GL_MAX_VERTEX_ATTRIB_BINDINGS #x82da)
(define-constant GL_VERTEX_BINDING_BUFFER #x8f4f)
(define-constant GL_DISPLAY_LIST #x82e7)
(define-constant GL_MAX_VERTEX_ATTRIB_STRIDE #x82e5)
(define-constant GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED #x8221)
(define-constant GL_TEXTURE_BUFFER_BINDING #x8c2a)
(define-constant GL_MAP_PERSISTENT_BIT #x0040)
(define-constant GL_MAP_COHERENT_BIT #x0080)
(define-constant GL_DYNAMIC_STORAGE_BIT #x0100)
(define-constant GL_CLIENT_STORAGE_BIT #x0200)
(define-constant GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT #x4000)
(define-constant GL_BUFFER_IMMUTABLE_STORAGE #x821f)
(define-constant GL_BUFFER_STORAGE_FLAGS #x8220)
(define-constant GL_CLEAR_TEXTURE #x9365)
(define-constant GL_LOCATION_COMPONENT #x934a)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_INDEX #x934b)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE #x934c)
(define-constant GL_QUERY_BUFFER #x9192)
(define-constant GL_QUERY_BUFFER_BARRIER_BIT #x8000)
(define-constant GL_QUERY_BUFFER_BINDING #x9193)
(define-constant GL_QUERY_RESULT_NO_WAIT #x9194)
(define-constant GL_MIRROR_CLAMP_TO_EDGE #x8743)
(define-constant GL_CONTEXT_LOST #x0507)
(define-constant GL_NEGATIVE_ONE_TO_ONE #x935e)
(define-constant GL_ZERO_TO_ONE #x935f)
(define-constant GL_CLIP_ORIGIN #x935c)
(define-constant GL_CLIP_DEPTH_MODE #x935d)
(define-constant GL_QUERY_WAIT_INVERTED #x8e17)
(define-constant GL_QUERY_NO_WAIT_INVERTED #x8e18)
(define-constant GL_QUERY_BY_REGION_WAIT_INVERTED #x8e19)
(define-constant GL_QUERY_BY_REGION_NO_WAIT_INVERTED #x8e1a)
(define-constant GL_MAX_CULL_DISTANCES #x82f9)
(define-constant GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES #x82fa)
(define-constant GL_TEXTURE_TARGET #x1006)
(define-constant GL_QUERY_TARGET #x82ea)
(define-constant GL_TEXTURE_BINDING #x82eb)
(define-constant GL_GUILTY_CONTEXT_RESET #x8253)
(define-constant GL_INNOCENT_CONTEXT_RESET #x8254)
(define-constant GL_UNKNOWN_CONTEXT_RESET #x8255)
(define-constant GL_RESET_NOTIFICATION_STRATEGY #x8256)
(define-constant GL_LOSE_CONTEXT_ON_RESET #x8252)
(define-constant GL_NO_RESET_NOTIFICATION #x8261)
(define-constant GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT #x0004)
(define-constant GL_CONTEXT_RELEASE_BEHAVIOR #x82fb)
(define-constant GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH #x82fc)
(define-constant GL_UNSIGNED_INT64_ARB #x140f)
(define-constant GL_SYNC_CL_EVENT_ARB #x8240)
(define-constant GL_SYNC_CL_EVENT_COMPLETE_ARB #x8241)
(define-constant GL_RGBA_FLOAT_MODE_ARB #x8820)
(define-constant GL_CLAMP_VERTEX_COLOR_ARB #x891a)
(define-constant GL_CLAMP_FRAGMENT_COLOR_ARB #x891b)
(define-constant GL_CLAMP_READ_COLOR_ARB #x891c)
(define-constant GL_FIXED_ONLY_ARB #x891d)
(define-constant GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB #x9344)
(define-constant GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB #x90eb)
(define-constant GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB #x9345)
(define-constant GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB #x91bf)
(define-constant GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB #x8242)
(define-constant GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB #x8243)
(define-constant GL_DEBUG_CALLBACK_FUNCTION_ARB #x8244)
(define-constant GL_DEBUG_CALLBACK_USER_PARAM_ARB #x8245)
(define-constant GL_DEBUG_SOURCE_API_ARB #x8246)
(define-constant GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB #x8247)
(define-constant GL_DEBUG_SOURCE_SHADER_COMPILER_ARB #x8248)
(define-constant GL_DEBUG_SOURCE_THIRD_PARTY_ARB #x8249)
(define-constant GL_DEBUG_SOURCE_APPLICATION_ARB #x824a)
(define-constant GL_DEBUG_SOURCE_OTHER_ARB #x824b)
(define-constant GL_DEBUG_TYPE_ERROR_ARB #x824c)
(define-constant GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB #x824d)
(define-constant GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB #x824e)
(define-constant GL_DEBUG_TYPE_PORTABILITY_ARB #x824f)
(define-constant GL_DEBUG_TYPE_PERFORMANCE_ARB #x8250)
(define-constant GL_DEBUG_TYPE_OTHER_ARB #x8251)
(define-constant GL_MAX_DEBUG_MESSAGE_LENGTH_ARB #x9143)
(define-constant GL_MAX_DEBUG_LOGGED_MESSAGES_ARB #x9144)
(define-constant GL_DEBUG_LOGGED_MESSAGES_ARB #x9145)
(define-constant GL_DEBUG_SEVERITY_HIGH_ARB #x9146)
(define-constant GL_DEBUG_SEVERITY_MEDIUM_ARB #x9147)
(define-constant GL_DEBUG_SEVERITY_LOW_ARB #x9148)
(define-constant GL_DEPTH_COMPONENT16_ARB #x81a5)
(define-constant GL_DEPTH_COMPONENT24_ARB #x81a6)
(define-constant GL_DEPTH_COMPONENT32_ARB #x81a7)
(define-constant GL_TEXTURE_DEPTH_SIZE_ARB #x884a)
(define-constant GL_DEPTH_TEXTURE_MODE_ARB #x884b)
(define-constant GL_MAX_DRAW_BUFFERS_ARB #x8824)
(define-constant GL_DRAW_BUFFER0_ARB #x8825)
(define-constant GL_DRAW_BUFFER1_ARB #x8826)
(define-constant GL_DRAW_BUFFER2_ARB #x8827)
(define-constant GL_DRAW_BUFFER3_ARB #x8828)
(define-constant GL_DRAW_BUFFER4_ARB #x8829)
(define-constant GL_DRAW_BUFFER5_ARB #x882a)
(define-constant GL_DRAW_BUFFER6_ARB #x882b)
(define-constant GL_DRAW_BUFFER7_ARB #x882c)
(define-constant GL_DRAW_BUFFER8_ARB #x882d)
(define-constant GL_DRAW_BUFFER9_ARB #x882e)
(define-constant GL_DRAW_BUFFER10_ARB #x882f)
(define-constant GL_DRAW_BUFFER11_ARB #x8830)
(define-constant GL_DRAW_BUFFER12_ARB #x8831)
(define-constant GL_DRAW_BUFFER13_ARB #x8832)
(define-constant GL_DRAW_BUFFER14_ARB #x8833)
(define-constant GL_DRAW_BUFFER15_ARB #x8834)
(define-constant GL_FRAGMENT_PROGRAM_ARB #x8804)
(define-constant GL_PROGRAM_FORMAT_ASCII_ARB #x8875)
(define-constant GL_PROGRAM_LENGTH_ARB #x8627)
(define-constant GL_PROGRAM_FORMAT_ARB #x8876)
(define-constant GL_PROGRAM_BINDING_ARB #x8677)
(define-constant GL_PROGRAM_INSTRUCTIONS_ARB #x88a0)
(define-constant GL_MAX_PROGRAM_INSTRUCTIONS_ARB #x88a1)
(define-constant GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB #x88a2)
(define-constant GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB #x88a3)
(define-constant GL_PROGRAM_TEMPORARIES_ARB #x88a4)
(define-constant GL_MAX_PROGRAM_TEMPORARIES_ARB #x88a5)
(define-constant GL_PROGRAM_NATIVE_TEMPORARIES_ARB #x88a6)
(define-constant GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB #x88a7)
(define-constant GL_PROGRAM_PARAMETERS_ARB #x88a8)
(define-constant GL_MAX_PROGRAM_PARAMETERS_ARB #x88a9)
(define-constant GL_PROGRAM_NATIVE_PARAMETERS_ARB #x88aa)
(define-constant GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB #x88ab)
(define-constant GL_PROGRAM_ATTRIBS_ARB #x88ac)
(define-constant GL_MAX_PROGRAM_ATTRIBS_ARB #x88ad)
(define-constant GL_PROGRAM_NATIVE_ATTRIBS_ARB #x88ae)
(define-constant GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB #x88af)
(define-constant GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB #x88b4)
(define-constant GL_MAX_PROGRAM_ENV_PARAMETERS_ARB #x88b5)
(define-constant GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB #x88b6)
(define-constant GL_PROGRAM_ALU_INSTRUCTIONS_ARB #x8805)
(define-constant GL_PROGRAM_TEX_INSTRUCTIONS_ARB #x8806)
(define-constant GL_PROGRAM_TEX_INDIRECTIONS_ARB #x8807)
(define-constant GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB #x8808)
(define-constant GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB #x8809)
(define-constant GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB #x880a)
(define-constant GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB #x880b)
(define-constant GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB #x880c)
(define-constant GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB #x880d)
(define-constant GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB #x880e)
(define-constant GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB #x880f)
(define-constant GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB #x8810)
(define-constant GL_PROGRAM_STRING_ARB #x8628)
(define-constant GL_PROGRAM_ERROR_POSITION_ARB #x864b)
(define-constant GL_CURRENT_MATRIX_ARB #x8641)
(define-constant GL_TRANSPOSE_CURRENT_MATRIX_ARB #x88b7)
(define-constant GL_CURRENT_MATRIX_STACK_DEPTH_ARB #x8640)
(define-constant GL_MAX_PROGRAM_MATRICES_ARB #x862f)
(define-constant GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB #x862e)
(define-constant GL_MAX_TEXTURE_COORDS_ARB #x8871)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS_ARB #x8872)
(define-constant GL_PROGRAM_ERROR_STRING_ARB #x8874)
(define-constant GL_MATRIX0_ARB #x88c0)
(define-constant GL_MATRIX1_ARB #x88c1)
(define-constant GL_MATRIX2_ARB #x88c2)
(define-constant GL_MATRIX3_ARB #x88c3)
(define-constant GL_MATRIX4_ARB #x88c4)
(define-constant GL_MATRIX5_ARB #x88c5)
(define-constant GL_MATRIX6_ARB #x88c6)
(define-constant GL_MATRIX7_ARB #x88c7)
(define-constant GL_MATRIX8_ARB #x88c8)
(define-constant GL_MATRIX9_ARB #x88c9)
(define-constant GL_MATRIX10_ARB #x88ca)
(define-constant GL_MATRIX11_ARB #x88cb)
(define-constant GL_MATRIX12_ARB #x88cc)
(define-constant GL_MATRIX13_ARB #x88cd)
(define-constant GL_MATRIX14_ARB #x88ce)
(define-constant GL_MATRIX15_ARB #x88cf)
(define-constant GL_MATRIX16_ARB #x88d0)
(define-constant GL_MATRIX17_ARB #x88d1)
(define-constant GL_MATRIX18_ARB #x88d2)
(define-constant GL_MATRIX19_ARB #x88d3)
(define-constant GL_MATRIX20_ARB #x88d4)
(define-constant GL_MATRIX21_ARB #x88d5)
(define-constant GL_MATRIX22_ARB #x88d6)
(define-constant GL_MATRIX23_ARB #x88d7)
(define-constant GL_MATRIX24_ARB #x88d8)
(define-constant GL_MATRIX25_ARB #x88d9)
(define-constant GL_MATRIX26_ARB #x88da)
(define-constant GL_MATRIX27_ARB #x88db)
(define-constant GL_MATRIX28_ARB #x88dc)
(define-constant GL_MATRIX29_ARB #x88dd)
(define-constant GL_MATRIX30_ARB #x88de)
(define-constant GL_MATRIX31_ARB #x88df)
(define-constant GL_FRAGMENT_SHADER_ARB #x8b30)
(define-constant GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB #x8b49)
(define-constant GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB #x8b8b)
(define-constant GL_LINES_ADJACENCY_ARB #x000a)
(define-constant GL_LINE_STRIP_ADJACENCY_ARB #x000b)
(define-constant GL_TRIANGLES_ADJACENCY_ARB #x000c)
(define-constant GL_TRIANGLE_STRIP_ADJACENCY_ARB #x000d)
(define-constant GL_PROGRAM_POINT_SIZE_ARB #x8642)
(define-constant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB #x8c29)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB #x8da7)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB #x8da8)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB #x8da9)
(define-constant GL_GEOMETRY_SHADER_ARB #x8dd9)
(define-constant GL_GEOMETRY_VERTICES_OUT_ARB #x8dda)
(define-constant GL_GEOMETRY_INPUT_TYPE_ARB #x8ddb)
(define-constant GL_GEOMETRY_OUTPUT_TYPE_ARB #x8ddc)
(define-constant GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB #x8ddd)
(define-constant GL_MAX_VERTEX_VARYING_COMPONENTS_ARB #x8dde)
(define-constant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB #x8ddf)
(define-constant GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB #x8de0)
(define-constant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB #x8de1)
(define-constant GL_HALF_FLOAT_ARB #x140b)
(define-constant GL_BLEND_COLOR #x8005)
(define-constant GL_BLEND_EQUATION #x8009)
(define-constant GL_CONVOLUTION_1D #x8010)
(define-constant GL_CONVOLUTION_2D #x8011)
(define-constant GL_SEPARABLE_2D #x8012)
(define-constant GL_CONVOLUTION_BORDER_MODE #x8013)
(define-constant GL_CONVOLUTION_FILTER_SCALE #x8014)
(define-constant GL_CONVOLUTION_FILTER_BIAS #x8015)
(define-constant GL_REDUCE #x8016)
(define-constant GL_CONVOLUTION_FORMAT #x8017)
(define-constant GL_CONVOLUTION_WIDTH #x8018)
(define-constant GL_CONVOLUTION_HEIGHT #x8019)
(define-constant GL_MAX_CONVOLUTION_WIDTH #x801a)
(define-constant GL_MAX_CONVOLUTION_HEIGHT #x801b)
(define-constant GL_POST_CONVOLUTION_RED_SCALE #x801c)
(define-constant GL_POST_CONVOLUTION_GREEN_SCALE #x801d)
(define-constant GL_POST_CONVOLUTION_BLUE_SCALE #x801e)
(define-constant GL_POST_CONVOLUTION_ALPHA_SCALE #x801f)
(define-constant GL_POST_CONVOLUTION_RED_BIAS #x8020)
(define-constant GL_POST_CONVOLUTION_GREEN_BIAS #x8021)
(define-constant GL_POST_CONVOLUTION_BLUE_BIAS #x8022)
(define-constant GL_POST_CONVOLUTION_ALPHA_BIAS #x8023)
(define-constant GL_HISTOGRAM #x8024)
(define-constant GL_PROXY_HISTOGRAM #x8025)
(define-constant GL_HISTOGRAM_WIDTH #x8026)
(define-constant GL_HISTOGRAM_FORMAT #x8027)
(define-constant GL_HISTOGRAM_RED_SIZE #x8028)
(define-constant GL_HISTOGRAM_GREEN_SIZE #x8029)
(define-constant GL_HISTOGRAM_BLUE_SIZE #x802a)
(define-constant GL_HISTOGRAM_ALPHA_SIZE #x802b)
(define-constant GL_HISTOGRAM_LUMINANCE_SIZE #x802c)
(define-constant GL_HISTOGRAM_SINK #x802d)
(define-constant GL_MINMAX #x802e)
(define-constant GL_MINMAX_FORMAT #x802f)
(define-constant GL_MINMAX_SINK #x8030)
(define-constant GL_TABLE_TOO_LARGE #x8031)
(define-constant GL_COLOR_MATRIX #x80b1)
(define-constant GL_COLOR_MATRIX_STACK_DEPTH #x80b2)
(define-constant GL_MAX_COLOR_MATRIX_STACK_DEPTH #x80b3)
(define-constant GL_POST_COLOR_MATRIX_RED_SCALE #x80b4)
(define-constant GL_POST_COLOR_MATRIX_GREEN_SCALE #x80b5)
(define-constant GL_POST_COLOR_MATRIX_BLUE_SCALE #x80b6)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_SCALE #x80b7)
(define-constant GL_POST_COLOR_MATRIX_RED_BIAS #x80b8)
(define-constant GL_POST_COLOR_MATRIX_GREEN_BIAS #x80b9)
(define-constant GL_POST_COLOR_MATRIX_BLUE_BIAS #x80ba)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_BIAS #x80bb)
(define-constant GL_COLOR_TABLE #x80d0)
(define-constant GL_POST_CONVOLUTION_COLOR_TABLE #x80d1)
(define-constant GL_POST_COLOR_MATRIX_COLOR_TABLE #x80d2)
(define-constant GL_PROXY_COLOR_TABLE #x80d3)
(define-constant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE #x80d4)
(define-constant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE #x80d5)
(define-constant GL_COLOR_TABLE_SCALE #x80d6)
(define-constant GL_COLOR_TABLE_BIAS #x80d7)
(define-constant GL_COLOR_TABLE_FORMAT #x80d8)
(define-constant GL_COLOR_TABLE_WIDTH #x80d9)
(define-constant GL_COLOR_TABLE_RED_SIZE #x80da)
(define-constant GL_COLOR_TABLE_GREEN_SIZE #x80db)
(define-constant GL_COLOR_TABLE_BLUE_SIZE #x80dc)
(define-constant GL_COLOR_TABLE_ALPHA_SIZE #x80dd)
(define-constant GL_COLOR_TABLE_LUMINANCE_SIZE #x80de)
(define-constant GL_COLOR_TABLE_INTENSITY_SIZE #x80df)
(define-constant GL_CONSTANT_BORDER #x8151)
(define-constant GL_REPLICATE_BORDER #x8153)
(define-constant GL_CONVOLUTION_BORDER_COLOR #x8154)
(define-constant GL_PARAMETER_BUFFER_ARB #x80ee)
(define-constant GL_PARAMETER_BUFFER_BINDING_ARB #x80ef)
(define-constant GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB #x88fe)
(define-constant GL_SRGB_DECODE_ARB #x8299)
(define-constant GL_MATRIX_PALETTE_ARB #x8840)
(define-constant GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB #x8841)
(define-constant GL_MAX_PALETTE_MATRICES_ARB #x8842)
(define-constant GL_CURRENT_PALETTE_MATRIX_ARB #x8843)
(define-constant GL_MATRIX_INDEX_ARRAY_ARB #x8844)
(define-constant GL_CURRENT_MATRIX_INDEX_ARB #x8845)
(define-constant GL_MATRIX_INDEX_ARRAY_SIZE_ARB #x8846)
(define-constant GL_MATRIX_INDEX_ARRAY_TYPE_ARB #x8847)
(define-constant GL_MATRIX_INDEX_ARRAY_STRIDE_ARB #x8848)
(define-constant GL_MATRIX_INDEX_ARRAY_POINTER_ARB #x8849)
(define-constant GL_MULTISAMPLE_ARB #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_COVERAGE_ARB #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_ARB #x809f)
(define-constant GL_SAMPLE_COVERAGE_ARB #x80a0)
(define-constant GL_SAMPLE_BUFFERS_ARB #x80a8)
(define-constant GL_SAMPLES_ARB #x80a9)
(define-constant GL_SAMPLE_COVERAGE_VALUE_ARB #x80aa)
(define-constant GL_SAMPLE_COVERAGE_INVERT_ARB #x80ab)
(define-constant GL_MULTISAMPLE_BIT_ARB #x20000000)
(define-constant GL_TEXTURE0_ARB #x84c0)
(define-constant GL_TEXTURE1_ARB #x84c1)
(define-constant GL_TEXTURE2_ARB #x84c2)
(define-constant GL_TEXTURE3_ARB #x84c3)
(define-constant GL_TEXTURE4_ARB #x84c4)
(define-constant GL_TEXTURE5_ARB #x84c5)
(define-constant GL_TEXTURE6_ARB #x84c6)
(define-constant GL_TEXTURE7_ARB #x84c7)
(define-constant GL_TEXTURE8_ARB #x84c8)
(define-constant GL_TEXTURE9_ARB #x84c9)
(define-constant GL_TEXTURE10_ARB #x84ca)
(define-constant GL_TEXTURE11_ARB #x84cb)
(define-constant GL_TEXTURE12_ARB #x84cc)
(define-constant GL_TEXTURE13_ARB #x84cd)
(define-constant GL_TEXTURE14_ARB #x84ce)
(define-constant GL_TEXTURE15_ARB #x84cf)
(define-constant GL_TEXTURE16_ARB #x84d0)
(define-constant GL_TEXTURE17_ARB #x84d1)
(define-constant GL_TEXTURE18_ARB #x84d2)
(define-constant GL_TEXTURE19_ARB #x84d3)
(define-constant GL_TEXTURE20_ARB #x84d4)
(define-constant GL_TEXTURE21_ARB #x84d5)
(define-constant GL_TEXTURE22_ARB #x84d6)
(define-constant GL_TEXTURE23_ARB #x84d7)
(define-constant GL_TEXTURE24_ARB #x84d8)
(define-constant GL_TEXTURE25_ARB #x84d9)
(define-constant GL_TEXTURE26_ARB #x84da)
(define-constant GL_TEXTURE27_ARB #x84db)
(define-constant GL_TEXTURE28_ARB #x84dc)
(define-constant GL_TEXTURE29_ARB #x84dd)
(define-constant GL_TEXTURE30_ARB #x84de)
(define-constant GL_TEXTURE31_ARB #x84df)
(define-constant GL_ACTIVE_TEXTURE_ARB #x84e0)
(define-constant GL_CLIENT_ACTIVE_TEXTURE_ARB #x84e1)
(define-constant GL_MAX_TEXTURE_UNITS_ARB #x84e2)
(define-constant GL_QUERY_COUNTER_BITS_ARB #x8864)
(define-constant GL_CURRENT_QUERY_ARB #x8865)
(define-constant GL_QUERY_RESULT_ARB #x8866)
(define-constant GL_QUERY_RESULT_AVAILABLE_ARB #x8867)
(define-constant GL_SAMPLES_PASSED_ARB #x8914)
(define-constant GL_VERTICES_SUBMITTED_ARB #x82ee)
(define-constant GL_PRIMITIVES_SUBMITTED_ARB #x82ef)
(define-constant GL_VERTEX_SHADER_INVOCATIONS_ARB #x82f0)
(define-constant GL_TESS_CONTROL_SHADER_PATCHES_ARB #x82f1)
(define-constant GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB #x82f2)
(define-constant GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB #x82f3)
(define-constant GL_FRAGMENT_SHADER_INVOCATIONS_ARB #x82f4)
(define-constant GL_COMPUTE_SHADER_INVOCATIONS_ARB #x82f5)
(define-constant GL_CLIPPING_INPUT_PRIMITIVES_ARB #x82f6)
(define-constant GL_CLIPPING_OUTPUT_PRIMITIVES_ARB #x82f7)
(define-constant GL_PIXEL_PACK_BUFFER_ARB #x88eb)
(define-constant GL_PIXEL_UNPACK_BUFFER_ARB #x88ec)
(define-constant GL_PIXEL_PACK_BUFFER_BINDING_ARB #x88ed)
(define-constant GL_PIXEL_UNPACK_BUFFER_BINDING_ARB #x88ef)
(define-constant GL_POINT_SIZE_MIN_ARB #x8126)
(define-constant GL_POINT_SIZE_MAX_ARB #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_ARB #x8128)
(define-constant GL_POINT_DISTANCE_ATTENUATION_ARB #x8129)
(define-constant GL_POINT_SPRITE_ARB #x8861)
(define-constant GL_COORD_REPLACE_ARB #x8862)
(define-constant GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB #x0004)
(define-constant GL_LOSE_CONTEXT_ON_RESET_ARB #x8252)
(define-constant GL_GUILTY_CONTEXT_RESET_ARB #x8253)
(define-constant GL_INNOCENT_CONTEXT_RESET_ARB #x8254)
(define-constant GL_UNKNOWN_CONTEXT_RESET_ARB #x8255)
(define-constant GL_RESET_NOTIFICATION_STRATEGY_ARB #x8256)
(define-constant GL_NO_RESET_NOTIFICATION_ARB #x8261)
(define-constant GL_SAMPLE_SHADING_ARB #x8c36)
(define-constant GL_MIN_SAMPLE_SHADING_VALUE_ARB #x8c37)
(define-constant GL_PROGRAM_OBJECT_ARB #x8b40)
(define-constant GL_SHADER_OBJECT_ARB #x8b48)
(define-constant GL_OBJECT_TYPE_ARB #x8b4e)
(define-constant GL_OBJECT_SUBTYPE_ARB #x8b4f)
(define-constant GL_FLOAT_VEC2_ARB #x8b50)
(define-constant GL_FLOAT_VEC3_ARB #x8b51)
(define-constant GL_FLOAT_VEC4_ARB #x8b52)
(define-constant GL_INT_VEC2_ARB #x8b53)
(define-constant GL_INT_VEC3_ARB #x8b54)
(define-constant GL_INT_VEC4_ARB #x8b55)
(define-constant GL_BOOL_ARB #x8b56)
(define-constant GL_BOOL_VEC2_ARB #x8b57)
(define-constant GL_BOOL_VEC3_ARB #x8b58)
(define-constant GL_BOOL_VEC4_ARB #x8b59)
(define-constant GL_FLOAT_MAT2_ARB #x8b5a)
(define-constant GL_FLOAT_MAT3_ARB #x8b5b)
(define-constant GL_FLOAT_MAT4_ARB #x8b5c)
(define-constant GL_SAMPLER_1D_ARB #x8b5d)
(define-constant GL_SAMPLER_2D_ARB #x8b5e)
(define-constant GL_SAMPLER_3D_ARB #x8b5f)
(define-constant GL_SAMPLER_CUBE_ARB #x8b60)
(define-constant GL_SAMPLER_1D_SHADOW_ARB #x8b61)
(define-constant GL_SAMPLER_2D_SHADOW_ARB #x8b62)
(define-constant GL_SAMPLER_2D_RECT_ARB #x8b63)
(define-constant GL_SAMPLER_2D_RECT_SHADOW_ARB #x8b64)
(define-constant GL_OBJECT_DELETE_STATUS_ARB #x8b80)
(define-constant GL_OBJECT_COMPILE_STATUS_ARB #x8b81)
(define-constant GL_OBJECT_LINK_STATUS_ARB #x8b82)
(define-constant GL_OBJECT_VALIDATE_STATUS_ARB #x8b83)
(define-constant GL_OBJECT_INFO_LOG_LENGTH_ARB #x8b84)
(define-constant GL_OBJECT_ATTACHED_OBJECTS_ARB #x8b85)
(define-constant GL_OBJECT_ACTIVE_UNIFORMS_ARB #x8b86)
(define-constant GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB #x8b87)
(define-constant GL_OBJECT_SHADER_SOURCE_LENGTH_ARB #x8b88)
(define-constant GL_SHADING_LANGUAGE_VERSION_ARB #x8b8c)
(define-constant GL_SHADER_INCLUDE_ARB #x8dae)
(define-constant GL_NAMED_STRING_LENGTH_ARB #x8de9)
(define-constant GL_NAMED_STRING_TYPE_ARB #x8dea)
(define-constant GL_TEXTURE_COMPARE_MODE_ARB #x884c)
(define-constant GL_TEXTURE_COMPARE_FUNC_ARB #x884d)
(define-constant GL_COMPARE_R_TO_TEXTURE_ARB #x884e)
(define-constant GL_TEXTURE_COMPARE_FAIL_VALUE_ARB #x80bf)
(define-constant GL_SPARSE_STORAGE_BIT_ARB #x0400)
(define-constant GL_SPARSE_BUFFER_PAGE_SIZE_ARB #x82f8)
(define-constant GL_TEXTURE_SPARSE_ARB #x91a6)
(define-constant GL_VIRTUAL_PAGE_SIZE_INDEX_ARB #x91a7)
(define-constant GL_NUM_SPARSE_LEVELS_ARB #x91aa)
(define-constant GL_NUM_VIRTUAL_PAGE_SIZES_ARB #x91a8)
(define-constant GL_VIRTUAL_PAGE_SIZE_X_ARB #x9195)
(define-constant GL_VIRTUAL_PAGE_SIZE_Y_ARB #x9196)
(define-constant GL_VIRTUAL_PAGE_SIZE_Z_ARB #x9197)
(define-constant GL_MAX_SPARSE_TEXTURE_SIZE_ARB #x9198)
(define-constant GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB #x9199)
(define-constant GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB #x919a)
(define-constant GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB #x91a9)
(define-constant GL_CLAMP_TO_BORDER_ARB #x812d)
(define-constant GL_TEXTURE_BUFFER_ARB #x8c2a)
(define-constant GL_MAX_TEXTURE_BUFFER_SIZE_ARB #x8c2b)
(define-constant GL_TEXTURE_BINDING_BUFFER_ARB #x8c2c)
(define-constant GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB #x8c2d)
(define-constant GL_TEXTURE_BUFFER_FORMAT_ARB #x8c2e)
(define-constant GL_COMPRESSED_ALPHA_ARB #x84e9)
(define-constant GL_COMPRESSED_LUMINANCE_ARB #x84ea)
(define-constant GL_COMPRESSED_LUMINANCE_ALPHA_ARB #x84eb)
(define-constant GL_COMPRESSED_INTENSITY_ARB #x84ec)
(define-constant GL_COMPRESSED_RGB_ARB #x84ed)
(define-constant GL_COMPRESSED_RGBA_ARB #x84ee)
(define-constant GL_TEXTURE_COMPRESSION_HINT_ARB #x84ef)
(define-constant GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB #x86a0)
(define-constant GL_TEXTURE_COMPRESSED_ARB #x86a1)
(define-constant GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB #x86a2)
(define-constant GL_COMPRESSED_TEXTURE_FORMATS_ARB #x86a3)
(define-constant GL_COMPRESSED_RGBA_BPTC_UNORM_ARB #x8e8c)
(define-constant GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB #x8e8d)
(define-constant GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB #x8e8e)
(define-constant GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB #x8e8f)
(define-constant GL_NORMAL_MAP_ARB #x8511)
(define-constant GL_REFLECTION_MAP_ARB #x8512)
(define-constant GL_TEXTURE_CUBE_MAP_ARB #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_ARB #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_ARB #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB #x851c)
(define-constant GL_TEXTURE_CUBE_MAP_ARRAY_ARB #x9009)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB #x900a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB #x900b)
(define-constant GL_SAMPLER_CUBE_MAP_ARRAY_ARB #x900c)
(define-constant GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB #x900d)
(define-constant GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB #x900e)
(define-constant GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB #x900f)
(define-constant GL_COMBINE_ARB #x8570)
(define-constant GL_COMBINE_RGB_ARB #x8571)
(define-constant GL_COMBINE_ALPHA_ARB #x8572)
(define-constant GL_SOURCE0_RGB_ARB #x8580)
(define-constant GL_SOURCE1_RGB_ARB #x8581)
(define-constant GL_SOURCE2_RGB_ARB #x8582)
(define-constant GL_SOURCE0_ALPHA_ARB #x8588)
(define-constant GL_SOURCE1_ALPHA_ARB #x8589)
(define-constant GL_SOURCE2_ALPHA_ARB #x858a)
(define-constant GL_OPERAND0_RGB_ARB #x8590)
(define-constant GL_OPERAND1_RGB_ARB #x8591)
(define-constant GL_OPERAND2_RGB_ARB #x8592)
(define-constant GL_OPERAND0_ALPHA_ARB #x8598)
(define-constant GL_OPERAND1_ALPHA_ARB #x8599)
(define-constant GL_OPERAND2_ALPHA_ARB #x859a)
(define-constant GL_RGB_SCALE_ARB #x8573)
(define-constant GL_ADD_SIGNED_ARB #x8574)
(define-constant GL_INTERPOLATE_ARB #x8575)
(define-constant GL_SUBTRACT_ARB #x84e7)
(define-constant GL_CONSTANT_ARB #x8576)
(define-constant GL_PRIMARY_COLOR_ARB #x8577)
(define-constant GL_PREVIOUS_ARB #x8578)
(define-constant GL_DOT3_RGB_ARB #x86ae)
(define-constant GL_DOT3_RGBA_ARB #x86af)
(define-constant GL_TEXTURE_RED_TYPE_ARB #x8c10)
(define-constant GL_TEXTURE_GREEN_TYPE_ARB #x8c11)
(define-constant GL_TEXTURE_BLUE_TYPE_ARB #x8c12)
(define-constant GL_TEXTURE_ALPHA_TYPE_ARB #x8c13)
(define-constant GL_TEXTURE_LUMINANCE_TYPE_ARB #x8c14)
(define-constant GL_TEXTURE_INTENSITY_TYPE_ARB #x8c15)
(define-constant GL_TEXTURE_DEPTH_TYPE_ARB #x8c16)
(define-constant GL_UNSIGNED_NORMALIZED_ARB #x8c17)
(define-constant GL_RGBA32F_ARB #x8814)
(define-constant GL_RGB32F_ARB #x8815)
(define-constant GL_ALPHA32F_ARB #x8816)
(define-constant GL_INTENSITY32F_ARB #x8817)
(define-constant GL_LUMINANCE32F_ARB #x8818)
(define-constant GL_LUMINANCE_ALPHA32F_ARB #x8819)
(define-constant GL_RGBA16F_ARB #x881a)
(define-constant GL_RGB16F_ARB #x881b)
(define-constant GL_ALPHA16F_ARB #x881c)
(define-constant GL_INTENSITY16F_ARB #x881d)
(define-constant GL_LUMINANCE16F_ARB #x881e)
(define-constant GL_LUMINANCE_ALPHA16F_ARB #x881f)
(define-constant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB #x8e5e)
(define-constant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB #x8e5f)
(define-constant GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB #x8f9f)
(define-constant GL_MIRRORED_REPEAT_ARB #x8370)
(define-constant GL_TEXTURE_RECTANGLE_ARB #x84f5)
(define-constant GL_TEXTURE_BINDING_RECTANGLE_ARB #x84f6)
(define-constant GL_PROXY_TEXTURE_RECTANGLE_ARB #x84f7)
(define-constant GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB #x84f8)
(define-constant GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB #x82ec)
(define-constant GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB #x82ed)
(define-constant GL_TRANSPOSE_MODELVIEW_MATRIX_ARB #x84e3)
(define-constant GL_TRANSPOSE_PROJECTION_MATRIX_ARB #x84e4)
(define-constant GL_TRANSPOSE_TEXTURE_MATRIX_ARB #x84e5)
(define-constant GL_TRANSPOSE_COLOR_MATRIX_ARB #x84e6)
(define-constant GL_MAX_VERTEX_UNITS_ARB #x86a4)
(define-constant GL_ACTIVE_VERTEX_UNITS_ARB #x86a5)
(define-constant GL_WEIGHT_SUM_UNITY_ARB #x86a6)
(define-constant GL_VERTEX_BLEND_ARB #x86a7)
(define-constant GL_CURRENT_WEIGHT_ARB #x86a8)
(define-constant GL_WEIGHT_ARRAY_TYPE_ARB #x86a9)
(define-constant GL_WEIGHT_ARRAY_STRIDE_ARB #x86aa)
(define-constant GL_WEIGHT_ARRAY_SIZE_ARB #x86ab)
(define-constant GL_WEIGHT_ARRAY_POINTER_ARB #x86ac)
(define-constant GL_WEIGHT_ARRAY_ARB #x86ad)
(define-constant GL_MODELVIEW0_ARB #x1700)
(define-constant GL_MODELVIEW1_ARB #x850a)
(define-constant GL_MODELVIEW2_ARB #x8722)
(define-constant GL_MODELVIEW3_ARB #x8723)
(define-constant GL_MODELVIEW4_ARB #x8724)
(define-constant GL_MODELVIEW5_ARB #x8725)
(define-constant GL_MODELVIEW6_ARB #x8726)
(define-constant GL_MODELVIEW7_ARB #x8727)
(define-constant GL_MODELVIEW8_ARB #x8728)
(define-constant GL_MODELVIEW9_ARB #x8729)
(define-constant GL_MODELVIEW10_ARB #x872a)
(define-constant GL_MODELVIEW11_ARB #x872b)
(define-constant GL_MODELVIEW12_ARB #x872c)
(define-constant GL_MODELVIEW13_ARB #x872d)
(define-constant GL_MODELVIEW14_ARB #x872e)
(define-constant GL_MODELVIEW15_ARB #x872f)
(define-constant GL_MODELVIEW16_ARB #x8730)
(define-constant GL_MODELVIEW17_ARB #x8731)
(define-constant GL_MODELVIEW18_ARB #x8732)
(define-constant GL_MODELVIEW19_ARB #x8733)
(define-constant GL_MODELVIEW20_ARB #x8734)
(define-constant GL_MODELVIEW21_ARB #x8735)
(define-constant GL_MODELVIEW22_ARB #x8736)
(define-constant GL_MODELVIEW23_ARB #x8737)
(define-constant GL_MODELVIEW24_ARB #x8738)
(define-constant GL_MODELVIEW25_ARB #x8739)
(define-constant GL_MODELVIEW26_ARB #x873a)
(define-constant GL_MODELVIEW27_ARB #x873b)
(define-constant GL_MODELVIEW28_ARB #x873c)
(define-constant GL_MODELVIEW29_ARB #x873d)
(define-constant GL_MODELVIEW30_ARB #x873e)
(define-constant GL_MODELVIEW31_ARB #x873f)
(define-constant GL_BUFFER_SIZE_ARB #x8764)
(define-constant GL_BUFFER_USAGE_ARB #x8765)
(define-constant GL_ARRAY_BUFFER_ARB #x8892)
(define-constant GL_ELEMENT_ARRAY_BUFFER_ARB #x8893)
(define-constant GL_ARRAY_BUFFER_BINDING_ARB #x8894)
(define-constant GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB #x8895)
(define-constant GL_VERTEX_ARRAY_BUFFER_BINDING_ARB #x8896)
(define-constant GL_NORMAL_ARRAY_BUFFER_BINDING_ARB #x8897)
(define-constant GL_COLOR_ARRAY_BUFFER_BINDING_ARB #x8898)
(define-constant GL_INDEX_ARRAY_BUFFER_BINDING_ARB #x8899)
(define-constant GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB #x889a)
(define-constant GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB #x889b)
(define-constant GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB #x889c)
(define-constant GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB #x889d)
(define-constant GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB #x889e)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB #x889f)
(define-constant GL_READ_ONLY_ARB #x88b8)
(define-constant GL_WRITE_ONLY_ARB #x88b9)
(define-constant GL_READ_WRITE_ARB #x88ba)
(define-constant GL_BUFFER_ACCESS_ARB #x88bb)
(define-constant GL_BUFFER_MAPPED_ARB #x88bc)
(define-constant GL_BUFFER_MAP_POINTER_ARB #x88bd)
(define-constant GL_STREAM_DRAW_ARB #x88e0)
(define-constant GL_STREAM_READ_ARB #x88e1)
(define-constant GL_STREAM_COPY_ARB #x88e2)
(define-constant GL_STATIC_DRAW_ARB #x88e4)
(define-constant GL_STATIC_READ_ARB #x88e5)
(define-constant GL_STATIC_COPY_ARB #x88e6)
(define-constant GL_DYNAMIC_DRAW_ARB #x88e8)
(define-constant GL_DYNAMIC_READ_ARB #x88e9)
(define-constant GL_DYNAMIC_COPY_ARB #x88ea)
(define-constant GL_COLOR_SUM_ARB #x8458)
(define-constant GL_VERTEX_PROGRAM_ARB #x8620)
(define-constant GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB #x8622)
(define-constant GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB #x8623)
(define-constant GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB #x8624)
(define-constant GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB #x8625)
(define-constant GL_CURRENT_VERTEX_ATTRIB_ARB #x8626)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE_ARB #x8642)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE_ARB #x8643)
(define-constant GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB #x8645)
(define-constant GL_MAX_VERTEX_ATTRIBS_ARB #x8869)
(define-constant GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB #x886a)
(define-constant GL_PROGRAM_ADDRESS_REGISTERS_ARB #x88b0)
(define-constant GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB #x88b1)
(define-constant GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB #x88b2)
(define-constant GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB #x88b3)
(define-constant GL_VERTEX_SHADER_ARB #x8b31)
(define-constant GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB #x8b4a)
(define-constant GL_MAX_VARYING_FLOATS_ARB #x8b4b)
(define-constant GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB #x8b4c)
(define-constant GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB #x8b4d)
(define-constant GL_OBJECT_ACTIVE_ATTRIBUTES_ARB #x8b89)
(define-constant GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB #x8b8a)
(define-constant GL_MULTIPLY_KHR #x9294)
(define-constant GL_SCREEN_KHR #x9295)
(define-constant GL_OVERLAY_KHR #x9296)
(define-constant GL_DARKEN_KHR #x9297)
(define-constant GL_LIGHTEN_KHR #x9298)
(define-constant GL_COLORDODGE_KHR #x9299)
(define-constant GL_COLORBURN_KHR #x929a)
(define-constant GL_HARDLIGHT_KHR #x929b)
(define-constant GL_SOFTLIGHT_KHR #x929c)
(define-constant GL_DIFFERENCE_KHR #x929e)
(define-constant GL_EXCLUSION_KHR #x92a0)
(define-constant GL_HSL_HUE_KHR #x92ad)
(define-constant GL_HSL_SATURATION_KHR #x92ae)
(define-constant GL_HSL_COLOR_KHR #x92af)
(define-constant GL_HSL_LUMINOSITY_KHR #x92b0)
(define-constant GL_BLEND_ADVANCED_COHERENT_KHR #x9285)
(define-constant GL_CONTEXT_ROBUST_ACCESS #x90f3)
(define-constant GL_COMPRESSED_RGBA_ASTC_4x4_KHR #x93b0)
(define-constant GL_COMPRESSED_RGBA_ASTC_5x4_KHR #x93b1)
(define-constant GL_COMPRESSED_RGBA_ASTC_5x5_KHR #x93b2)
(define-constant GL_COMPRESSED_RGBA_ASTC_6x5_KHR #x93b3)
(define-constant GL_COMPRESSED_RGBA_ASTC_6x6_KHR #x93b4)
(define-constant GL_COMPRESSED_RGBA_ASTC_8x5_KHR #x93b5)
(define-constant GL_COMPRESSED_RGBA_ASTC_8x6_KHR #x93b6)
(define-constant GL_COMPRESSED_RGBA_ASTC_8x8_KHR #x93b7)
(define-constant GL_COMPRESSED_RGBA_ASTC_10x5_KHR #x93b8)
(define-constant GL_COMPRESSED_RGBA_ASTC_10x6_KHR #x93b9)
(define-constant GL_COMPRESSED_RGBA_ASTC_10x8_KHR #x93ba)
(define-constant GL_COMPRESSED_RGBA_ASTC_10x10_KHR #x93bb)
(define-constant GL_COMPRESSED_RGBA_ASTC_12x10_KHR #x93bc)
(define-constant GL_COMPRESSED_RGBA_ASTC_12x12_KHR #x93bd)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR #x93d0)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR #x93d1)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR #x93d2)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR #x93d3)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR #x93d4)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR #x93d5)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR #x93d6)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR #x93d7)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR #x93d8)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR #x93d9)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR #x93da)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR #x93db)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR #x93dc)
(define-constant GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR #x93dd)
(define-constant GL_PALETTE4_RGB8_OES #x8b90)
(define-constant GL_PALETTE4_RGBA8_OES #x8b91)
(define-constant GL_PALETTE4_R5_G6_B5_OES #x8b92)
(define-constant GL_PALETTE4_RGBA4_OES #x8b93)
(define-constant GL_PALETTE4_RGB5_A1_OES #x8b94)
(define-constant GL_PALETTE8_RGB8_OES #x8b95)
(define-constant GL_PALETTE8_RGBA8_OES #x8b96)
(define-constant GL_PALETTE8_R5_G6_B5_OES #x8b97)
(define-constant GL_PALETTE8_RGBA4_OES #x8b98)
(define-constant GL_PALETTE8_RGB5_A1_OES #x8b99)
(define-constant GL_FIXED_OES #x140c)
(define-constant GL_IMPLEMENTATION_COLOR_READ_TYPE_OES #x8b9a)
(define-constant GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES #x8b9b)
(define-constant GL_MULTISAMPLE_3DFX #x86b2)
(define-constant GL_SAMPLE_BUFFERS_3DFX #x86b3)
(define-constant GL_SAMPLES_3DFX #x86b4)
(define-constant GL_MULTISAMPLE_BIT_3DFX #x20000000)
(define-constant GL_COMPRESSED_RGB_FXT1_3DFX #x86b0)
(define-constant GL_COMPRESSED_RGBA_FXT1_3DFX #x86b1)
(define-constant GL_FACTOR_MIN_AMD #x901c)
(define-constant GL_FACTOR_MAX_AMD #x901d)
(define-constant GL_MAX_DEBUG_MESSAGE_LENGTH_AMD #x9143)
(define-constant GL_MAX_DEBUG_LOGGED_MESSAGES_AMD #x9144)
(define-constant GL_DEBUG_LOGGED_MESSAGES_AMD #x9145)
(define-constant GL_DEBUG_SEVERITY_HIGH_AMD #x9146)
(define-constant GL_DEBUG_SEVERITY_MEDIUM_AMD #x9147)
(define-constant GL_DEBUG_SEVERITY_LOW_AMD #x9148)
(define-constant GL_DEBUG_CATEGORY_API_ERROR_AMD #x9149)
(define-constant GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD #x914a)
(define-constant GL_DEBUG_CATEGORY_DEPRECATION_AMD #x914b)
(define-constant GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD #x914c)
(define-constant GL_DEBUG_CATEGORY_PERFORMANCE_AMD #x914d)
(define-constant GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD #x914e)
(define-constant GL_DEBUG_CATEGORY_APPLICATION_AMD #x914f)
(define-constant GL_DEBUG_CATEGORY_OTHER_AMD #x9150)
(define-constant GL_DEPTH_CLAMP_NEAR_AMD #x901e)
(define-constant GL_DEPTH_CLAMP_FAR_AMD #x901f)
(define-constant GL_INT64_NV #x140e)
(define-constant GL_UNSIGNED_INT64_NV #x140f)
(define-constant GL_INT8_NV #x8fe0)
(define-constant GL_INT8_VEC2_NV #x8fe1)
(define-constant GL_INT8_VEC3_NV #x8fe2)
(define-constant GL_INT8_VEC4_NV #x8fe3)
(define-constant GL_INT16_NV #x8fe4)
(define-constant GL_INT16_VEC2_NV #x8fe5)
(define-constant GL_INT16_VEC3_NV #x8fe6)
(define-constant GL_INT16_VEC4_NV #x8fe7)
(define-constant GL_INT64_VEC2_NV #x8fe9)
(define-constant GL_INT64_VEC3_NV #x8fea)
(define-constant GL_INT64_VEC4_NV #x8feb)
(define-constant GL_UNSIGNED_INT8_NV #x8fec)
(define-constant GL_UNSIGNED_INT8_VEC2_NV #x8fed)
(define-constant GL_UNSIGNED_INT8_VEC3_NV #x8fee)
(define-constant GL_UNSIGNED_INT8_VEC4_NV #x8fef)
(define-constant GL_UNSIGNED_INT16_NV #x8ff0)
(define-constant GL_UNSIGNED_INT16_VEC2_NV #x8ff1)
(define-constant GL_UNSIGNED_INT16_VEC3_NV #x8ff2)
(define-constant GL_UNSIGNED_INT16_VEC4_NV #x8ff3)
(define-constant GL_UNSIGNED_INT64_VEC2_NV #x8ff5)
(define-constant GL_UNSIGNED_INT64_VEC3_NV #x8ff6)
(define-constant GL_UNSIGNED_INT64_VEC4_NV #x8ff7)
(define-constant GL_FLOAT16_NV #x8ff8)
(define-constant GL_FLOAT16_VEC2_NV #x8ff9)
(define-constant GL_FLOAT16_VEC3_NV #x8ffa)
(define-constant GL_FLOAT16_VEC4_NV #x8ffb)
(define-constant GL_VERTEX_ELEMENT_SWIZZLE_AMD #x91a4)
(define-constant GL_VERTEX_ID_SWIZZLE_AMD #x91a5)
(define-constant GL_DATA_BUFFER_AMD #x9151)
(define-constant GL_PERFORMANCE_MONITOR_AMD #x9152)
(define-constant GL_QUERY_OBJECT_AMD #x9153)
(define-constant GL_VERTEX_ARRAY_OBJECT_AMD #x9154)
(define-constant GL_SAMPLER_OBJECT_AMD #x9155)
(define-constant GL_OCCLUSION_QUERY_EVENT_MASK_AMD #x874f)
(define-constant GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD #x0001)
(define-constant GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD #x0002)
(define-constant GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD #x0004)
(define-constant GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD #x0008)
(define-constant GL_QUERY_ALL_EVENT_BITS_AMD #xffffffff)
(define-constant GL_COUNTER_TYPE_AMD #x8bc0)
(define-constant GL_COUNTER_RANGE_AMD #x8bc1)
(define-constant GL_UNSIGNED_INT64_AMD #x8bc2)
(define-constant GL_PERCENTAGE_AMD #x8bc3)
(define-constant GL_PERFMON_RESULT_AVAILABLE_AMD #x8bc4)
(define-constant GL_PERFMON_RESULT_SIZE_AMD #x8bc5)
(define-constant GL_PERFMON_RESULT_AMD #x8bc6)
(define-constant GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD #x9160)
(define-constant GL_QUERY_BUFFER_AMD #x9192)
(define-constant GL_QUERY_BUFFER_BINDING_AMD #x9193)
(define-constant GL_QUERY_RESULT_NO_WAIT_AMD #x9194)
(define-constant GL_SUBSAMPLE_DISTANCE_AMD #x883f)
(define-constant GL_VIRTUAL_PAGE_SIZE_X_AMD #x9195)
(define-constant GL_VIRTUAL_PAGE_SIZE_Y_AMD #x9196)
(define-constant GL_VIRTUAL_PAGE_SIZE_Z_AMD #x9197)
(define-constant GL_MAX_SPARSE_TEXTURE_SIZE_AMD #x9198)
(define-constant GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD #x9199)
(define-constant GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS #x919a)
(define-constant GL_MIN_SPARSE_LEVEL_AMD #x919b)
(define-constant GL_MIN_LOD_WARNING_AMD #x919c)
(define-constant GL_TEXTURE_STORAGE_SPARSE_BIT_AMD #x0001)
(define-constant GL_SET_AMD #x874a)
(define-constant GL_REPLACE_VALUE_AMD #x874b)
(define-constant GL_STENCIL_OP_VALUE_AMD #x874c)
(define-constant GL_STENCIL_BACK_OP_VALUE_AMD #x874d)
(define-constant GL_STREAM_RASTERIZATION_AMD #x91a0)
(define-constant GL_SAMPLER_BUFFER_AMD #x9001)
(define-constant GL_INT_SAMPLER_BUFFER_AMD #x9002)
(define-constant GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD #x9003)
(define-constant GL_TESSELLATION_MODE_AMD #x9004)
(define-constant GL_TESSELLATION_FACTOR_AMD #x9005)
(define-constant GL_DISCRETE_AMD #x9006)
(define-constant GL_CONTINUOUS_AMD #x9007)
(define-constant GL_AUX_DEPTH_STENCIL_APPLE #x8a14)
(define-constant GL_UNPACK_CLIENT_STORAGE_APPLE #x85b2)
(define-constant GL_ELEMENT_ARRAY_APPLE #x8a0c)
(define-constant GL_ELEMENT_ARRAY_TYPE_APPLE #x8a0d)
(define-constant GL_ELEMENT_ARRAY_POINTER_APPLE #x8a0e)
(define-constant GL_DRAW_PIXELS_APPLE #x8a0a)
(define-constant GL_FENCE_APPLE #x8a0b)
(define-constant GL_HALF_APPLE #x140b)
(define-constant GL_RGBA_FLOAT32_APPLE #x8814)
(define-constant GL_RGB_FLOAT32_APPLE #x8815)
(define-constant GL_ALPHA_FLOAT32_APPLE #x8816)
(define-constant GL_INTENSITY_FLOAT32_APPLE #x8817)
(define-constant GL_LUMINANCE_FLOAT32_APPLE #x8818)
(define-constant GL_LUMINANCE_ALPHA_FLOAT32_APPLE #x8819)
(define-constant GL_RGBA_FLOAT16_APPLE #x881a)
(define-constant GL_RGB_FLOAT16_APPLE #x881b)
(define-constant GL_ALPHA_FLOAT16_APPLE #x881c)
(define-constant GL_INTENSITY_FLOAT16_APPLE #x881d)
(define-constant GL_LUMINANCE_FLOAT16_APPLE #x881e)
(define-constant GL_LUMINANCE_ALPHA_FLOAT16_APPLE #x881f)
(define-constant GL_COLOR_FLOAT_APPLE #x8a0f)
(define-constant GL_BUFFER_SERIALIZED_MODIFY_APPLE #x8a12)
(define-constant GL_BUFFER_FLUSHING_UNMAP_APPLE #x8a13)
(define-constant GL_BUFFER_OBJECT_APPLE #x85b3)
(define-constant GL_RELEASED_APPLE #x8a19)
(define-constant GL_VOLATILE_APPLE #x8a1a)
(define-constant GL_RETAINED_APPLE #x8a1b)
(define-constant GL_UNDEFINED_APPLE #x8a1c)
(define-constant GL_PURGEABLE_APPLE #x8a1d)
(define-constant GL_RGB_422_APPLE #x8a1f)
(define-constant GL_UNSIGNED_SHORT_8_8_APPLE #x85ba)
(define-constant GL_UNSIGNED_SHORT_8_8_REV_APPLE #x85bb)
(define-constant GL_RGB_RAW_422_APPLE #x8a51)
(define-constant GL_PACK_ROW_BYTES_APPLE #x8a15)
(define-constant GL_UNPACK_ROW_BYTES_APPLE #x8a16)
(define-constant GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE #x85b0)
(define-constant GL_TEXTURE_RANGE_LENGTH_APPLE #x85b7)
(define-constant GL_TEXTURE_RANGE_POINTER_APPLE #x85b8)
(define-constant GL_TEXTURE_STORAGE_HINT_APPLE #x85bc)
(define-constant GL_STORAGE_PRIVATE_APPLE #x85bd)
(define-constant GL_STORAGE_CACHED_APPLE #x85be)
(define-constant GL_STORAGE_SHARED_APPLE #x85bf)
(define-constant GL_TRANSFORM_HINT_APPLE #x85b1)
(define-constant GL_VERTEX_ARRAY_BINDING_APPLE #x85b5)
(define-constant GL_VERTEX_ARRAY_RANGE_APPLE #x851d)
(define-constant GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE #x851e)
(define-constant GL_VERTEX_ARRAY_STORAGE_HINT_APPLE #x851f)
(define-constant GL_VERTEX_ARRAY_RANGE_POINTER_APPLE #x8521)
(define-constant GL_STORAGE_CLIENT_APPLE #x85b4)
(define-constant GL_VERTEX_ATTRIB_MAP1_APPLE #x8a00)
(define-constant GL_VERTEX_ATTRIB_MAP2_APPLE #x8a01)
(define-constant GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE #x8a02)
(define-constant GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE #x8a03)
(define-constant GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE #x8a04)
(define-constant GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE #x8a05)
(define-constant GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE #x8a06)
(define-constant GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE #x8a07)
(define-constant GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE #x8a08)
(define-constant GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE #x8a09)
(define-constant GL_YCBCR_422_APPLE #x85b9)
(define-constant GL_MAX_DRAW_BUFFERS_ATI #x8824)
(define-constant GL_DRAW_BUFFER0_ATI #x8825)
(define-constant GL_DRAW_BUFFER1_ATI #x8826)
(define-constant GL_DRAW_BUFFER2_ATI #x8827)
(define-constant GL_DRAW_BUFFER3_ATI #x8828)
(define-constant GL_DRAW_BUFFER4_ATI #x8829)
(define-constant GL_DRAW_BUFFER5_ATI #x882a)
(define-constant GL_DRAW_BUFFER6_ATI #x882b)
(define-constant GL_DRAW_BUFFER7_ATI #x882c)
(define-constant GL_DRAW_BUFFER8_ATI #x882d)
(define-constant GL_DRAW_BUFFER9_ATI #x882e)
(define-constant GL_DRAW_BUFFER10_ATI #x882f)
(define-constant GL_DRAW_BUFFER11_ATI #x8830)
(define-constant GL_DRAW_BUFFER12_ATI #x8831)
(define-constant GL_DRAW_BUFFER13_ATI #x8832)
(define-constant GL_DRAW_BUFFER14_ATI #x8833)
(define-constant GL_DRAW_BUFFER15_ATI #x8834)
(define-constant GL_ELEMENT_ARRAY_ATI #x8768)
(define-constant GL_ELEMENT_ARRAY_TYPE_ATI #x8769)
(define-constant GL_ELEMENT_ARRAY_POINTER_ATI #x876a)
(define-constant GL_BUMP_ROT_MATRIX_ATI #x8775)
(define-constant GL_BUMP_ROT_MATRIX_SIZE_ATI #x8776)
(define-constant GL_BUMP_NUM_TEX_UNITS_ATI #x8777)
(define-constant GL_BUMP_TEX_UNITS_ATI #x8778)
(define-constant GL_DUDV_ATI #x8779)
(define-constant GL_DU8DV8_ATI #x877a)
(define-constant GL_BUMP_ENVMAP_ATI #x877b)
(define-constant GL_BUMP_TARGET_ATI #x877c)
(define-constant GL_FRAGMENT_SHADER_ATI #x8920)
(define-constant GL_REG_0_ATI #x8921)
(define-constant GL_REG_1_ATI #x8922)
(define-constant GL_REG_2_ATI #x8923)
(define-constant GL_REG_3_ATI #x8924)
(define-constant GL_REG_4_ATI #x8925)
(define-constant GL_REG_5_ATI #x8926)
(define-constant GL_REG_6_ATI #x8927)
(define-constant GL_REG_7_ATI #x8928)
(define-constant GL_REG_8_ATI #x8929)
(define-constant GL_REG_9_ATI #x892a)
(define-constant GL_REG_10_ATI #x892b)
(define-constant GL_REG_11_ATI #x892c)
(define-constant GL_REG_12_ATI #x892d)
(define-constant GL_REG_13_ATI #x892e)
(define-constant GL_REG_14_ATI #x892f)
(define-constant GL_REG_15_ATI #x8930)
(define-constant GL_REG_16_ATI #x8931)
(define-constant GL_REG_17_ATI #x8932)
(define-constant GL_REG_18_ATI #x8933)
(define-constant GL_REG_19_ATI #x8934)
(define-constant GL_REG_20_ATI #x8935)
(define-constant GL_REG_21_ATI #x8936)
(define-constant GL_REG_22_ATI #x8937)
(define-constant GL_REG_23_ATI #x8938)
(define-constant GL_REG_24_ATI #x8939)
(define-constant GL_REG_25_ATI #x893a)
(define-constant GL_REG_26_ATI #x893b)
(define-constant GL_REG_27_ATI #x893c)
(define-constant GL_REG_28_ATI #x893d)
(define-constant GL_REG_29_ATI #x893e)
(define-constant GL_REG_30_ATI #x893f)
(define-constant GL_REG_31_ATI #x8940)
(define-constant GL_CON_0_ATI #x8941)
(define-constant GL_CON_1_ATI #x8942)
(define-constant GL_CON_2_ATI #x8943)
(define-constant GL_CON_3_ATI #x8944)
(define-constant GL_CON_4_ATI #x8945)
(define-constant GL_CON_5_ATI #x8946)
(define-constant GL_CON_6_ATI #x8947)
(define-constant GL_CON_7_ATI #x8948)
(define-constant GL_CON_8_ATI #x8949)
(define-constant GL_CON_9_ATI #x894a)
(define-constant GL_CON_10_ATI #x894b)
(define-constant GL_CON_11_ATI #x894c)
(define-constant GL_CON_12_ATI #x894d)
(define-constant GL_CON_13_ATI #x894e)
(define-constant GL_CON_14_ATI #x894f)
(define-constant GL_CON_15_ATI #x8950)
(define-constant GL_CON_16_ATI #x8951)
(define-constant GL_CON_17_ATI #x8952)
(define-constant GL_CON_18_ATI #x8953)
(define-constant GL_CON_19_ATI #x8954)
(define-constant GL_CON_20_ATI #x8955)
(define-constant GL_CON_21_ATI #x8956)
(define-constant GL_CON_22_ATI #x8957)
(define-constant GL_CON_23_ATI #x8958)
(define-constant GL_CON_24_ATI #x8959)
(define-constant GL_CON_25_ATI #x895a)
(define-constant GL_CON_26_ATI #x895b)
(define-constant GL_CON_27_ATI #x895c)
(define-constant GL_CON_28_ATI #x895d)
(define-constant GL_CON_29_ATI #x895e)
(define-constant GL_CON_30_ATI #x895f)
(define-constant GL_CON_31_ATI #x8960)
(define-constant GL_MOV_ATI #x8961)
(define-constant GL_ADD_ATI #x8963)
(define-constant GL_MUL_ATI #x8964)
(define-constant GL_SUB_ATI #x8965)
(define-constant GL_DOT3_ATI #x8966)
(define-constant GL_DOT4_ATI #x8967)
(define-constant GL_MAD_ATI #x8968)
(define-constant GL_LERP_ATI #x8969)
(define-constant GL_CND_ATI #x896a)
(define-constant GL_CND0_ATI #x896b)
(define-constant GL_DOT2_ADD_ATI #x896c)
(define-constant GL_SECONDARY_INTERPOLATOR_ATI #x896d)
(define-constant GL_NUM_FRAGMENT_REGISTERS_ATI #x896e)
(define-constant GL_NUM_FRAGMENT_CONSTANTS_ATI #x896f)
(define-constant GL_NUM_PASSES_ATI #x8970)
(define-constant GL_NUM_INSTRUCTIONS_PER_PASS_ATI #x8971)
(define-constant GL_NUM_INSTRUCTIONS_TOTAL_ATI #x8972)
(define-constant GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI #x8973)
(define-constant GL_NUM_LOOPBACK_COMPONENTS_ATI #x8974)
(define-constant GL_COLOR_ALPHA_PAIRING_ATI #x8975)
(define-constant GL_SWIZZLE_STR_ATI #x8976)
(define-constant GL_SWIZZLE_STQ_ATI #x8977)
(define-constant GL_SWIZZLE_STR_DR_ATI #x8978)
(define-constant GL_SWIZZLE_STQ_DQ_ATI #x8979)
(define-constant GL_SWIZZLE_STRQ_ATI #x897a)
(define-constant GL_SWIZZLE_STRQ_DQ_ATI #x897b)
(define-constant GL_RED_BIT_ATI #x0001)
(define-constant GL_GREEN_BIT_ATI #x0002)
(define-constant GL_BLUE_BIT_ATI #x0004)
(define-constant GL_2X_BIT_ATI #x0001)
(define-constant GL_4X_BIT_ATI #x0002)
(define-constant GL_8X_BIT_ATI #x0004)
(define-constant GL_HALF_BIT_ATI #x0008)
(define-constant GL_QUARTER_BIT_ATI #x0010)
(define-constant GL_EIGHTH_BIT_ATI #x0020)
(define-constant GL_SATURATE_BIT_ATI #x0040)
(define-constant GL_COMP_BIT_ATI #x0002)
(define-constant GL_NEGATE_BIT_ATI #x0004)
(define-constant GL_BIAS_BIT_ATI #x0008)
(define-constant GL_VBO_FREE_MEMORY_ATI #x87fb)
(define-constant GL_TEXTURE_FREE_MEMORY_ATI #x87fc)
(define-constant GL_RENDERBUFFER_FREE_MEMORY_ATI #x87fd)
(define-constant GL_RGBA_FLOAT_MODE_ATI #x8820)
(define-constant GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI #x8835)
(define-constant GL_PN_TRIANGLES_ATI #x87f0)
(define-constant GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI #x87f1)
(define-constant GL_PN_TRIANGLES_POINT_MODE_ATI #x87f2)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_ATI #x87f3)
(define-constant GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI #x87f4)
(define-constant GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI #x87f5)
(define-constant GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI #x87f6)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI #x87f7)
(define-constant GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI #x87f8)
(define-constant GL_STENCIL_BACK_FUNC_ATI #x8800)
(define-constant GL_STENCIL_BACK_FAIL_ATI #x8801)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI #x8802)
(define-constant GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI #x8803)
(define-constant GL_TEXT_FRAGMENT_SHADER_ATI #x8200)
(define-constant GL_MODULATE_ADD_ATI #x8744)
(define-constant GL_MODULATE_SIGNED_ADD_ATI #x8745)
(define-constant GL_MODULATE_SUBTRACT_ATI #x8746)
(define-constant GL_RGBA_FLOAT32_ATI #x8814)
(define-constant GL_RGB_FLOAT32_ATI #x8815)
(define-constant GL_ALPHA_FLOAT32_ATI #x8816)
(define-constant GL_INTENSITY_FLOAT32_ATI #x8817)
(define-constant GL_LUMINANCE_FLOAT32_ATI #x8818)
(define-constant GL_LUMINANCE_ALPHA_FLOAT32_ATI #x8819)
(define-constant GL_RGBA_FLOAT16_ATI #x881a)
(define-constant GL_RGB_FLOAT16_ATI #x881b)
(define-constant GL_ALPHA_FLOAT16_ATI #x881c)
(define-constant GL_INTENSITY_FLOAT16_ATI #x881d)
(define-constant GL_LUMINANCE_FLOAT16_ATI #x881e)
(define-constant GL_LUMINANCE_ALPHA_FLOAT16_ATI #x881f)
(define-constant GL_MIRROR_CLAMP_ATI #x8742)
(define-constant GL_MIRROR_CLAMP_TO_EDGE_ATI #x8743)
(define-constant GL_STATIC_ATI #x8760)
(define-constant GL_DYNAMIC_ATI #x8761)
(define-constant GL_PRESERVE_ATI #x8762)
(define-constant GL_DISCARD_ATI #x8763)
(define-constant GL_OBJECT_BUFFER_SIZE_ATI #x8764)
(define-constant GL_OBJECT_BUFFER_USAGE_ATI #x8765)
(define-constant GL_ARRAY_OBJECT_BUFFER_ATI #x8766)
(define-constant GL_ARRAY_OBJECT_OFFSET_ATI #x8767)
(define-constant GL_MAX_VERTEX_STREAMS_ATI #x876b)
(define-constant GL_VERTEX_STREAM0_ATI #x876c)
(define-constant GL_VERTEX_STREAM1_ATI #x876d)
(define-constant GL_VERTEX_STREAM2_ATI #x876e)
(define-constant GL_VERTEX_STREAM3_ATI #x876f)
(define-constant GL_VERTEX_STREAM4_ATI #x8770)
(define-constant GL_VERTEX_STREAM5_ATI #x8771)
(define-constant GL_VERTEX_STREAM6_ATI #x8772)
(define-constant GL_VERTEX_STREAM7_ATI #x8773)
(define-constant GL_VERTEX_SOURCE_ATI #x8774)
(define-constant GL_422_EXT #x80cc)
(define-constant GL_422_REV_EXT #x80cd)
(define-constant GL_422_AVERAGE_EXT #x80ce)
(define-constant GL_422_REV_AVERAGE_EXT #x80cf)
(define-constant GL_ABGR_EXT #x8000)
(define-constant GL_BGR_EXT #x80e0)
(define-constant GL_BGRA_EXT #x80e1)
(define-constant GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT #x8de2)
(define-constant GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT #x8de3)
(define-constant GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT #x8de4)
(define-constant GL_MAX_BINDABLE_UNIFORM_SIZE_EXT #x8ded)
(define-constant GL_UNIFORM_BUFFER_EXT #x8dee)
(define-constant GL_UNIFORM_BUFFER_BINDING_EXT #x8def)
(define-constant GL_CONSTANT_COLOR_EXT #x8001)
(define-constant GL_ONE_MINUS_CONSTANT_COLOR_EXT #x8002)
(define-constant GL_CONSTANT_ALPHA_EXT #x8003)
(define-constant GL_ONE_MINUS_CONSTANT_ALPHA_EXT #x8004)
(define-constant GL_BLEND_COLOR_EXT #x8005)
(define-constant GL_BLEND_EQUATION_RGB_EXT #x8009)
(define-constant GL_BLEND_EQUATION_ALPHA_EXT #x883d)
(define-constant GL_BLEND_DST_RGB_EXT #x80c8)
(define-constant GL_BLEND_SRC_RGB_EXT #x80c9)
(define-constant GL_BLEND_DST_ALPHA_EXT #x80ca)
(define-constant GL_BLEND_SRC_ALPHA_EXT #x80cb)
(define-constant GL_MIN_EXT #x8007)
(define-constant GL_MAX_EXT #x8008)
(define-constant GL_FUNC_ADD_EXT #x8006)
(define-constant GL_BLEND_EQUATION_EXT #x8009)
(define-constant GL_FUNC_SUBTRACT_EXT #x800a)
(define-constant GL_FUNC_REVERSE_SUBTRACT_EXT #x800b)
(define-constant GL_CLIP_VOLUME_CLIPPING_HINT_EXT #x80f0)
(define-constant GL_CMYK_EXT #x800c)
(define-constant GL_CMYKA_EXT #x800d)
(define-constant GL_PACK_CMYK_HINT_EXT #x800e)
(define-constant GL_UNPACK_CMYK_HINT_EXT #x800f)
(define-constant GL_ARRAY_ELEMENT_LOCK_FIRST_EXT #x81a8)
(define-constant GL_ARRAY_ELEMENT_LOCK_COUNT_EXT #x81a9)
(define-constant GL_CONVOLUTION_1D_EXT #x8010)
(define-constant GL_CONVOLUTION_2D_EXT #x8011)
(define-constant GL_SEPARABLE_2D_EXT #x8012)
(define-constant GL_CONVOLUTION_BORDER_MODE_EXT #x8013)
(define-constant GL_CONVOLUTION_FILTER_SCALE_EXT #x8014)
(define-constant GL_CONVOLUTION_FILTER_BIAS_EXT #x8015)
(define-constant GL_REDUCE_EXT #x8016)
(define-constant GL_CONVOLUTION_FORMAT_EXT #x8017)
(define-constant GL_CONVOLUTION_WIDTH_EXT #x8018)
(define-constant GL_CONVOLUTION_HEIGHT_EXT #x8019)
(define-constant GL_MAX_CONVOLUTION_WIDTH_EXT #x801a)
(define-constant GL_MAX_CONVOLUTION_HEIGHT_EXT #x801b)
(define-constant GL_POST_CONVOLUTION_RED_SCALE_EXT #x801c)
(define-constant GL_POST_CONVOLUTION_GREEN_SCALE_EXT #x801d)
(define-constant GL_POST_CONVOLUTION_BLUE_SCALE_EXT #x801e)
(define-constant GL_POST_CONVOLUTION_ALPHA_SCALE_EXT #x801f)
(define-constant GL_POST_CONVOLUTION_RED_BIAS_EXT #x8020)
(define-constant GL_POST_CONVOLUTION_GREEN_BIAS_EXT #x8021)
(define-constant GL_POST_CONVOLUTION_BLUE_BIAS_EXT #x8022)
(define-constant GL_POST_CONVOLUTION_ALPHA_BIAS_EXT #x8023)
(define-constant GL_TANGENT_ARRAY_EXT #x8439)
(define-constant GL_BINORMAL_ARRAY_EXT #x843a)
(define-constant GL_CURRENT_TANGENT_EXT #x843b)
(define-constant GL_CURRENT_BINORMAL_EXT #x843c)
(define-constant GL_TANGENT_ARRAY_TYPE_EXT #x843e)
(define-constant GL_TANGENT_ARRAY_STRIDE_EXT #x843f)
(define-constant GL_BINORMAL_ARRAY_TYPE_EXT #x8440)
(define-constant GL_BINORMAL_ARRAY_STRIDE_EXT #x8441)
(define-constant GL_TANGENT_ARRAY_POINTER_EXT #x8442)
(define-constant GL_BINORMAL_ARRAY_POINTER_EXT #x8443)
(define-constant GL_MAP1_TANGENT_EXT #x8444)
(define-constant GL_MAP2_TANGENT_EXT #x8445)
(define-constant GL_MAP1_BINORMAL_EXT #x8446)
(define-constant GL_MAP2_BINORMAL_EXT #x8447)
(define-constant GL_CULL_VERTEX_EXT #x81aa)
(define-constant GL_CULL_VERTEX_EYE_POSITION_EXT #x81ab)
(define-constant GL_CULL_VERTEX_OBJECT_POSITION_EXT #x81ac)
(define-constant GL_PROGRAM_PIPELINE_OBJECT_EXT #x8a4f)
(define-constant GL_PROGRAM_OBJECT_EXT #x8b40)
(define-constant GL_SHADER_OBJECT_EXT #x8b48)
(define-constant GL_BUFFER_OBJECT_EXT #x9151)
(define-constant GL_QUERY_OBJECT_EXT #x9153)
(define-constant GL_VERTEX_ARRAY_OBJECT_EXT #x9154)
(define-constant GL_DEPTH_BOUNDS_TEST_EXT #x8890)
(define-constant GL_DEPTH_BOUNDS_EXT #x8891)
(define-constant GL_PROGRAM_MATRIX_EXT #x8e2d)
(define-constant GL_TRANSPOSE_PROGRAM_MATRIX_EXT #x8e2e)
(define-constant GL_PROGRAM_MATRIX_STACK_DEPTH_EXT #x8e2f)
(define-constant GL_MAX_ELEMENTS_VERTICES_EXT #x80e8)
(define-constant GL_MAX_ELEMENTS_INDICES_EXT #x80e9)
(define-constant GL_FOG_COORDINATE_SOURCE_EXT #x8450)
(define-constant GL_FOG_COORDINATE_EXT #x8451)
(define-constant GL_FRAGMENT_DEPTH_EXT #x8452)
(define-constant GL_CURRENT_FOG_COORDINATE_EXT #x8453)
(define-constant GL_FOG_COORDINATE_ARRAY_TYPE_EXT #x8454)
(define-constant GL_FOG_COORDINATE_ARRAY_STRIDE_EXT #x8455)
(define-constant GL_FOG_COORDINATE_ARRAY_POINTER_EXT #x8456)
(define-constant GL_FOG_COORDINATE_ARRAY_EXT #x8457)
(define-constant GL_READ_FRAMEBUFFER_EXT #x8ca8)
(define-constant GL_DRAW_FRAMEBUFFER_EXT #x8ca9)
(define-constant GL_DRAW_FRAMEBUFFER_BINDING_EXT #x8ca6)
(define-constant GL_READ_FRAMEBUFFER_BINDING_EXT #x8caa)
(define-constant GL_RENDERBUFFER_SAMPLES_EXT #x8cab)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT #x8d56)
(define-constant GL_MAX_SAMPLES_EXT #x8d57)
(define-constant GL_SCALED_RESOLVE_FASTEST_EXT #x90ba)
(define-constant GL_SCALED_RESOLVE_NICEST_EXT #x90bb)
(define-constant GL_INVALID_FRAMEBUFFER_OPERATION_EXT #x0506)
(define-constant GL_MAX_RENDERBUFFER_SIZE_EXT #x84e8)
(define-constant GL_FRAMEBUFFER_BINDING_EXT #x8ca6)
(define-constant GL_RENDERBUFFER_BINDING_EXT #x8ca7)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT #x8cd0)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT #x8cd1)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT #x8cd2)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT #x8cd3)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT #x8cd4)
(define-constant GL_FRAMEBUFFER_COMPLETE_EXT #x8cd5)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT #x8cd6)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT #x8cd7)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT #x8cd9)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT #x8cda)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT #x8cdb)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT #x8cdc)
(define-constant GL_FRAMEBUFFER_UNSUPPORTED_EXT #x8cdd)
(define-constant GL_MAX_COLOR_ATTACHMENTS_EXT #x8cdf)
(define-constant GL_COLOR_ATTACHMENT0_EXT #x8ce0)
(define-constant GL_COLOR_ATTACHMENT1_EXT #x8ce1)
(define-constant GL_COLOR_ATTACHMENT2_EXT #x8ce2)
(define-constant GL_COLOR_ATTACHMENT3_EXT #x8ce3)
(define-constant GL_COLOR_ATTACHMENT4_EXT #x8ce4)
(define-constant GL_COLOR_ATTACHMENT5_EXT #x8ce5)
(define-constant GL_COLOR_ATTACHMENT6_EXT #x8ce6)
(define-constant GL_COLOR_ATTACHMENT7_EXT #x8ce7)
(define-constant GL_COLOR_ATTACHMENT8_EXT #x8ce8)
(define-constant GL_COLOR_ATTACHMENT9_EXT #x8ce9)
(define-constant GL_COLOR_ATTACHMENT10_EXT #x8cea)
(define-constant GL_COLOR_ATTACHMENT11_EXT #x8ceb)
(define-constant GL_COLOR_ATTACHMENT12_EXT #x8cec)
(define-constant GL_COLOR_ATTACHMENT13_EXT #x8ced)
(define-constant GL_COLOR_ATTACHMENT14_EXT #x8cee)
(define-constant GL_COLOR_ATTACHMENT15_EXT #x8cef)
(define-constant GL_DEPTH_ATTACHMENT_EXT #x8d00)
(define-constant GL_STENCIL_ATTACHMENT_EXT #x8d20)
(define-constant GL_FRAMEBUFFER_EXT #x8d40)
(define-constant GL_RENDERBUFFER_EXT #x8d41)
(define-constant GL_RENDERBUFFER_WIDTH_EXT #x8d42)
(define-constant GL_RENDERBUFFER_HEIGHT_EXT #x8d43)
(define-constant GL_RENDERBUFFER_INTERNAL_FORMAT_EXT #x8d44)
(define-constant GL_STENCIL_INDEX1_EXT #x8d46)
(define-constant GL_STENCIL_INDEX4_EXT #x8d47)
(define-constant GL_STENCIL_INDEX8_EXT #x8d48)
(define-constant GL_STENCIL_INDEX16_EXT #x8d49)
(define-constant GL_RENDERBUFFER_RED_SIZE_EXT #x8d50)
(define-constant GL_RENDERBUFFER_GREEN_SIZE_EXT #x8d51)
(define-constant GL_RENDERBUFFER_BLUE_SIZE_EXT #x8d52)
(define-constant GL_RENDERBUFFER_ALPHA_SIZE_EXT #x8d53)
(define-constant GL_RENDERBUFFER_DEPTH_SIZE_EXT #x8d54)
(define-constant GL_RENDERBUFFER_STENCIL_SIZE_EXT #x8d55)
(define-constant GL_FRAMEBUFFER_SRGB_EXT #x8db9)
(define-constant GL_FRAMEBUFFER_SRGB_CAPABLE_EXT #x8dba)
(define-constant GL_GEOMETRY_SHADER_EXT #x8dd9)
(define-constant GL_GEOMETRY_VERTICES_OUT_EXT #x8dda)
(define-constant GL_GEOMETRY_INPUT_TYPE_EXT #x8ddb)
(define-constant GL_GEOMETRY_OUTPUT_TYPE_EXT #x8ddc)
(define-constant GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT #x8c29)
(define-constant GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT #x8ddd)
(define-constant GL_MAX_VERTEX_VARYING_COMPONENTS_EXT #x8dde)
(define-constant GL_MAX_VARYING_COMPONENTS_EXT #x8b4b)
(define-constant GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT #x8ddf)
(define-constant GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT #x8de0)
(define-constant GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT #x8de1)
(define-constant GL_LINES_ADJACENCY_EXT #x000a)
(define-constant GL_LINE_STRIP_ADJACENCY_EXT #x000b)
(define-constant GL_TRIANGLES_ADJACENCY_EXT #x000c)
(define-constant GL_TRIANGLE_STRIP_ADJACENCY_EXT #x000d)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT #x8da8)
(define-constant GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT #x8da9)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT #x8da7)
(define-constant GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT #x8cd4)
(define-constant GL_PROGRAM_POINT_SIZE_EXT #x8642)
(define-constant GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT #x88fd)
(define-constant GL_SAMPLER_1D_ARRAY_EXT #x8dc0)
(define-constant GL_SAMPLER_2D_ARRAY_EXT #x8dc1)
(define-constant GL_SAMPLER_BUFFER_EXT #x8dc2)
(define-constant GL_SAMPLER_1D_ARRAY_SHADOW_EXT #x8dc3)
(define-constant GL_SAMPLER_2D_ARRAY_SHADOW_EXT #x8dc4)
(define-constant GL_SAMPLER_CUBE_SHADOW_EXT #x8dc5)
(define-constant GL_UNSIGNED_INT_VEC2_EXT #x8dc6)
(define-constant GL_UNSIGNED_INT_VEC3_EXT #x8dc7)
(define-constant GL_UNSIGNED_INT_VEC4_EXT #x8dc8)
(define-constant GL_INT_SAMPLER_1D_EXT #x8dc9)
(define-constant GL_INT_SAMPLER_2D_EXT #x8dca)
(define-constant GL_INT_SAMPLER_3D_EXT #x8dcb)
(define-constant GL_INT_SAMPLER_CUBE_EXT #x8dcc)
(define-constant GL_INT_SAMPLER_2D_RECT_EXT #x8dcd)
(define-constant GL_INT_SAMPLER_1D_ARRAY_EXT #x8dce)
(define-constant GL_INT_SAMPLER_2D_ARRAY_EXT #x8dcf)
(define-constant GL_INT_SAMPLER_BUFFER_EXT #x8dd0)
(define-constant GL_UNSIGNED_INT_SAMPLER_1D_EXT #x8dd1)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_EXT #x8dd2)
(define-constant GL_UNSIGNED_INT_SAMPLER_3D_EXT #x8dd3)
(define-constant GL_UNSIGNED_INT_SAMPLER_CUBE_EXT #x8dd4)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT #x8dd5)
(define-constant GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT #x8dd6)
(define-constant GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT #x8dd7)
(define-constant GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT #x8dd8)
(define-constant GL_MIN_PROGRAM_TEXEL_OFFSET_EXT #x8904)
(define-constant GL_MAX_PROGRAM_TEXEL_OFFSET_EXT #x8905)
(define-constant GL_HISTOGRAM_EXT #x8024)
(define-constant GL_PROXY_HISTOGRAM_EXT #x8025)
(define-constant GL_HISTOGRAM_WIDTH_EXT #x8026)
(define-constant GL_HISTOGRAM_FORMAT_EXT #x8027)
(define-constant GL_HISTOGRAM_RED_SIZE_EXT #x8028)
(define-constant GL_HISTOGRAM_GREEN_SIZE_EXT #x8029)
(define-constant GL_HISTOGRAM_BLUE_SIZE_EXT #x802a)
(define-constant GL_HISTOGRAM_ALPHA_SIZE_EXT #x802b)
(define-constant GL_HISTOGRAM_LUMINANCE_SIZE_EXT #x802c)
(define-constant GL_HISTOGRAM_SINK_EXT #x802d)
(define-constant GL_MINMAX_EXT #x802e)
(define-constant GL_MINMAX_FORMAT_EXT #x802f)
(define-constant GL_MINMAX_SINK_EXT #x8030)
(define-constant GL_TABLE_TOO_LARGE_EXT #x8031)
(define-constant GL_IUI_V2F_EXT #x81ad)
(define-constant GL_IUI_V3F_EXT #x81ae)
(define-constant GL_IUI_N3F_V2F_EXT #x81af)
(define-constant GL_IUI_N3F_V3F_EXT #x81b0)
(define-constant GL_T2F_IUI_V2F_EXT #x81b1)
(define-constant GL_T2F_IUI_V3F_EXT #x81b2)
(define-constant GL_T2F_IUI_N3F_V2F_EXT #x81b3)
(define-constant GL_T2F_IUI_N3F_V3F_EXT #x81b4)
(define-constant GL_INDEX_TEST_EXT #x81b5)
(define-constant GL_INDEX_TEST_FUNC_EXT #x81b6)
(define-constant GL_INDEX_TEST_REF_EXT #x81b7)
(define-constant GL_INDEX_MATERIAL_EXT #x81b8)
(define-constant GL_INDEX_MATERIAL_PARAMETER_EXT #x81b9)
(define-constant GL_INDEX_MATERIAL_FACE_EXT #x81ba)
(define-constant GL_FRAGMENT_MATERIAL_EXT #x8349)
(define-constant GL_FRAGMENT_NORMAL_EXT #x834a)
(define-constant GL_FRAGMENT_COLOR_EXT #x834c)
(define-constant GL_ATTENUATION_EXT #x834d)
(define-constant GL_SHADOW_ATTENUATION_EXT #x834e)
(define-constant GL_TEXTURE_APPLICATION_MODE_EXT #x834f)
(define-constant GL_TEXTURE_LIGHT_EXT #x8350)
(define-constant GL_TEXTURE_MATERIAL_FACE_EXT #x8351)
(define-constant GL_TEXTURE_MATERIAL_PARAMETER_EXT #x8352)
(define-constant GL_MULTISAMPLE_EXT #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_MASK_EXT #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_EXT #x809f)
(define-constant GL_SAMPLE_MASK_EXT #x80a0)
(define-constant GL_1PASS_EXT #x80a1)
(define-constant GL_2PASS_0_EXT #x80a2)
(define-constant GL_2PASS_1_EXT #x80a3)
(define-constant GL_4PASS_0_EXT #x80a4)
(define-constant GL_4PASS_1_EXT #x80a5)
(define-constant GL_4PASS_2_EXT #x80a6)
(define-constant GL_4PASS_3_EXT #x80a7)
(define-constant GL_SAMPLE_BUFFERS_EXT #x80a8)
(define-constant GL_SAMPLES_EXT #x80a9)
(define-constant GL_SAMPLE_MASK_VALUE_EXT #x80aa)
(define-constant GL_SAMPLE_MASK_INVERT_EXT #x80ab)
(define-constant GL_SAMPLE_PATTERN_EXT #x80ac)
(define-constant GL_MULTISAMPLE_BIT_EXT #x20000000)
(define-constant GL_DEPTH_STENCIL_EXT #x84f9)
(define-constant GL_UNSIGNED_INT_24_8_EXT #x84fa)
(define-constant GL_DEPTH24_STENCIL8_EXT #x88f0)
(define-constant GL_TEXTURE_STENCIL_SIZE_EXT #x88f1)
(define-constant GL_R11F_G11F_B10F_EXT #x8c3a)
(define-constant GL_UNSIGNED_INT_10F_11F_11F_REV_EXT #x8c3b)
(define-constant GL_RGBA_SIGNED_COMPONENTS_EXT #x8c3c)
(define-constant GL_UNSIGNED_BYTE_3_3_2_EXT #x8032)
(define-constant GL_UNSIGNED_SHORT_4_4_4_4_EXT #x8033)
(define-constant GL_UNSIGNED_SHORT_5_5_5_1_EXT #x8034)
(define-constant GL_UNSIGNED_INT_8_8_8_8_EXT #x8035)
(define-constant GL_UNSIGNED_INT_10_10_10_2_EXT #x8036)
(define-constant GL_COLOR_INDEX1_EXT #x80e2)
(define-constant GL_COLOR_INDEX2_EXT #x80e3)
(define-constant GL_COLOR_INDEX4_EXT #x80e4)
(define-constant GL_COLOR_INDEX8_EXT #x80e5)
(define-constant GL_COLOR_INDEX12_EXT #x80e6)
(define-constant GL_COLOR_INDEX16_EXT #x80e7)
(define-constant GL_TEXTURE_INDEX_SIZE_EXT #x80ed)
(define-constant GL_PIXEL_PACK_BUFFER_EXT #x88eb)
(define-constant GL_PIXEL_UNPACK_BUFFER_EXT #x88ec)
(define-constant GL_PIXEL_PACK_BUFFER_BINDING_EXT #x88ed)
(define-constant GL_PIXEL_UNPACK_BUFFER_BINDING_EXT #x88ef)
(define-constant GL_PIXEL_TRANSFORM_2D_EXT #x8330)
(define-constant GL_PIXEL_MAG_FILTER_EXT #x8331)
(define-constant GL_PIXEL_MIN_FILTER_EXT #x8332)
(define-constant GL_PIXEL_CUBIC_WEIGHT_EXT #x8333)
(define-constant GL_CUBIC_EXT #x8334)
(define-constant GL_AVERAGE_EXT #x8335)
(define-constant GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT #x8336)
(define-constant GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT #x8337)
(define-constant GL_PIXEL_TRANSFORM_2D_MATRIX_EXT #x8338)
(define-constant GL_POINT_SIZE_MIN_EXT #x8126)
(define-constant GL_POINT_SIZE_MAX_EXT #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_EXT #x8128)
(define-constant GL_DISTANCE_ATTENUATION_EXT #x8129)
(define-constant GL_POLYGON_OFFSET_EXT #x8037)
(define-constant GL_POLYGON_OFFSET_FACTOR_EXT #x8038)
(define-constant GL_POLYGON_OFFSET_BIAS_EXT #x8039)
(define-constant GL_POLYGON_OFFSET_CLAMP_EXT #x8e1b)
(define-constant GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT #x8e4c)
(define-constant GL_FIRST_VERTEX_CONVENTION_EXT #x8e4d)
(define-constant GL_LAST_VERTEX_CONVENTION_EXT #x8e4e)
(define-constant GL_PROVOKING_VERTEX_EXT #x8e4f)
(define-constant GL_RASTER_MULTISAMPLE_EXT #x9327)
(define-constant GL_RASTER_SAMPLES_EXT #x9328)
(define-constant GL_MAX_RASTER_SAMPLES_EXT #x9329)
(define-constant GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT #x932a)
(define-constant GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT #x932b)
(define-constant GL_EFFECTIVE_RASTER_SAMPLES_EXT #x932c)
(define-constant GL_RESCALE_NORMAL_EXT #x803a)
(define-constant GL_COLOR_SUM_EXT #x8458)
(define-constant GL_CURRENT_SECONDARY_COLOR_EXT #x8459)
(define-constant GL_SECONDARY_COLOR_ARRAY_SIZE_EXT #x845a)
(define-constant GL_SECONDARY_COLOR_ARRAY_TYPE_EXT #x845b)
(define-constant GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT #x845c)
(define-constant GL_SECONDARY_COLOR_ARRAY_POINTER_EXT #x845d)
(define-constant GL_SECONDARY_COLOR_ARRAY_EXT #x845e)
(define-constant GL_ACTIVE_PROGRAM_EXT #x8b8d)
(define-constant GL_LIGHT_MODEL_COLOR_CONTROL_EXT #x81f8)
(define-constant GL_SINGLE_COLOR_EXT #x81f9)
(define-constant GL_SEPARATE_SPECULAR_COLOR_EXT #x81fa)
(define-constant GL_MAX_IMAGE_UNITS_EXT #x8f38)
(define-constant GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT #x8f39)
(define-constant GL_IMAGE_BINDING_NAME_EXT #x8f3a)
(define-constant GL_IMAGE_BINDING_LEVEL_EXT #x8f3b)
(define-constant GL_IMAGE_BINDING_LAYERED_EXT #x8f3c)
(define-constant GL_IMAGE_BINDING_LAYER_EXT #x8f3d)
(define-constant GL_IMAGE_BINDING_ACCESS_EXT #x8f3e)
(define-constant GL_IMAGE_1D_EXT #x904c)
(define-constant GL_IMAGE_2D_EXT #x904d)
(define-constant GL_IMAGE_3D_EXT #x904e)
(define-constant GL_IMAGE_2D_RECT_EXT #x904f)
(define-constant GL_IMAGE_CUBE_EXT #x9050)
(define-constant GL_IMAGE_BUFFER_EXT #x9051)
(define-constant GL_IMAGE_1D_ARRAY_EXT #x9052)
(define-constant GL_IMAGE_2D_ARRAY_EXT #x9053)
(define-constant GL_IMAGE_CUBE_MAP_ARRAY_EXT #x9054)
(define-constant GL_IMAGE_2D_MULTISAMPLE_EXT #x9055)
(define-constant GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT #x9056)
(define-constant GL_INT_IMAGE_1D_EXT #x9057)
(define-constant GL_INT_IMAGE_2D_EXT #x9058)
(define-constant GL_INT_IMAGE_3D_EXT #x9059)
(define-constant GL_INT_IMAGE_2D_RECT_EXT #x905a)
(define-constant GL_INT_IMAGE_CUBE_EXT #x905b)
(define-constant GL_INT_IMAGE_BUFFER_EXT #x905c)
(define-constant GL_INT_IMAGE_1D_ARRAY_EXT #x905d)
(define-constant GL_INT_IMAGE_2D_ARRAY_EXT #x905e)
(define-constant GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT #x905f)
(define-constant GL_INT_IMAGE_2D_MULTISAMPLE_EXT #x9060)
(define-constant GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT #x9061)
(define-constant GL_UNSIGNED_INT_IMAGE_1D_EXT #x9062)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_EXT #x9063)
(define-constant GL_UNSIGNED_INT_IMAGE_3D_EXT #x9064)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT #x9065)
(define-constant GL_UNSIGNED_INT_IMAGE_CUBE_EXT #x9066)
(define-constant GL_UNSIGNED_INT_IMAGE_BUFFER_EXT #x9067)
(define-constant GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT #x9068)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT #x9069)
(define-constant GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT #x906a)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT #x906b)
(define-constant GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT #x906c)
(define-constant GL_MAX_IMAGE_SAMPLES_EXT #x906d)
(define-constant GL_IMAGE_BINDING_FORMAT_EXT #x906e)
(define-constant GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT #x0001)
(define-constant GL_ELEMENT_ARRAY_BARRIER_BIT_EXT #x0002)
(define-constant GL_UNIFORM_BARRIER_BIT_EXT #x0004)
(define-constant GL_TEXTURE_FETCH_BARRIER_BIT_EXT #x0008)
(define-constant GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT #x0020)
(define-constant GL_COMMAND_BARRIER_BIT_EXT #x0040)
(define-constant GL_PIXEL_BUFFER_BARRIER_BIT_EXT #x0080)
(define-constant GL_TEXTURE_UPDATE_BARRIER_BIT_EXT #x0100)
(define-constant GL_BUFFER_UPDATE_BARRIER_BIT_EXT #x0200)
(define-constant GL_FRAMEBUFFER_BARRIER_BIT_EXT #x0400)
(define-constant GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT #x0800)
(define-constant GL_ATOMIC_COUNTER_BARRIER_BIT_EXT #x1000)
(define-constant GL_ALL_BARRIER_BITS_EXT #xffffffff)
(define-constant GL_SHARED_TEXTURE_PALETTE_EXT #x81fb)
(define-constant GL_STENCIL_TAG_BITS_EXT #x88f2)
(define-constant GL_STENCIL_CLEAR_TAG_VALUE_EXT #x88f3)
(define-constant GL_STENCIL_TEST_TWO_SIDE_EXT #x8910)
(define-constant GL_ACTIVE_STENCIL_FACE_EXT #x8911)
(define-constant GL_INCR_WRAP_EXT #x8507)
(define-constant GL_DECR_WRAP_EXT #x8508)
(define-constant GL_ALPHA4_EXT #x803b)
(define-constant GL_ALPHA8_EXT #x803c)
(define-constant GL_ALPHA12_EXT #x803d)
(define-constant GL_ALPHA16_EXT #x803e)
(define-constant GL_LUMINANCE4_EXT #x803f)
(define-constant GL_LUMINANCE8_EXT #x8040)
(define-constant GL_LUMINANCE12_EXT #x8041)
(define-constant GL_LUMINANCE16_EXT #x8042)
(define-constant GL_LUMINANCE4_ALPHA4_EXT #x8043)
(define-constant GL_LUMINANCE6_ALPHA2_EXT #x8044)
(define-constant GL_LUMINANCE8_ALPHA8_EXT #x8045)
(define-constant GL_LUMINANCE12_ALPHA4_EXT #x8046)
(define-constant GL_LUMINANCE12_ALPHA12_EXT #x8047)
(define-constant GL_LUMINANCE16_ALPHA16_EXT #x8048)
(define-constant GL_INTENSITY_EXT #x8049)
(define-constant GL_INTENSITY4_EXT #x804a)
(define-constant GL_INTENSITY8_EXT #x804b)
(define-constant GL_INTENSITY12_EXT #x804c)
(define-constant GL_INTENSITY16_EXT #x804d)
(define-constant GL_RGB2_EXT #x804e)
(define-constant GL_RGB4_EXT #x804f)
(define-constant GL_RGB5_EXT #x8050)
(define-constant GL_RGB8_EXT #x8051)
(define-constant GL_RGB10_EXT #x8052)
(define-constant GL_RGB12_EXT #x8053)
(define-constant GL_RGB16_EXT #x8054)
(define-constant GL_RGBA2_EXT #x8055)
(define-constant GL_RGBA4_EXT #x8056)
(define-constant GL_RGB5_A1_EXT #x8057)
(define-constant GL_RGBA8_EXT #x8058)
(define-constant GL_RGB10_A2_EXT #x8059)
(define-constant GL_RGBA12_EXT #x805a)
(define-constant GL_RGBA16_EXT #x805b)
(define-constant GL_TEXTURE_RED_SIZE_EXT #x805c)
(define-constant GL_TEXTURE_GREEN_SIZE_EXT #x805d)
(define-constant GL_TEXTURE_BLUE_SIZE_EXT #x805e)
(define-constant GL_TEXTURE_ALPHA_SIZE_EXT #x805f)
(define-constant GL_TEXTURE_LUMINANCE_SIZE_EXT #x8060)
(define-constant GL_TEXTURE_INTENSITY_SIZE_EXT #x8061)
(define-constant GL_REPLACE_EXT #x8062)
(define-constant GL_PROXY_TEXTURE_1D_EXT #x8063)
(define-constant GL_PROXY_TEXTURE_2D_EXT #x8064)
(define-constant GL_TEXTURE_TOO_LARGE_EXT #x8065)
(define-constant GL_PACK_SKIP_IMAGES_EXT #x806b)
(define-constant GL_PACK_IMAGE_HEIGHT_EXT #x806c)
(define-constant GL_UNPACK_SKIP_IMAGES_EXT #x806d)
(define-constant GL_UNPACK_IMAGE_HEIGHT_EXT #x806e)
(define-constant GL_TEXTURE_3D_EXT #x806f)
(define-constant GL_PROXY_TEXTURE_3D_EXT #x8070)
(define-constant GL_TEXTURE_DEPTH_EXT #x8071)
(define-constant GL_TEXTURE_WRAP_R_EXT #x8072)
(define-constant GL_MAX_3D_TEXTURE_SIZE_EXT #x8073)
(define-constant GL_TEXTURE_1D_ARRAY_EXT #x8c18)
(define-constant GL_PROXY_TEXTURE_1D_ARRAY_EXT #x8c19)
(define-constant GL_TEXTURE_2D_ARRAY_EXT #x8c1a)
(define-constant GL_PROXY_TEXTURE_2D_ARRAY_EXT #x8c1b)
(define-constant GL_TEXTURE_BINDING_1D_ARRAY_EXT #x8c1c)
(define-constant GL_TEXTURE_BINDING_2D_ARRAY_EXT #x8c1d)
(define-constant GL_MAX_ARRAY_TEXTURE_LAYERS_EXT #x88ff)
(define-constant GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT #x884e)
(define-constant GL_TEXTURE_BUFFER_EXT #x8c2a)
(define-constant GL_MAX_TEXTURE_BUFFER_SIZE_EXT #x8c2b)
(define-constant GL_TEXTURE_BINDING_BUFFER_EXT #x8c2c)
(define-constant GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT #x8c2d)
(define-constant GL_TEXTURE_BUFFER_FORMAT_EXT #x8c2e)
(define-constant GL_COMPRESSED_LUMINANCE_LATC1_EXT #x8c70)
(define-constant GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT #x8c71)
(define-constant GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT #x8c72)
(define-constant GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT #x8c73)
(define-constant GL_COMPRESSED_RED_RGTC1_EXT #x8dbb)
(define-constant GL_COMPRESSED_SIGNED_RED_RGTC1_EXT #x8dbc)
(define-constant GL_COMPRESSED_RED_GREEN_RGTC2_EXT #x8dbd)
(define-constant GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT #x8dbe)
(define-constant GL_COMPRESSED_RGB_S3TC_DXT1_EXT #x83f0)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT1_EXT #x83f1)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT3_EXT #x83f2)
(define-constant GL_COMPRESSED_RGBA_S3TC_DXT5_EXT #x83f3)
(define-constant GL_NORMAL_MAP_EXT #x8511)
(define-constant GL_REFLECTION_MAP_EXT #x8512)
(define-constant GL_TEXTURE_CUBE_MAP_EXT #x8513)
(define-constant GL_TEXTURE_BINDING_CUBE_MAP_EXT #x8514)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT #x8515)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT #x8516)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT #x8517)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT #x8518)
(define-constant GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT #x8519)
(define-constant GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT #x851a)
(define-constant GL_PROXY_TEXTURE_CUBE_MAP_EXT #x851b)
(define-constant GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT #x851c)
(define-constant GL_COMBINE_EXT #x8570)
(define-constant GL_COMBINE_RGB_EXT #x8571)
(define-constant GL_COMBINE_ALPHA_EXT #x8572)
(define-constant GL_RGB_SCALE_EXT #x8573)
(define-constant GL_ADD_SIGNED_EXT #x8574)
(define-constant GL_INTERPOLATE_EXT #x8575)
(define-constant GL_CONSTANT_EXT #x8576)
(define-constant GL_PRIMARY_COLOR_EXT #x8577)
(define-constant GL_PREVIOUS_EXT #x8578)
(define-constant GL_SOURCE0_RGB_EXT #x8580)
(define-constant GL_SOURCE1_RGB_EXT #x8581)
(define-constant GL_SOURCE2_RGB_EXT #x8582)
(define-constant GL_SOURCE0_ALPHA_EXT #x8588)
(define-constant GL_SOURCE1_ALPHA_EXT #x8589)
(define-constant GL_SOURCE2_ALPHA_EXT #x858a)
(define-constant GL_OPERAND0_RGB_EXT #x8590)
(define-constant GL_OPERAND1_RGB_EXT #x8591)
(define-constant GL_OPERAND2_RGB_EXT #x8592)
(define-constant GL_OPERAND0_ALPHA_EXT #x8598)
(define-constant GL_OPERAND1_ALPHA_EXT #x8599)
(define-constant GL_OPERAND2_ALPHA_EXT #x859a)
(define-constant GL_DOT3_RGB_EXT #x8740)
(define-constant GL_DOT3_RGBA_EXT #x8741)
(define-constant GL_TEXTURE_MAX_ANISOTROPY_EXT #x84fe)
(define-constant GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT #x84ff)
(define-constant GL_RGBA32UI_EXT #x8d70)
(define-constant GL_RGB32UI_EXT #x8d71)
(define-constant GL_ALPHA32UI_EXT #x8d72)
(define-constant GL_INTENSITY32UI_EXT #x8d73)
(define-constant GL_LUMINANCE32UI_EXT #x8d74)
(define-constant GL_LUMINANCE_ALPHA32UI_EXT #x8d75)
(define-constant GL_RGBA16UI_EXT #x8d76)
(define-constant GL_RGB16UI_EXT #x8d77)
(define-constant GL_ALPHA16UI_EXT #x8d78)
(define-constant GL_INTENSITY16UI_EXT #x8d79)
(define-constant GL_LUMINANCE16UI_EXT #x8d7a)
(define-constant GL_LUMINANCE_ALPHA16UI_EXT #x8d7b)
(define-constant GL_RGBA8UI_EXT #x8d7c)
(define-constant GL_RGB8UI_EXT #x8d7d)
(define-constant GL_ALPHA8UI_EXT #x8d7e)
(define-constant GL_INTENSITY8UI_EXT #x8d7f)
(define-constant GL_LUMINANCE8UI_EXT #x8d80)
(define-constant GL_LUMINANCE_ALPHA8UI_EXT #x8d81)
(define-constant GL_RGBA32I_EXT #x8d82)
(define-constant GL_RGB32I_EXT #x8d83)
(define-constant GL_ALPHA32I_EXT #x8d84)
(define-constant GL_INTENSITY32I_EXT #x8d85)
(define-constant GL_LUMINANCE32I_EXT #x8d86)
(define-constant GL_LUMINANCE_ALPHA32I_EXT #x8d87)
(define-constant GL_RGBA16I_EXT #x8d88)
(define-constant GL_RGB16I_EXT #x8d89)
(define-constant GL_ALPHA16I_EXT #x8d8a)
(define-constant GL_INTENSITY16I_EXT #x8d8b)
(define-constant GL_LUMINANCE16I_EXT #x8d8c)
(define-constant GL_LUMINANCE_ALPHA16I_EXT #x8d8d)
(define-constant GL_RGBA8I_EXT #x8d8e)
(define-constant GL_RGB8I_EXT #x8d8f)
(define-constant GL_ALPHA8I_EXT #x8d90)
(define-constant GL_INTENSITY8I_EXT #x8d91)
(define-constant GL_LUMINANCE8I_EXT #x8d92)
(define-constant GL_LUMINANCE_ALPHA8I_EXT #x8d93)
(define-constant GL_RED_INTEGER_EXT #x8d94)
(define-constant GL_GREEN_INTEGER_EXT #x8d95)
(define-constant GL_BLUE_INTEGER_EXT #x8d96)
(define-constant GL_ALPHA_INTEGER_EXT #x8d97)
(define-constant GL_RGB_INTEGER_EXT #x8d98)
(define-constant GL_RGBA_INTEGER_EXT #x8d99)
(define-constant GL_BGR_INTEGER_EXT #x8d9a)
(define-constant GL_BGRA_INTEGER_EXT #x8d9b)
(define-constant GL_LUMINANCE_INTEGER_EXT #x8d9c)
(define-constant GL_LUMINANCE_ALPHA_INTEGER_EXT #x8d9d)
(define-constant GL_RGBA_INTEGER_MODE_EXT #x8d9e)
(define-constant GL_MAX_TEXTURE_LOD_BIAS_EXT #x84fd)
(define-constant GL_TEXTURE_FILTER_CONTROL_EXT #x8500)
(define-constant GL_TEXTURE_LOD_BIAS_EXT #x8501)
(define-constant GL_MIRROR_CLAMP_EXT #x8742)
(define-constant GL_MIRROR_CLAMP_TO_EDGE_EXT #x8743)
(define-constant GL_MIRROR_CLAMP_TO_BORDER_EXT #x8912)
(define-constant GL_TEXTURE_PRIORITY_EXT #x8066)
(define-constant GL_TEXTURE_RESIDENT_EXT #x8067)
(define-constant GL_TEXTURE_1D_BINDING_EXT #x8068)
(define-constant GL_TEXTURE_2D_BINDING_EXT #x8069)
(define-constant GL_TEXTURE_3D_BINDING_EXT #x806a)
(define-constant GL_PERTURB_EXT #x85ae)
(define-constant GL_TEXTURE_NORMAL_EXT #x85af)
(define-constant GL_SRGB_EXT #x8c40)
(define-constant GL_SRGB8_EXT #x8c41)
(define-constant GL_SRGB_ALPHA_EXT #x8c42)
(define-constant GL_SRGB8_ALPHA8_EXT #x8c43)
(define-constant GL_SLUMINANCE_ALPHA_EXT #x8c44)
(define-constant GL_SLUMINANCE8_ALPHA8_EXT #x8c45)
(define-constant GL_SLUMINANCE_EXT #x8c46)
(define-constant GL_SLUMINANCE8_EXT #x8c47)
(define-constant GL_COMPRESSED_SRGB_EXT #x8c48)
(define-constant GL_COMPRESSED_SRGB_ALPHA_EXT #x8c49)
(define-constant GL_COMPRESSED_SLUMINANCE_EXT #x8c4a)
(define-constant GL_COMPRESSED_SLUMINANCE_ALPHA_EXT #x8c4b)
(define-constant GL_COMPRESSED_SRGB_S3TC_DXT1_EXT #x8c4c)
(define-constant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT #x8c4d)
(define-constant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT #x8c4e)
(define-constant GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT #x8c4f)
(define-constant GL_TEXTURE_SRGB_DECODE_EXT #x8a48)
(define-constant GL_DECODE_EXT #x8a49)
(define-constant GL_SKIP_DECODE_EXT #x8a4a)
(define-constant GL_RGB9_E5_EXT #x8c3d)
(define-constant GL_UNSIGNED_INT_5_9_9_9_REV_EXT #x8c3e)
(define-constant GL_TEXTURE_SHARED_SIZE_EXT #x8c3f)
(define-constant GL_ALPHA_SNORM #x9010)
(define-constant GL_LUMINANCE_SNORM #x9011)
(define-constant GL_LUMINANCE_ALPHA_SNORM #x9012)
(define-constant GL_INTENSITY_SNORM #x9013)
(define-constant GL_ALPHA8_SNORM #x9014)
(define-constant GL_LUMINANCE8_SNORM #x9015)
(define-constant GL_LUMINANCE8_ALPHA8_SNORM #x9016)
(define-constant GL_INTENSITY8_SNORM #x9017)
(define-constant GL_ALPHA16_SNORM #x9018)
(define-constant GL_LUMINANCE16_SNORM #x9019)
(define-constant GL_LUMINANCE16_ALPHA16_SNORM #x901a)
(define-constant GL_INTENSITY16_SNORM #x901b)
(define-constant GL_RED_SNORM #x8f90)
(define-constant GL_RG_SNORM #x8f91)
(define-constant GL_RGB_SNORM #x8f92)
(define-constant GL_RGBA_SNORM #x8f93)
(define-constant GL_TEXTURE_SWIZZLE_R_EXT #x8e42)
(define-constant GL_TEXTURE_SWIZZLE_G_EXT #x8e43)
(define-constant GL_TEXTURE_SWIZZLE_B_EXT #x8e44)
(define-constant GL_TEXTURE_SWIZZLE_A_EXT #x8e45)
(define-constant GL_TEXTURE_SWIZZLE_RGBA_EXT #x8e46)
(define-constant GL_TIME_ELAPSED_EXT #x88bf)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_EXT #x8c8e)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT #x8c84)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT #x8c85)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT #x8c8f)
(define-constant GL_INTERLEAVED_ATTRIBS_EXT #x8c8c)
(define-constant GL_SEPARATE_ATTRIBS_EXT #x8c8d)
(define-constant GL_PRIMITIVES_GENERATED_EXT #x8c87)
(define-constant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT #x8c88)
(define-constant GL_RASTERIZER_DISCARD_EXT #x8c89)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT #x8c8a)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT #x8c8b)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT #x8c80)
(define-constant GL_TRANSFORM_FEEDBACK_VARYINGS_EXT #x8c83)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT #x8c7f)
(define-constant GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT #x8c76)
(define-constant GL_VERTEX_ARRAY_EXT #x8074)
(define-constant GL_NORMAL_ARRAY_EXT #x8075)
(define-constant GL_COLOR_ARRAY_EXT #x8076)
(define-constant GL_INDEX_ARRAY_EXT #x8077)
(define-constant GL_TEXTURE_COORD_ARRAY_EXT #x8078)
(define-constant GL_EDGE_FLAG_ARRAY_EXT #x8079)
(define-constant GL_VERTEX_ARRAY_SIZE_EXT #x807a)
(define-constant GL_VERTEX_ARRAY_TYPE_EXT #x807b)
(define-constant GL_VERTEX_ARRAY_STRIDE_EXT #x807c)
(define-constant GL_VERTEX_ARRAY_COUNT_EXT #x807d)
(define-constant GL_NORMAL_ARRAY_TYPE_EXT #x807e)
(define-constant GL_NORMAL_ARRAY_STRIDE_EXT #x807f)
(define-constant GL_NORMAL_ARRAY_COUNT_EXT #x8080)
(define-constant GL_COLOR_ARRAY_SIZE_EXT #x8081)
(define-constant GL_COLOR_ARRAY_TYPE_EXT #x8082)
(define-constant GL_COLOR_ARRAY_STRIDE_EXT #x8083)
(define-constant GL_COLOR_ARRAY_COUNT_EXT #x8084)
(define-constant GL_INDEX_ARRAY_TYPE_EXT #x8085)
(define-constant GL_INDEX_ARRAY_STRIDE_EXT #x8086)
(define-constant GL_INDEX_ARRAY_COUNT_EXT #x8087)
(define-constant GL_TEXTURE_COORD_ARRAY_SIZE_EXT #x8088)
(define-constant GL_TEXTURE_COORD_ARRAY_TYPE_EXT #x8089)
(define-constant GL_TEXTURE_COORD_ARRAY_STRIDE_EXT #x808a)
(define-constant GL_TEXTURE_COORD_ARRAY_COUNT_EXT #x808b)
(define-constant GL_EDGE_FLAG_ARRAY_STRIDE_EXT #x808c)
(define-constant GL_EDGE_FLAG_ARRAY_COUNT_EXT #x808d)
(define-constant GL_VERTEX_ARRAY_POINTER_EXT #x808e)
(define-constant GL_NORMAL_ARRAY_POINTER_EXT #x808f)
(define-constant GL_COLOR_ARRAY_POINTER_EXT #x8090)
(define-constant GL_INDEX_ARRAY_POINTER_EXT #x8091)
(define-constant GL_TEXTURE_COORD_ARRAY_POINTER_EXT #x8092)
(define-constant GL_EDGE_FLAG_ARRAY_POINTER_EXT #x8093)
(define-constant GL_DOUBLE_VEC2_EXT #x8ffc)
(define-constant GL_DOUBLE_VEC3_EXT #x8ffd)
(define-constant GL_DOUBLE_VEC4_EXT #x8ffe)
(define-constant GL_DOUBLE_MAT2_EXT #x8f46)
(define-constant GL_DOUBLE_MAT3_EXT #x8f47)
(define-constant GL_DOUBLE_MAT4_EXT #x8f48)
(define-constant GL_DOUBLE_MAT2x3_EXT #x8f49)
(define-constant GL_DOUBLE_MAT2x4_EXT #x8f4a)
(define-constant GL_DOUBLE_MAT3x2_EXT #x8f4b)
(define-constant GL_DOUBLE_MAT3x4_EXT #x8f4c)
(define-constant GL_DOUBLE_MAT4x2_EXT #x8f4d)
(define-constant GL_DOUBLE_MAT4x3_EXT #x8f4e)
(define-constant GL_VERTEX_SHADER_EXT #x8780)
(define-constant GL_VERTEX_SHADER_BINDING_EXT #x8781)
(define-constant GL_OP_INDEX_EXT #x8782)
(define-constant GL_OP_NEGATE_EXT #x8783)
(define-constant GL_OP_DOT3_EXT #x8784)
(define-constant GL_OP_DOT4_EXT #x8785)
(define-constant GL_OP_MUL_EXT #x8786)
(define-constant GL_OP_ADD_EXT #x8787)
(define-constant GL_OP_MADD_EXT #x8788)
(define-constant GL_OP_FRAC_EXT #x8789)
(define-constant GL_OP_MAX_EXT #x878a)
(define-constant GL_OP_MIN_EXT #x878b)
(define-constant GL_OP_SET_GE_EXT #x878c)
(define-constant GL_OP_SET_LT_EXT #x878d)
(define-constant GL_OP_CLAMP_EXT #x878e)
(define-constant GL_OP_FLOOR_EXT #x878f)
(define-constant GL_OP_ROUND_EXT #x8790)
(define-constant GL_OP_EXP_BASE_2_EXT #x8791)
(define-constant GL_OP_LOG_BASE_2_EXT #x8792)
(define-constant GL_OP_POWER_EXT #x8793)
(define-constant GL_OP_RECIP_EXT #x8794)
(define-constant GL_OP_RECIP_SQRT_EXT #x8795)
(define-constant GL_OP_SUB_EXT #x8796)
(define-constant GL_OP_CROSS_PRODUCT_EXT #x8797)
(define-constant GL_OP_MULTIPLY_MATRIX_EXT #x8798)
(define-constant GL_OP_MOV_EXT #x8799)
(define-constant GL_OUTPUT_VERTEX_EXT #x879a)
(define-constant GL_OUTPUT_COLOR0_EXT #x879b)
(define-constant GL_OUTPUT_COLOR1_EXT #x879c)
(define-constant GL_OUTPUT_TEXTURE_COORD0_EXT #x879d)
(define-constant GL_OUTPUT_TEXTURE_COORD1_EXT #x879e)
(define-constant GL_OUTPUT_TEXTURE_COORD2_EXT #x879f)
(define-constant GL_OUTPUT_TEXTURE_COORD3_EXT #x87a0)
(define-constant GL_OUTPUT_TEXTURE_COORD4_EXT #x87a1)
(define-constant GL_OUTPUT_TEXTURE_COORD5_EXT #x87a2)
(define-constant GL_OUTPUT_TEXTURE_COORD6_EXT #x87a3)
(define-constant GL_OUTPUT_TEXTURE_COORD7_EXT #x87a4)
(define-constant GL_OUTPUT_TEXTURE_COORD8_EXT #x87a5)
(define-constant GL_OUTPUT_TEXTURE_COORD9_EXT #x87a6)
(define-constant GL_OUTPUT_TEXTURE_COORD10_EXT #x87a7)
(define-constant GL_OUTPUT_TEXTURE_COORD11_EXT #x87a8)
(define-constant GL_OUTPUT_TEXTURE_COORD12_EXT #x87a9)
(define-constant GL_OUTPUT_TEXTURE_COORD13_EXT #x87aa)
(define-constant GL_OUTPUT_TEXTURE_COORD14_EXT #x87ab)
(define-constant GL_OUTPUT_TEXTURE_COORD15_EXT #x87ac)
(define-constant GL_OUTPUT_TEXTURE_COORD16_EXT #x87ad)
(define-constant GL_OUTPUT_TEXTURE_COORD17_EXT #x87ae)
(define-constant GL_OUTPUT_TEXTURE_COORD18_EXT #x87af)
(define-constant GL_OUTPUT_TEXTURE_COORD19_EXT #x87b0)
(define-constant GL_OUTPUT_TEXTURE_COORD20_EXT #x87b1)
(define-constant GL_OUTPUT_TEXTURE_COORD21_EXT #x87b2)
(define-constant GL_OUTPUT_TEXTURE_COORD22_EXT #x87b3)
(define-constant GL_OUTPUT_TEXTURE_COORD23_EXT #x87b4)
(define-constant GL_OUTPUT_TEXTURE_COORD24_EXT #x87b5)
(define-constant GL_OUTPUT_TEXTURE_COORD25_EXT #x87b6)
(define-constant GL_OUTPUT_TEXTURE_COORD26_EXT #x87b7)
(define-constant GL_OUTPUT_TEXTURE_COORD27_EXT #x87b8)
(define-constant GL_OUTPUT_TEXTURE_COORD28_EXT #x87b9)
(define-constant GL_OUTPUT_TEXTURE_COORD29_EXT #x87ba)
(define-constant GL_OUTPUT_TEXTURE_COORD30_EXT #x87bb)
(define-constant GL_OUTPUT_TEXTURE_COORD31_EXT #x87bc)
(define-constant GL_OUTPUT_FOG_EXT #x87bd)
(define-constant GL_SCALAR_EXT #x87be)
(define-constant GL_VECTOR_EXT #x87bf)
(define-constant GL_MATRIX_EXT #x87c0)
(define-constant GL_VARIANT_EXT #x87c1)
(define-constant GL_INVARIANT_EXT #x87c2)
(define-constant GL_LOCAL_CONSTANT_EXT #x87c3)
(define-constant GL_LOCAL_EXT #x87c4)
(define-constant GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT #x87c5)
(define-constant GL_MAX_VERTEX_SHADER_VARIANTS_EXT #x87c6)
(define-constant GL_MAX_VERTEX_SHADER_INVARIANTS_EXT #x87c7)
(define-constant GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87c8)
(define-constant GL_MAX_VERTEX_SHADER_LOCALS_EXT #x87c9)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT #x87ca)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT #x87cb)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87cc)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT #x87cd)
(define-constant GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT #x87ce)
(define-constant GL_VERTEX_SHADER_INSTRUCTIONS_EXT #x87cf)
(define-constant GL_VERTEX_SHADER_VARIANTS_EXT #x87d0)
(define-constant GL_VERTEX_SHADER_INVARIANTS_EXT #x87d1)
(define-constant GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT #x87d2)
(define-constant GL_VERTEX_SHADER_LOCALS_EXT #x87d3)
(define-constant GL_VERTEX_SHADER_OPTIMIZED_EXT #x87d4)
(define-constant GL_X_EXT #x87d5)
(define-constant GL_Y_EXT #x87d6)
(define-constant GL_Z_EXT #x87d7)
(define-constant GL_W_EXT #x87d8)
(define-constant GL_NEGATIVE_X_EXT #x87d9)
(define-constant GL_NEGATIVE_Y_EXT #x87da)
(define-constant GL_NEGATIVE_Z_EXT #x87db)
(define-constant GL_NEGATIVE_W_EXT #x87dc)
(define-constant GL_ZERO_EXT #x87dd)
(define-constant GL_ONE_EXT #x87de)
(define-constant GL_NEGATIVE_ONE_EXT #x87df)
(define-constant GL_NORMALIZED_RANGE_EXT #x87e0)
(define-constant GL_FULL_RANGE_EXT #x87e1)
(define-constant GL_CURRENT_VERTEX_EXT #x87e2)
(define-constant GL_MVP_MATRIX_EXT #x87e3)
(define-constant GL_VARIANT_VALUE_EXT #x87e4)
(define-constant GL_VARIANT_DATATYPE_EXT #x87e5)
(define-constant GL_VARIANT_ARRAY_STRIDE_EXT #x87e6)
(define-constant GL_VARIANT_ARRAY_TYPE_EXT #x87e7)
(define-constant GL_VARIANT_ARRAY_EXT #x87e8)
(define-constant GL_VARIANT_ARRAY_POINTER_EXT #x87e9)
(define-constant GL_INVARIANT_VALUE_EXT #x87ea)
(define-constant GL_INVARIANT_DATATYPE_EXT #x87eb)
(define-constant GL_LOCAL_CONSTANT_VALUE_EXT #x87ec)
(define-constant GL_LOCAL_CONSTANT_DATATYPE_EXT #x87ed)
(define-constant GL_MODELVIEW0_STACK_DEPTH_EXT #x0ba3)
(define-constant GL_MODELVIEW1_STACK_DEPTH_EXT #x8502)
(define-constant GL_MODELVIEW0_MATRIX_EXT #x0ba6)
(define-constant GL_MODELVIEW1_MATRIX_EXT #x8506)
(define-constant GL_VERTEX_WEIGHTING_EXT #x8509)
(define-constant GL_MODELVIEW0_EXT #x1700)
(define-constant GL_MODELVIEW1_EXT #x850a)
(define-constant GL_CURRENT_VERTEX_WEIGHT_EXT #x850b)
(define-constant GL_VERTEX_WEIGHT_ARRAY_EXT #x850c)
(define-constant GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT #x850d)
(define-constant GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT #x850e)
(define-constant GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT #x850f)
(define-constant GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT #x8510)
(define-constant GL_SYNC_X11_FENCE_EXT #x90e1)
(define-constant GL_IGNORE_BORDER_HP #x8150)
(define-constant GL_CONSTANT_BORDER_HP #x8151)
(define-constant GL_REPLICATE_BORDER_HP #x8153)
(define-constant GL_CONVOLUTION_BORDER_COLOR_HP #x8154)
(define-constant GL_IMAGE_SCALE_X_HP #x8155)
(define-constant GL_IMAGE_SCALE_Y_HP #x8156)
(define-constant GL_IMAGE_TRANSLATE_X_HP #x8157)
(define-constant GL_IMAGE_TRANSLATE_Y_HP #x8158)
(define-constant GL_IMAGE_ROTATE_ANGLE_HP #x8159)
(define-constant GL_IMAGE_ROTATE_ORIGIN_X_HP #x815a)
(define-constant GL_IMAGE_ROTATE_ORIGIN_Y_HP #x815b)
(define-constant GL_IMAGE_MAG_FILTER_HP #x815c)
(define-constant GL_IMAGE_MIN_FILTER_HP #x815d)
(define-constant GL_IMAGE_CUBIC_WEIGHT_HP #x815e)
(define-constant GL_CUBIC_HP #x815f)
(define-constant GL_AVERAGE_HP #x8160)
(define-constant GL_IMAGE_TRANSFORM_2D_HP #x8161)
(define-constant GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP #x8162)
(define-constant GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP #x8163)
(define-constant GL_OCCLUSION_TEST_HP #x8165)
(define-constant GL_OCCLUSION_TEST_RESULT_HP #x8166)
(define-constant GL_TEXTURE_LIGHTING_MODE_HP #x8167)
(define-constant GL_TEXTURE_POST_SPECULAR_HP #x8168)
(define-constant GL_TEXTURE_PRE_SPECULAR_HP #x8169)
(define-constant GL_CULL_VERTEX_IBM #x1928a)
(define-constant GL_RASTER_POSITION_UNCLIPPED_IBM #x19262)
(define-constant GL_ALL_STATIC_DATA_IBM #x19294)
(define-constant GL_STATIC_VERTEX_ARRAY_IBM #x19295)
(define-constant GL_MIRRORED_REPEAT_IBM #x8370)
(define-constant GL_VERTEX_ARRAY_LIST_IBM #x1929e)
(define-constant GL_NORMAL_ARRAY_LIST_IBM #x1929f)
(define-constant GL_COLOR_ARRAY_LIST_IBM #x192a0)
(define-constant GL_INDEX_ARRAY_LIST_IBM #x192a1)
(define-constant GL_TEXTURE_COORD_ARRAY_LIST_IBM #x192a2)
(define-constant GL_EDGE_FLAG_ARRAY_LIST_IBM #x192a3)
(define-constant GL_FOG_COORDINATE_ARRAY_LIST_IBM #x192a4)
(define-constant GL_SECONDARY_COLOR_ARRAY_LIST_IBM #x192a5)
(define-constant GL_VERTEX_ARRAY_LIST_STRIDE_IBM #x192a8)
(define-constant GL_NORMAL_ARRAY_LIST_STRIDE_IBM #x192a9)
(define-constant GL_COLOR_ARRAY_LIST_STRIDE_IBM #x192aa)
(define-constant GL_INDEX_ARRAY_LIST_STRIDE_IBM #x192ab)
(define-constant GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM #x192ac)
(define-constant GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM #x192ad)
(define-constant GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM #x192ae)
(define-constant GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM #x192af)
(define-constant GL_RED_MIN_CLAMP_INGR #x8560)
(define-constant GL_GREEN_MIN_CLAMP_INGR #x8561)
(define-constant GL_BLUE_MIN_CLAMP_INGR #x8562)
(define-constant GL_ALPHA_MIN_CLAMP_INGR #x8563)
(define-constant GL_RED_MAX_CLAMP_INGR #x8564)
(define-constant GL_GREEN_MAX_CLAMP_INGR #x8565)
(define-constant GL_BLUE_MAX_CLAMP_INGR #x8566)
(define-constant GL_ALPHA_MAX_CLAMP_INGR #x8567)
(define-constant GL_INTERLACE_READ_INGR #x8568)
(define-constant GL_TEXTURE_MEMORY_LAYOUT_INTEL #x83ff)
(define-constant GL_LAYOUT_DEFAULT_INTEL #x0000)
(define-constant GL_LAYOUT_LINEAR_INTEL #x0001)
(define-constant GL_LAYOUT_LINEAR_CPU_CACHED_INTEL #x0002)
(define-constant GL_PARALLEL_ARRAYS_INTEL #x83f4)
(define-constant GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL #x83f5)
(define-constant GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL #x83f6)
(define-constant GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL #x83f7)
(define-constant GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL #x83f8)
(define-constant GL_PERFQUERY_SINGLE_CONTEXT_INTEL #x0000)
(define-constant GL_PERFQUERY_GLOBAL_CONTEXT_INTEL #x0001)
(define-constant GL_PERFQUERY_WAIT_INTEL #x83fb)
(define-constant GL_PERFQUERY_FLUSH_INTEL #x83fa)
(define-constant GL_PERFQUERY_DONOT_FLUSH_INTEL #x83f9)
(define-constant GL_PERFQUERY_COUNTER_EVENT_INTEL #x94f0)
(define-constant GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL #x94f1)
(define-constant GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL #x94f2)
(define-constant GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL #x94f3)
(define-constant GL_PERFQUERY_COUNTER_RAW_INTEL #x94f4)
(define-constant GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL #x94f5)
(define-constant GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL #x94f8)
(define-constant GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL #x94f9)
(define-constant GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL #x94fa)
(define-constant GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL #x94fb)
(define-constant GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL #x94fc)
(define-constant GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL #x94fd)
(define-constant GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL #x94fe)
(define-constant GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL #x94ff)
(define-constant GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL #x9500)
(define-constant GL_TEXTURE_1D_STACK_MESAX #x8759)
(define-constant GL_TEXTURE_2D_STACK_MESAX #x875a)
(define-constant GL_PROXY_TEXTURE_1D_STACK_MESAX #x875b)
(define-constant GL_PROXY_TEXTURE_2D_STACK_MESAX #x875c)
(define-constant GL_TEXTURE_1D_STACK_BINDING_MESAX #x875d)
(define-constant GL_TEXTURE_2D_STACK_BINDING_MESAX #x875e)
(define-constant GL_PACK_INVERT_MESA #x8758)
(define-constant GL_UNSIGNED_SHORT_8_8_MESA #x85ba)
(define-constant GL_UNSIGNED_SHORT_8_8_REV_MESA #x85bb)
(define-constant GL_YCBCR_MESA #x8757)
(define-constant GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX #x9047)
(define-constant GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX #x9048)
(define-constant GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX #x9049)
(define-constant GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX #x904a)
(define-constant GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX #x904b)
(define-constant GL_BLEND_OVERLAP_NV #x9281)
(define-constant GL_BLEND_PREMULTIPLIED_SRC_NV #x9280)
(define-constant GL_BLUE_NV #x1905)
(define-constant GL_COLORBURN_NV #x929a)
(define-constant GL_COLORDODGE_NV #x9299)
(define-constant GL_CONJOINT_NV #x9284)
(define-constant GL_CONTRAST_NV #x92a1)
(define-constant GL_DARKEN_NV #x9297)
(define-constant GL_DIFFERENCE_NV #x929e)
(define-constant GL_DISJOINT_NV #x9283)
(define-constant GL_DST_ATOP_NV #x928f)
(define-constant GL_DST_IN_NV #x928b)
(define-constant GL_DST_NV #x9287)
(define-constant GL_DST_OUT_NV #x928d)
(define-constant GL_DST_OVER_NV #x9289)
(define-constant GL_EXCLUSION_NV #x92a0)
(define-constant GL_GREEN_NV #x1904)
(define-constant GL_HARDLIGHT_NV #x929b)
(define-constant GL_HARDMIX_NV #x92a9)
(define-constant GL_HSL_COLOR_NV #x92af)
(define-constant GL_HSL_HUE_NV #x92ad)
(define-constant GL_HSL_LUMINOSITY_NV #x92b0)
(define-constant GL_HSL_SATURATION_NV #x92ae)
(define-constant GL_INVERT_OVG_NV #x92b4)
(define-constant GL_INVERT_RGB_NV #x92a3)
(define-constant GL_LIGHTEN_NV #x9298)
(define-constant GL_LINEARBURN_NV #x92a5)
(define-constant GL_LINEARDODGE_NV #x92a4)
(define-constant GL_LINEARLIGHT_NV #x92a7)
(define-constant GL_MINUS_CLAMPED_NV #x92b3)
(define-constant GL_MINUS_NV #x929f)
(define-constant GL_MULTIPLY_NV #x9294)
(define-constant GL_OVERLAY_NV #x9296)
(define-constant GL_PINLIGHT_NV #x92a8)
(define-constant GL_PLUS_CLAMPED_ALPHA_NV #x92b2)
(define-constant GL_PLUS_CLAMPED_NV #x92b1)
(define-constant GL_PLUS_DARKER_NV #x9292)
(define-constant GL_PLUS_NV #x9291)
(define-constant GL_RED_NV #x1903)
(define-constant GL_SCREEN_NV #x9295)
(define-constant GL_SOFTLIGHT_NV #x929c)
(define-constant GL_SRC_ATOP_NV #x928e)
(define-constant GL_SRC_IN_NV #x928a)
(define-constant GL_SRC_NV #x9286)
(define-constant GL_SRC_OUT_NV #x928c)
(define-constant GL_SRC_OVER_NV #x9288)
(define-constant GL_UNCORRELATED_NV #x9282)
(define-constant GL_VIVIDLIGHT_NV #x92a6)
(define-constant GL_XOR_NV #x1506)
(define-constant GL_BLEND_ADVANCED_COHERENT_NV #x9285)
(define-constant GL_COMPUTE_PROGRAM_NV #x90fb)
(define-constant GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV #x90fc)
(define-constant GL_QUERY_WAIT_NV #x8e13)
(define-constant GL_QUERY_NO_WAIT_NV #x8e14)
(define-constant GL_QUERY_BY_REGION_WAIT_NV #x8e15)
(define-constant GL_QUERY_BY_REGION_NO_WAIT_NV #x8e16)
(define-constant GL_CONSERVATIVE_RASTERIZATION_NV #x9346)
(define-constant GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV #x9347)
(define-constant GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV #x9348)
(define-constant GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV #x9349)
(define-constant GL_DEPTH_STENCIL_TO_RGBA_NV #x886e)
(define-constant GL_DEPTH_STENCIL_TO_BGRA_NV #x886f)
(define-constant GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV #x90d0)
(define-constant GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV #x90d1)
(define-constant GL_DEPTH_COMPONENT32F_NV #x8dab)
(define-constant GL_DEPTH32F_STENCIL8_NV #x8dac)
(define-constant GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV #x8dad)
(define-constant GL_DEPTH_BUFFER_FLOAT_MODE_NV #x8daf)
(define-constant GL_DEPTH_CLAMP_NV #x864f)
(define-constant GL_EVAL_2D_NV #x86c0)
(define-constant GL_EVAL_TRIANGULAR_2D_NV #x86c1)
(define-constant GL_MAP_TESSELLATION_NV #x86c2)
(define-constant GL_MAP_ATTRIB_U_ORDER_NV #x86c3)
(define-constant GL_MAP_ATTRIB_V_ORDER_NV #x86c4)
(define-constant GL_EVAL_FRACTIONAL_TESSELLATION_NV #x86c5)
(define-constant GL_EVAL_VERTEX_ATTRIB0_NV #x86c6)
(define-constant GL_EVAL_VERTEX_ATTRIB1_NV #x86c7)
(define-constant GL_EVAL_VERTEX_ATTRIB2_NV #x86c8)
(define-constant GL_EVAL_VERTEX_ATTRIB3_NV #x86c9)
(define-constant GL_EVAL_VERTEX_ATTRIB4_NV #x86ca)
(define-constant GL_EVAL_VERTEX_ATTRIB5_NV #x86cb)
(define-constant GL_EVAL_VERTEX_ATTRIB6_NV #x86cc)
(define-constant GL_EVAL_VERTEX_ATTRIB7_NV #x86cd)
(define-constant GL_EVAL_VERTEX_ATTRIB8_NV #x86ce)
(define-constant GL_EVAL_VERTEX_ATTRIB9_NV #x86cf)
(define-constant GL_EVAL_VERTEX_ATTRIB10_NV #x86d0)
(define-constant GL_EVAL_VERTEX_ATTRIB11_NV #x86d1)
(define-constant GL_EVAL_VERTEX_ATTRIB12_NV #x86d2)
(define-constant GL_EVAL_VERTEX_ATTRIB13_NV #x86d3)
(define-constant GL_EVAL_VERTEX_ATTRIB14_NV #x86d4)
(define-constant GL_EVAL_VERTEX_ATTRIB15_NV #x86d5)
(define-constant GL_MAX_MAP_TESSELLATION_NV #x86d6)
(define-constant GL_MAX_RATIONAL_EVAL_ORDER_NV #x86d7)
(define-constant GL_SAMPLE_POSITION_NV #x8e50)
(define-constant GL_SAMPLE_MASK_NV #x8e51)
(define-constant GL_SAMPLE_MASK_VALUE_NV #x8e52)
(define-constant GL_TEXTURE_BINDING_RENDERBUFFER_NV #x8e53)
(define-constant GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV #x8e54)
(define-constant GL_TEXTURE_RENDERBUFFER_NV #x8e55)
(define-constant GL_SAMPLER_RENDERBUFFER_NV #x8e56)
(define-constant GL_INT_SAMPLER_RENDERBUFFER_NV #x8e57)
(define-constant GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV #x8e58)
(define-constant GL_MAX_SAMPLE_MASK_WORDS_NV #x8e59)
(define-constant GL_ALL_COMPLETED_NV #x84f2)
(define-constant GL_FENCE_STATUS_NV #x84f3)
(define-constant GL_FENCE_CONDITION_NV #x84f4)
(define-constant GL_FILL_RECTANGLE_NV #x933c)
(define-constant GL_FLOAT_R_NV #x8880)
(define-constant GL_FLOAT_RG_NV #x8881)
(define-constant GL_FLOAT_RGB_NV #x8882)
(define-constant GL_FLOAT_RGBA_NV #x8883)
(define-constant GL_FLOAT_R16_NV #x8884)
(define-constant GL_FLOAT_R32_NV #x8885)
(define-constant GL_FLOAT_RG16_NV #x8886)
(define-constant GL_FLOAT_RG32_NV #x8887)
(define-constant GL_FLOAT_RGB16_NV #x8888)
(define-constant GL_FLOAT_RGB32_NV #x8889)
(define-constant GL_FLOAT_RGBA16_NV #x888a)
(define-constant GL_FLOAT_RGBA32_NV #x888b)
(define-constant GL_TEXTURE_FLOAT_COMPONENTS_NV #x888c)
(define-constant GL_FLOAT_CLEAR_COLOR_VALUE_NV #x888d)
(define-constant GL_FLOAT_RGBA_MODE_NV #x888e)
(define-constant GL_FOG_DISTANCE_MODE_NV #x855a)
(define-constant GL_EYE_RADIAL_NV #x855b)
(define-constant GL_EYE_PLANE_ABSOLUTE_NV #x855c)
(define-constant GL_FRAGMENT_COVERAGE_TO_COLOR_NV #x92dd)
(define-constant GL_FRAGMENT_COVERAGE_COLOR_NV #x92de)
(define-constant GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV #x8868)
(define-constant GL_FRAGMENT_PROGRAM_NV #x8870)
(define-constant GL_MAX_TEXTURE_COORDS_NV #x8871)
(define-constant GL_MAX_TEXTURE_IMAGE_UNITS_NV #x8872)
(define-constant GL_FRAGMENT_PROGRAM_BINDING_NV #x8873)
(define-constant GL_PROGRAM_ERROR_STRING_NV #x8874)
(define-constant GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV #x88f4)
(define-constant GL_MAX_PROGRAM_CALL_DEPTH_NV #x88f5)
(define-constant GL_MAX_PROGRAM_IF_DEPTH_NV #x88f6)
(define-constant GL_MAX_PROGRAM_LOOP_DEPTH_NV #x88f7)
(define-constant GL_MAX_PROGRAM_LOOP_COUNT_NV #x88f8)
(define-constant GL_COVERAGE_MODULATION_TABLE_NV #x9331)
(define-constant GL_COLOR_SAMPLES_NV #x8e20)
(define-constant GL_DEPTH_SAMPLES_NV #x932d)
(define-constant GL_STENCIL_SAMPLES_NV #x932e)
(define-constant GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV #x932f)
(define-constant GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV #x9330)
(define-constant GL_COVERAGE_MODULATION_NV #x9332)
(define-constant GL_COVERAGE_MODULATION_TABLE_SIZE_NV #x9333)
(define-constant GL_RENDERBUFFER_COVERAGE_SAMPLES_NV #x8cab)
(define-constant GL_RENDERBUFFER_COLOR_SAMPLES_NV #x8e10)
(define-constant GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV #x8e11)
(define-constant GL_MULTISAMPLE_COVERAGE_MODES_NV #x8e12)
(define-constant GL_GEOMETRY_PROGRAM_NV #x8c26)
(define-constant GL_MAX_PROGRAM_OUTPUT_VERTICES_NV #x8c27)
(define-constant GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV #x8c28)
(define-constant GL_MIN_PROGRAM_TEXEL_OFFSET_NV #x8904)
(define-constant GL_MAX_PROGRAM_TEXEL_OFFSET_NV #x8905)
(define-constant GL_PROGRAM_ATTRIB_COMPONENTS_NV #x8906)
(define-constant GL_PROGRAM_RESULT_COMPONENTS_NV #x8907)
(define-constant GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV #x8908)
(define-constant GL_MAX_PROGRAM_RESULT_COMPONENTS_NV #x8909)
(define-constant GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV #x8da5)
(define-constant GL_MAX_PROGRAM_GENERIC_RESULTS_NV #x8da6)
(define-constant GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV #x8e5a)
(define-constant GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV #x8e5b)
(define-constant GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV #x8e5c)
(define-constant GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV #x8e5d)
(define-constant GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV #x8e5e)
(define-constant GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV #x8e5f)
(define-constant GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV #x8f44)
(define-constant GL_MAX_PROGRAM_SUBROUTINE_NUM_NV #x8f45)
(define-constant GL_HALF_FLOAT_NV #x140b)
(define-constant GL_MULTISAMPLES_NV #x9371)
(define-constant GL_SUPERSAMPLE_SCALE_X_NV #x9372)
(define-constant GL_SUPERSAMPLE_SCALE_Y_NV #x9373)
(define-constant GL_CONFORMANT_NV #x9374)
(define-constant GL_MAX_SHININESS_NV #x8504)
(define-constant GL_MAX_SPOT_EXPONENT_NV #x8505)
(define-constant GL_MULTISAMPLE_FILTER_HINT_NV #x8534)
(define-constant GL_PIXEL_COUNTER_BITS_NV #x8864)
(define-constant GL_CURRENT_OCCLUSION_QUERY_ID_NV #x8865)
(define-constant GL_PIXEL_COUNT_NV #x8866)
(define-constant GL_PIXEL_COUNT_AVAILABLE_NV #x8867)
(define-constant GL_DEPTH_STENCIL_NV #x84f9)
(define-constant GL_UNSIGNED_INT_24_8_NV #x84fa)
(define-constant GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV #x8da0)
(define-constant GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV #x8da1)
(define-constant GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV #x8da2)
(define-constant GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV #x8da3)
(define-constant GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV #x8da4)
(define-constant GL_PATH_FORMAT_SVG_NV #x9070)
(define-constant GL_PATH_FORMAT_PS_NV #x9071)
(define-constant GL_STANDARD_FONT_NAME_NV #x9072)
(define-constant GL_SYSTEM_FONT_NAME_NV #x9073)
(define-constant GL_FILE_NAME_NV #x9074)
(define-constant GL_PATH_STROKE_WIDTH_NV #x9075)
(define-constant GL_PATH_END_CAPS_NV #x9076)
(define-constant GL_PATH_INITIAL_END_CAP_NV #x9077)
(define-constant GL_PATH_TERMINAL_END_CAP_NV #x9078)
(define-constant GL_PATH_JOIN_STYLE_NV #x9079)
(define-constant GL_PATH_MITER_LIMIT_NV #x907a)
(define-constant GL_PATH_DASH_CAPS_NV #x907b)
(define-constant GL_PATH_INITIAL_DASH_CAP_NV #x907c)
(define-constant GL_PATH_TERMINAL_DASH_CAP_NV #x907d)
(define-constant GL_PATH_DASH_OFFSET_NV #x907e)
(define-constant GL_PATH_CLIENT_LENGTH_NV #x907f)
(define-constant GL_PATH_FILL_MODE_NV #x9080)
(define-constant GL_PATH_FILL_MASK_NV #x9081)
(define-constant GL_PATH_FILL_COVER_MODE_NV #x9082)
(define-constant GL_PATH_STROKE_COVER_MODE_NV #x9083)
(define-constant GL_PATH_STROKE_MASK_NV #x9084)
(define-constant GL_COUNT_UP_NV #x9088)
(define-constant GL_COUNT_DOWN_NV #x9089)
(define-constant GL_PATH_OBJECT_BOUNDING_BOX_NV #x908a)
(define-constant GL_CONVEX_HULL_NV #x908b)
(define-constant GL_BOUNDING_BOX_NV #x908d)
(define-constant GL_TRANSLATE_X_NV #x908e)
(define-constant GL_TRANSLATE_Y_NV #x908f)
(define-constant GL_TRANSLATE_2D_NV #x9090)
(define-constant GL_TRANSLATE_3D_NV #x9091)
(define-constant GL_AFFINE_2D_NV #x9092)
(define-constant GL_AFFINE_3D_NV #x9094)
(define-constant GL_TRANSPOSE_AFFINE_2D_NV #x9096)
(define-constant GL_TRANSPOSE_AFFINE_3D_NV #x9098)
(define-constant GL_UTF8_NV #x909a)
(define-constant GL_UTF16_NV #x909b)
(define-constant GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV #x909c)
(define-constant GL_PATH_COMMAND_COUNT_NV #x909d)
(define-constant GL_PATH_COORD_COUNT_NV #x909e)
(define-constant GL_PATH_DASH_ARRAY_COUNT_NV #x909f)
(define-constant GL_PATH_COMPUTED_LENGTH_NV #x90a0)
(define-constant GL_PATH_FILL_BOUNDING_BOX_NV #x90a1)
(define-constant GL_PATH_STROKE_BOUNDING_BOX_NV #x90a2)
(define-constant GL_SQUARE_NV #x90a3)
(define-constant GL_ROUND_NV #x90a4)
(define-constant GL_TRIANGULAR_NV #x90a5)
(define-constant GL_BEVEL_NV #x90a6)
(define-constant GL_MITER_REVERT_NV #x90a7)
(define-constant GL_MITER_TRUNCATE_NV #x90a8)
(define-constant GL_SKIP_MISSING_GLYPH_NV #x90a9)
(define-constant GL_USE_MISSING_GLYPH_NV #x90aa)
(define-constant GL_PATH_ERROR_POSITION_NV #x90ab)
(define-constant GL_ACCUM_ADJACENT_PAIRS_NV #x90ad)
(define-constant GL_ADJACENT_PAIRS_NV #x90ae)
(define-constant GL_FIRST_TO_REST_NV #x90af)
(define-constant GL_PATH_GEN_MODE_NV #x90b0)
(define-constant GL_PATH_GEN_COEFF_NV #x90b1)
(define-constant GL_PATH_GEN_COMPONENTS_NV #x90b3)
(define-constant GL_PATH_STENCIL_FUNC_NV #x90b7)
(define-constant GL_PATH_STENCIL_REF_NV #x90b8)
(define-constant GL_PATH_STENCIL_VALUE_MASK_NV #x90b9)
(define-constant GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV #x90bd)
(define-constant GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV #x90be)
(define-constant GL_PATH_COVER_DEPTH_FUNC_NV #x90bf)
(define-constant GL_PATH_DASH_OFFSET_RESET_NV #x90b4)
(define-constant GL_MOVE_TO_RESETS_NV #x90b5)
(define-constant GL_MOVE_TO_CONTINUES_NV #x90b6)
(define-constant GL_CLOSE_PATH_NV #x0000)
(define-constant GL_MOVE_TO_NV #x0002)
(define-constant GL_RELATIVE_MOVE_TO_NV #x0003)
(define-constant GL_LINE_TO_NV #x0004)
(define-constant GL_RELATIVE_LINE_TO_NV #x0005)
(define-constant GL_HORIZONTAL_LINE_TO_NV #x0006)
(define-constant GL_RELATIVE_HORIZONTAL_LINE_TO_NV #x0007)
(define-constant GL_VERTICAL_LINE_TO_NV #x0008)
(define-constant GL_RELATIVE_VERTICAL_LINE_TO_NV #x0009)
(define-constant GL_QUADRATIC_CURVE_TO_NV #x000a)
(define-constant GL_RELATIVE_QUADRATIC_CURVE_TO_NV #x000b)
(define-constant GL_CUBIC_CURVE_TO_NV #x000c)
(define-constant GL_RELATIVE_CUBIC_CURVE_TO_NV #x000d)
(define-constant GL_SMOOTH_QUADRATIC_CURVE_TO_NV #x000e)
(define-constant GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV #x000f)
(define-constant GL_SMOOTH_CUBIC_CURVE_TO_NV #x0010)
(define-constant GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV #x0011)
(define-constant GL_SMALL_CCW_ARC_TO_NV #x0012)
(define-constant GL_RELATIVE_SMALL_CCW_ARC_TO_NV #x0013)
(define-constant GL_SMALL_CW_ARC_TO_NV #x0014)
(define-constant GL_RELATIVE_SMALL_CW_ARC_TO_NV #x0015)
(define-constant GL_LARGE_CCW_ARC_TO_NV #x0016)
(define-constant GL_RELATIVE_LARGE_CCW_ARC_TO_NV #x0017)
(define-constant GL_LARGE_CW_ARC_TO_NV #x0018)
(define-constant GL_RELATIVE_LARGE_CW_ARC_TO_NV #x0019)
(define-constant GL_RESTART_PATH_NV #x00f0)
(define-constant GL_DUP_FIRST_CUBIC_CURVE_TO_NV #x00f2)
(define-constant GL_DUP_LAST_CUBIC_CURVE_TO_NV #x00f4)
(define-constant GL_RECT_NV #x00f6)
(define-constant GL_CIRCULAR_CCW_ARC_TO_NV #x00f8)
(define-constant GL_CIRCULAR_CW_ARC_TO_NV #x00fa)
(define-constant GL_CIRCULAR_TANGENT_ARC_TO_NV #x00fc)
(define-constant GL_ARC_TO_NV #x00fe)
(define-constant GL_RELATIVE_ARC_TO_NV #x00ff)
(define-constant GL_BOLD_BIT_NV #x0001)
(define-constant GL_ITALIC_BIT_NV #x0002)
(define-constant GL_GLYPH_WIDTH_BIT_NV #x0001)
(define-constant GL_GLYPH_HEIGHT_BIT_NV #x0002)
(define-constant GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV #x0004)
(define-constant GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV #x0008)
(define-constant GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV #x0010)
(define-constant GL_GLYPH_VERTICAL_BEARING_X_BIT_NV #x0020)
(define-constant GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV #x0040)
(define-constant GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV #x0080)
(define-constant GL_GLYPH_HAS_KERNING_BIT_NV #x0100)
(define-constant GL_FONT_X_MIN_BOUNDS_BIT_NV #x10000)
(define-constant GL_FONT_Y_MIN_BOUNDS_BIT_NV #x20000)
(define-constant GL_FONT_X_MAX_BOUNDS_BIT_NV #x40000)
(define-constant GL_FONT_Y_MAX_BOUNDS_BIT_NV #x80000)
(define-constant GL_FONT_UNITS_PER_EM_BIT_NV #x100000)
(define-constant GL_FONT_ASCENDER_BIT_NV #x200000)
(define-constant GL_FONT_DESCENDER_BIT_NV #x400000)
(define-constant GL_FONT_HEIGHT_BIT_NV #x800000)
(define-constant GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV #x1000000)
(define-constant GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV #x2000000)
(define-constant GL_FONT_UNDERLINE_POSITION_BIT_NV #x4000000)
(define-constant GL_FONT_UNDERLINE_THICKNESS_BIT_NV #x8000000)
(define-constant GL_FONT_HAS_KERNING_BIT_NV #x10000000)
(define-constant GL_ROUNDED_RECT_NV #x00e8)
(define-constant GL_RELATIVE_ROUNDED_RECT_NV #x00e9)
(define-constant GL_ROUNDED_RECT2_NV #x00ea)
(define-constant GL_RELATIVE_ROUNDED_RECT2_NV #x00eb)
(define-constant GL_ROUNDED_RECT4_NV #x00ec)
(define-constant GL_RELATIVE_ROUNDED_RECT4_NV #x00ed)
(define-constant GL_ROUNDED_RECT8_NV #x00ee)
(define-constant GL_RELATIVE_ROUNDED_RECT8_NV #x00ef)
(define-constant GL_RELATIVE_RECT_NV #x00f7)
(define-constant GL_FONT_GLYPHS_AVAILABLE_NV #x9368)
(define-constant GL_FONT_TARGET_UNAVAILABLE_NV #x9369)
(define-constant GL_FONT_UNAVAILABLE_NV #x936a)
(define-constant GL_FONT_UNINTELLIGIBLE_NV #x936b)
(define-constant GL_CONIC_CURVE_TO_NV #x001a)
(define-constant GL_RELATIVE_CONIC_CURVE_TO_NV #x001b)
(define-constant GL_FONT_NUM_GLYPH_INDICES_BIT_NV #x20000000)
(define-constant GL_STANDARD_FONT_FORMAT_NV #x936c)
(define-constant GL_2_BYTES_NV #x1407)
(define-constant GL_3_BYTES_NV #x1408)
(define-constant GL_4_BYTES_NV #x1409)
(define-constant GL_EYE_LINEAR_NV #x2400)
(define-constant GL_OBJECT_LINEAR_NV #x2401)
(define-constant GL_CONSTANT_NV #x8576)
(define-constant GL_PATH_FOG_GEN_MODE_NV #x90ac)
(define-constant GL_PRIMARY_COLOR_NV #x852c)
(define-constant GL_SECONDARY_COLOR_NV #x852d)
(define-constant GL_PATH_GEN_COLOR_FORMAT_NV #x90b2)
(define-constant GL_PATH_PROJECTION_NV #x1701)
(define-constant GL_PATH_MODELVIEW_NV #x1700)
(define-constant GL_PATH_MODELVIEW_STACK_DEPTH_NV #x0ba3)
(define-constant GL_PATH_MODELVIEW_MATRIX_NV #x0ba6)
(define-constant GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV #x0d36)
(define-constant GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV #x84e3)
(define-constant GL_PATH_PROJECTION_STACK_DEPTH_NV #x0ba4)
(define-constant GL_PATH_PROJECTION_MATRIX_NV #x0ba7)
(define-constant GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV #x0d38)
(define-constant GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV #x84e4)
(define-constant GL_FRAGMENT_INPUT_NV #x936d)
(define-constant GL_SHARED_EDGE_NV #x00c0)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_NV #x8878)
(define-constant GL_READ_PIXEL_DATA_RANGE_NV #x8879)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV #x887a)
(define-constant GL_READ_PIXEL_DATA_RANGE_LENGTH_NV #x887b)
(define-constant GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV #x887c)
(define-constant GL_READ_PIXEL_DATA_RANGE_POINTER_NV #x887d)
(define-constant GL_POINT_SPRITE_NV #x8861)
(define-constant GL_COORD_REPLACE_NV #x8862)
(define-constant GL_POINT_SPRITE_R_MODE_NV #x8863)
(define-constant GL_FRAME_NV #x8e26)
(define-constant GL_FIELDS_NV #x8e27)
(define-constant GL_CURRENT_TIME_NV #x8e28)
(define-constant GL_NUM_FILL_STREAMS_NV #x8e29)
(define-constant GL_PRESENT_TIME_NV #x8e2a)
(define-constant GL_PRESENT_DURATION_NV #x8e2b)
(define-constant GL_PRIMITIVE_RESTART_NV #x8558)
(define-constant GL_PRIMITIVE_RESTART_INDEX_NV #x8559)
(define-constant GL_REGISTER_COMBINERS_NV #x8522)
(define-constant GL_VARIABLE_A_NV #x8523)
(define-constant GL_VARIABLE_B_NV #x8524)
(define-constant GL_VARIABLE_C_NV #x8525)
(define-constant GL_VARIABLE_D_NV #x8526)
(define-constant GL_VARIABLE_E_NV #x8527)
(define-constant GL_VARIABLE_F_NV #x8528)
(define-constant GL_VARIABLE_G_NV #x8529)
(define-constant GL_CONSTANT_COLOR0_NV #x852a)
(define-constant GL_CONSTANT_COLOR1_NV #x852b)
(define-constant GL_SPARE0_NV #x852e)
(define-constant GL_SPARE1_NV #x852f)
(define-constant GL_DISCARD_NV #x8530)
(define-constant GL_E_TIMES_F_NV #x8531)
(define-constant GL_SPARE0_PLUS_SECONDARY_COLOR_NV #x8532)
(define-constant GL_UNSIGNED_IDENTITY_NV #x8536)
(define-constant GL_UNSIGNED_INVERT_NV #x8537)
(define-constant GL_EXPAND_NORMAL_NV #x8538)
(define-constant GL_EXPAND_NEGATE_NV #x8539)
(define-constant GL_HALF_BIAS_NORMAL_NV #x853a)
(define-constant GL_HALF_BIAS_NEGATE_NV #x853b)
(define-constant GL_SIGNED_IDENTITY_NV #x853c)
(define-constant GL_SIGNED_NEGATE_NV #x853d)
(define-constant GL_SCALE_BY_TWO_NV #x853e)
(define-constant GL_SCALE_BY_FOUR_NV #x853f)
(define-constant GL_SCALE_BY_ONE_HALF_NV #x8540)
(define-constant GL_BIAS_BY_NEGATIVE_ONE_HALF_NV #x8541)
(define-constant GL_COMBINER_INPUT_NV #x8542)
(define-constant GL_COMBINER_MAPPING_NV #x8543)
(define-constant GL_COMBINER_COMPONENT_USAGE_NV #x8544)
(define-constant GL_COMBINER_AB_DOT_PRODUCT_NV #x8545)
(define-constant GL_COMBINER_CD_DOT_PRODUCT_NV #x8546)
(define-constant GL_COMBINER_MUX_SUM_NV #x8547)
(define-constant GL_COMBINER_SCALE_NV #x8548)
(define-constant GL_COMBINER_BIAS_NV #x8549)
(define-constant GL_COMBINER_AB_OUTPUT_NV #x854a)
(define-constant GL_COMBINER_CD_OUTPUT_NV #x854b)
(define-constant GL_COMBINER_SUM_OUTPUT_NV #x854c)
(define-constant GL_MAX_GENERAL_COMBINERS_NV #x854d)
(define-constant GL_NUM_GENERAL_COMBINERS_NV #x854e)
(define-constant GL_COLOR_SUM_CLAMP_NV #x854f)
(define-constant GL_COMBINER0_NV #x8550)
(define-constant GL_COMBINER1_NV #x8551)
(define-constant GL_COMBINER2_NV #x8552)
(define-constant GL_COMBINER3_NV #x8553)
(define-constant GL_COMBINER4_NV #x8554)
(define-constant GL_COMBINER5_NV #x8555)
(define-constant GL_COMBINER6_NV #x8556)
(define-constant GL_COMBINER7_NV #x8557)
(define-constant GL_PER_STAGE_CONSTANTS_NV #x8535)
(define-constant GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV #x933d)
(define-constant GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV #x933e)
(define-constant GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV #x933f)
(define-constant GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV #x9340)
(define-constant GL_SAMPLE_LOCATION_NV #x8e50)
(define-constant GL_PROGRAMMABLE_SAMPLE_LOCATION_NV #x9341)
(define-constant GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV #x9342)
(define-constant GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV #x9343)
(define-constant GL_BUFFER_GPU_ADDRESS_NV #x8f1d)
(define-constant GL_GPU_ADDRESS_NV #x8f34)
(define-constant GL_MAX_SHADER_BUFFER_ADDRESS_NV #x8f35)
(define-constant GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV #x0010)
(define-constant GL_WARP_SIZE_NV #x9339)
(define-constant GL_WARPS_PER_SM_NV #x933a)
(define-constant GL_SM_COUNT_NV #x933b)
(define-constant GL_MAX_PROGRAM_PATCH_ATTRIBS_NV #x86d8)
(define-constant GL_TESS_CONTROL_PROGRAM_NV #x891e)
(define-constant GL_TESS_EVALUATION_PROGRAM_NV #x891f)
(define-constant GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV #x8c74)
(define-constant GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV #x8c75)
(define-constant GL_EMBOSS_LIGHT_NV #x855d)
(define-constant GL_EMBOSS_CONSTANT_NV #x855e)
(define-constant GL_EMBOSS_MAP_NV #x855f)
(define-constant GL_NORMAL_MAP_NV #x8511)
(define-constant GL_REFLECTION_MAP_NV #x8512)
(define-constant GL_COMBINE4_NV #x8503)
(define-constant GL_SOURCE3_RGB_NV #x8583)
(define-constant GL_SOURCE3_ALPHA_NV #x858b)
(define-constant GL_OPERAND3_RGB_NV #x8593)
(define-constant GL_OPERAND3_ALPHA_NV #x859b)
(define-constant GL_TEXTURE_UNSIGNED_REMAP_MODE_NV #x888f)
(define-constant GL_TEXTURE_COVERAGE_SAMPLES_NV #x9045)
(define-constant GL_TEXTURE_COLOR_SAMPLES_NV #x9046)
(define-constant GL_TEXTURE_RECTANGLE_NV #x84f5)
(define-constant GL_TEXTURE_BINDING_RECTANGLE_NV #x84f6)
(define-constant GL_PROXY_TEXTURE_RECTANGLE_NV #x84f7)
(define-constant GL_MAX_RECTANGLE_TEXTURE_SIZE_NV #x84f8)
(define-constant GL_OFFSET_TEXTURE_RECTANGLE_NV #x864c)
(define-constant GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV #x864d)
(define-constant GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV #x864e)
(define-constant GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV #x86d9)
(define-constant GL_UNSIGNED_INT_S8_S8_8_8_NV #x86da)
(define-constant GL_UNSIGNED_INT_8_8_S8_S8_REV_NV #x86db)
(define-constant GL_DSDT_MAG_INTENSITY_NV #x86dc)
(define-constant GL_SHADER_CONSISTENT_NV #x86dd)
(define-constant GL_TEXTURE_SHADER_NV #x86de)
(define-constant GL_SHADER_OPERATION_NV #x86df)
(define-constant GL_CULL_MODES_NV #x86e0)
(define-constant GL_OFFSET_TEXTURE_MATRIX_NV #x86e1)
(define-constant GL_OFFSET_TEXTURE_SCALE_NV #x86e2)
(define-constant GL_OFFSET_TEXTURE_BIAS_NV #x86e3)
(define-constant GL_OFFSET_TEXTURE_2D_MATRIX_NV #x86e1)
(define-constant GL_OFFSET_TEXTURE_2D_SCALE_NV #x86e2)
(define-constant GL_OFFSET_TEXTURE_2D_BIAS_NV #x86e3)
(define-constant GL_PREVIOUS_TEXTURE_INPUT_NV #x86e4)
(define-constant GL_CONST_EYE_NV #x86e5)
(define-constant GL_PASS_THROUGH_NV #x86e6)
(define-constant GL_CULL_FRAGMENT_NV #x86e7)
(define-constant GL_OFFSET_TEXTURE_2D_NV #x86e8)
(define-constant GL_DEPENDENT_AR_TEXTURE_2D_NV #x86e9)
(define-constant GL_DEPENDENT_GB_TEXTURE_2D_NV #x86ea)
(define-constant GL_DOT_PRODUCT_NV #x86ec)
(define-constant GL_DOT_PRODUCT_DEPTH_REPLACE_NV #x86ed)
(define-constant GL_DOT_PRODUCT_TEXTURE_2D_NV #x86ee)
(define-constant GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV #x86f0)
(define-constant GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV #x86f1)
(define-constant GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV #x86f2)
(define-constant GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV #x86f3)
(define-constant GL_HILO_NV #x86f4)
(define-constant GL_DSDT_NV #x86f5)
(define-constant GL_DSDT_MAG_NV #x86f6)
(define-constant GL_DSDT_MAG_VIB_NV #x86f7)
(define-constant GL_HILO16_NV #x86f8)
(define-constant GL_SIGNED_HILO_NV #x86f9)
(define-constant GL_SIGNED_HILO16_NV #x86fa)
(define-constant GL_SIGNED_RGBA_NV #x86fb)
(define-constant GL_SIGNED_RGBA8_NV #x86fc)
(define-constant GL_SIGNED_RGB_NV #x86fe)
(define-constant GL_SIGNED_RGB8_NV #x86ff)
(define-constant GL_SIGNED_LUMINANCE_NV #x8701)
(define-constant GL_SIGNED_LUMINANCE8_NV #x8702)
(define-constant GL_SIGNED_LUMINANCE_ALPHA_NV #x8703)
(define-constant GL_SIGNED_LUMINANCE8_ALPHA8_NV #x8704)
(define-constant GL_SIGNED_ALPHA_NV #x8705)
(define-constant GL_SIGNED_ALPHA8_NV #x8706)
(define-constant GL_SIGNED_INTENSITY_NV #x8707)
(define-constant GL_SIGNED_INTENSITY8_NV #x8708)
(define-constant GL_DSDT8_NV #x8709)
(define-constant GL_DSDT8_MAG8_NV #x870a)
(define-constant GL_DSDT8_MAG8_INTENSITY8_NV #x870b)
(define-constant GL_SIGNED_RGB_UNSIGNED_ALPHA_NV #x870c)
(define-constant GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV #x870d)
(define-constant GL_HI_SCALE_NV #x870e)
(define-constant GL_LO_SCALE_NV #x870f)
(define-constant GL_DS_SCALE_NV #x8710)
(define-constant GL_DT_SCALE_NV #x8711)
(define-constant GL_MAGNITUDE_SCALE_NV #x8712)
(define-constant GL_VIBRANCE_SCALE_NV #x8713)
(define-constant GL_HI_BIAS_NV #x8714)
(define-constant GL_LO_BIAS_NV #x8715)
(define-constant GL_DS_BIAS_NV #x8716)
(define-constant GL_DT_BIAS_NV #x8717)
(define-constant GL_MAGNITUDE_BIAS_NV #x8718)
(define-constant GL_VIBRANCE_BIAS_NV #x8719)
(define-constant GL_TEXTURE_BORDER_VALUES_NV #x871a)
(define-constant GL_TEXTURE_HI_SIZE_NV #x871b)
(define-constant GL_TEXTURE_LO_SIZE_NV #x871c)
(define-constant GL_TEXTURE_DS_SIZE_NV #x871d)
(define-constant GL_TEXTURE_DT_SIZE_NV #x871e)
(define-constant GL_TEXTURE_MAG_SIZE_NV #x871f)
(define-constant GL_DOT_PRODUCT_TEXTURE_3D_NV #x86ef)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV #x8850)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV #x8851)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV #x8852)
(define-constant GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV #x8853)
(define-constant GL_OFFSET_HILO_TEXTURE_2D_NV #x8854)
(define-constant GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV #x8855)
(define-constant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV #x8856)
(define-constant GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV #x8857)
(define-constant GL_DEPENDENT_HILO_TEXTURE_2D_NV #x8858)
(define-constant GL_DEPENDENT_RGB_TEXTURE_3D_NV #x8859)
(define-constant GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV #x885a)
(define-constant GL_DOT_PRODUCT_PASS_THROUGH_NV #x885b)
(define-constant GL_DOT_PRODUCT_TEXTURE_1D_NV #x885c)
(define-constant GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV #x885d)
(define-constant GL_HILO8_NV #x885e)
(define-constant GL_SIGNED_HILO8_NV #x885f)
(define-constant GL_FORCE_BLUE_TO_ONE_NV #x8860)
(define-constant GL_BACK_PRIMARY_COLOR_NV #x8c77)
(define-constant GL_BACK_SECONDARY_COLOR_NV #x8c78)
(define-constant GL_TEXTURE_COORD_NV #x8c79)
(define-constant GL_CLIP_DISTANCE_NV #x8c7a)
(define-constant GL_VERTEX_ID_NV #x8c7b)
(define-constant GL_PRIMITIVE_ID_NV #x8c7c)
(define-constant GL_GENERIC_ATTRIB_NV #x8c7d)
(define-constant GL_TRANSFORM_FEEDBACK_ATTRIBS_NV #x8c7e)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV #x8c7f)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV #x8c80)
(define-constant GL_ACTIVE_VARYINGS_NV #x8c81)
(define-constant GL_ACTIVE_VARYING_MAX_LENGTH_NV #x8c82)
(define-constant GL_TRANSFORM_FEEDBACK_VARYINGS_NV #x8c83)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_START_NV #x8c84)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV #x8c85)
(define-constant GL_TRANSFORM_FEEDBACK_RECORD_NV #x8c86)
(define-constant GL_PRIMITIVES_GENERATED_NV #x8c87)
(define-constant GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV #x8c88)
(define-constant GL_RASTERIZER_DISCARD_NV #x8c89)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV #x8c8a)
(define-constant GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV #x8c8b)
(define-constant GL_INTERLEAVED_ATTRIBS_NV #x8c8c)
(define-constant GL_SEPARATE_ATTRIBS_NV #x8c8d)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_NV #x8c8e)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV #x8c8f)
(define-constant GL_LAYER_NV #x8daa)
(define-constant GL_TRANSFORM_FEEDBACK_NV #x8e22)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV #x8e23)
(define-constant GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV #x8e24)
(define-constant GL_TRANSFORM_FEEDBACK_BINDING_NV #x8e25)
(define-constant GL_UNIFORM_BUFFER_UNIFIED_NV #x936e)
(define-constant GL_UNIFORM_BUFFER_ADDRESS_NV #x936f)
(define-constant GL_UNIFORM_BUFFER_LENGTH_NV #x9370)
(define-constant GL_SURFACE_STATE_NV #x86eb)
(define-constant GL_SURFACE_REGISTERED_NV #x86fd)
(define-constant GL_SURFACE_MAPPED_NV #x8700)
(define-constant GL_WRITE_DISCARD_NV #x88be)
(define-constant GL_VERTEX_ARRAY_RANGE_NV #x851d)
(define-constant GL_VERTEX_ARRAY_RANGE_LENGTH_NV #x851e)
(define-constant GL_VERTEX_ARRAY_RANGE_VALID_NV #x851f)
(define-constant GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV #x8520)
(define-constant GL_VERTEX_ARRAY_RANGE_POINTER_NV #x8521)
(define-constant GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV #x8533)
(define-constant GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV #x8f1e)
(define-constant GL_ELEMENT_ARRAY_UNIFIED_NV #x8f1f)
(define-constant GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV #x8f20)
(define-constant GL_VERTEX_ARRAY_ADDRESS_NV #x8f21)
(define-constant GL_NORMAL_ARRAY_ADDRESS_NV #x8f22)
(define-constant GL_COLOR_ARRAY_ADDRESS_NV #x8f23)
(define-constant GL_INDEX_ARRAY_ADDRESS_NV #x8f24)
(define-constant GL_TEXTURE_COORD_ARRAY_ADDRESS_NV #x8f25)
(define-constant GL_EDGE_FLAG_ARRAY_ADDRESS_NV #x8f26)
(define-constant GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV #x8f27)
(define-constant GL_FOG_COORD_ARRAY_ADDRESS_NV #x8f28)
(define-constant GL_ELEMENT_ARRAY_ADDRESS_NV #x8f29)
(define-constant GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV #x8f2a)
(define-constant GL_VERTEX_ARRAY_LENGTH_NV #x8f2b)
(define-constant GL_NORMAL_ARRAY_LENGTH_NV #x8f2c)
(define-constant GL_COLOR_ARRAY_LENGTH_NV #x8f2d)
(define-constant GL_INDEX_ARRAY_LENGTH_NV #x8f2e)
(define-constant GL_TEXTURE_COORD_ARRAY_LENGTH_NV #x8f2f)
(define-constant GL_EDGE_FLAG_ARRAY_LENGTH_NV #x8f30)
(define-constant GL_SECONDARY_COLOR_ARRAY_LENGTH_NV #x8f31)
(define-constant GL_FOG_COORD_ARRAY_LENGTH_NV #x8f32)
(define-constant GL_ELEMENT_ARRAY_LENGTH_NV #x8f33)
(define-constant GL_DRAW_INDIRECT_UNIFIED_NV #x8f40)
(define-constant GL_DRAW_INDIRECT_ADDRESS_NV #x8f41)
(define-constant GL_DRAW_INDIRECT_LENGTH_NV #x8f42)
(define-constant GL_VERTEX_PROGRAM_NV #x8620)
(define-constant GL_VERTEX_STATE_PROGRAM_NV #x8621)
(define-constant GL_ATTRIB_ARRAY_SIZE_NV #x8623)
(define-constant GL_ATTRIB_ARRAY_STRIDE_NV #x8624)
(define-constant GL_ATTRIB_ARRAY_TYPE_NV #x8625)
(define-constant GL_CURRENT_ATTRIB_NV #x8626)
(define-constant GL_PROGRAM_LENGTH_NV #x8627)
(define-constant GL_PROGRAM_STRING_NV #x8628)
(define-constant GL_MODELVIEW_PROJECTION_NV #x8629)
(define-constant GL_IDENTITY_NV #x862a)
(define-constant GL_INVERSE_NV #x862b)
(define-constant GL_TRANSPOSE_NV #x862c)
(define-constant GL_INVERSE_TRANSPOSE_NV #x862d)
(define-constant GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV #x862e)
(define-constant GL_MAX_TRACK_MATRICES_NV #x862f)
(define-constant GL_MATRIX0_NV #x8630)
(define-constant GL_MATRIX1_NV #x8631)
(define-constant GL_MATRIX2_NV #x8632)
(define-constant GL_MATRIX3_NV #x8633)
(define-constant GL_MATRIX4_NV #x8634)
(define-constant GL_MATRIX5_NV #x8635)
(define-constant GL_MATRIX6_NV #x8636)
(define-constant GL_MATRIX7_NV #x8637)
(define-constant GL_CURRENT_MATRIX_STACK_DEPTH_NV #x8640)
(define-constant GL_CURRENT_MATRIX_NV #x8641)
(define-constant GL_VERTEX_PROGRAM_POINT_SIZE_NV #x8642)
(define-constant GL_VERTEX_PROGRAM_TWO_SIDE_NV #x8643)
(define-constant GL_PROGRAM_PARAMETER_NV #x8644)
(define-constant GL_ATTRIB_ARRAY_POINTER_NV #x8645)
(define-constant GL_PROGRAM_TARGET_NV #x8646)
(define-constant GL_PROGRAM_RESIDENT_NV #x8647)
(define-constant GL_TRACK_MATRIX_NV #x8648)
(define-constant GL_TRACK_MATRIX_TRANSFORM_NV #x8649)
(define-constant GL_VERTEX_PROGRAM_BINDING_NV #x864a)
(define-constant GL_PROGRAM_ERROR_POSITION_NV #x864b)
(define-constant GL_VERTEX_ATTRIB_ARRAY0_NV #x8650)
(define-constant GL_VERTEX_ATTRIB_ARRAY1_NV #x8651)
(define-constant GL_VERTEX_ATTRIB_ARRAY2_NV #x8652)
(define-constant GL_VERTEX_ATTRIB_ARRAY3_NV #x8653)
(define-constant GL_VERTEX_ATTRIB_ARRAY4_NV #x8654)
(define-constant GL_VERTEX_ATTRIB_ARRAY5_NV #x8655)
(define-constant GL_VERTEX_ATTRIB_ARRAY6_NV #x8656)
(define-constant GL_VERTEX_ATTRIB_ARRAY7_NV #x8657)
(define-constant GL_VERTEX_ATTRIB_ARRAY8_NV #x8658)
(define-constant GL_VERTEX_ATTRIB_ARRAY9_NV #x8659)
(define-constant GL_VERTEX_ATTRIB_ARRAY10_NV #x865a)
(define-constant GL_VERTEX_ATTRIB_ARRAY11_NV #x865b)
(define-constant GL_VERTEX_ATTRIB_ARRAY12_NV #x865c)
(define-constant GL_VERTEX_ATTRIB_ARRAY13_NV #x865d)
(define-constant GL_VERTEX_ATTRIB_ARRAY14_NV #x865e)
(define-constant GL_VERTEX_ATTRIB_ARRAY15_NV #x865f)
(define-constant GL_MAP1_VERTEX_ATTRIB0_4_NV #x8660)
(define-constant GL_MAP1_VERTEX_ATTRIB1_4_NV #x8661)
(define-constant GL_MAP1_VERTEX_ATTRIB2_4_NV #x8662)
(define-constant GL_MAP1_VERTEX_ATTRIB3_4_NV #x8663)
(define-constant GL_MAP1_VERTEX_ATTRIB4_4_NV #x8664)
(define-constant GL_MAP1_VERTEX_ATTRIB5_4_NV #x8665)
(define-constant GL_MAP1_VERTEX_ATTRIB6_4_NV #x8666)
(define-constant GL_MAP1_VERTEX_ATTRIB7_4_NV #x8667)
(define-constant GL_MAP1_VERTEX_ATTRIB8_4_NV #x8668)
(define-constant GL_MAP1_VERTEX_ATTRIB9_4_NV #x8669)
(define-constant GL_MAP1_VERTEX_ATTRIB10_4_NV #x866a)
(define-constant GL_MAP1_VERTEX_ATTRIB11_4_NV #x866b)
(define-constant GL_MAP1_VERTEX_ATTRIB12_4_NV #x866c)
(define-constant GL_MAP1_VERTEX_ATTRIB13_4_NV #x866d)
(define-constant GL_MAP1_VERTEX_ATTRIB14_4_NV #x866e)
(define-constant GL_MAP1_VERTEX_ATTRIB15_4_NV #x866f)
(define-constant GL_MAP2_VERTEX_ATTRIB0_4_NV #x8670)
(define-constant GL_MAP2_VERTEX_ATTRIB1_4_NV #x8671)
(define-constant GL_MAP2_VERTEX_ATTRIB2_4_NV #x8672)
(define-constant GL_MAP2_VERTEX_ATTRIB3_4_NV #x8673)
(define-constant GL_MAP2_VERTEX_ATTRIB4_4_NV #x8674)
(define-constant GL_MAP2_VERTEX_ATTRIB5_4_NV #x8675)
(define-constant GL_MAP2_VERTEX_ATTRIB6_4_NV #x8676)
(define-constant GL_MAP2_VERTEX_ATTRIB7_4_NV #x8677)
(define-constant GL_MAP2_VERTEX_ATTRIB8_4_NV #x8678)
(define-constant GL_MAP2_VERTEX_ATTRIB9_4_NV #x8679)
(define-constant GL_MAP2_VERTEX_ATTRIB10_4_NV #x867a)
(define-constant GL_MAP2_VERTEX_ATTRIB11_4_NV #x867b)
(define-constant GL_MAP2_VERTEX_ATTRIB12_4_NV #x867c)
(define-constant GL_MAP2_VERTEX_ATTRIB13_4_NV #x867d)
(define-constant GL_MAP2_VERTEX_ATTRIB14_4_NV #x867e)
(define-constant GL_MAP2_VERTEX_ATTRIB15_4_NV #x867f)
(define-constant GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV #x88fd)
(define-constant GL_VIDEO_BUFFER_NV #x9020)
(define-constant GL_VIDEO_BUFFER_BINDING_NV #x9021)
(define-constant GL_FIELD_UPPER_NV #x9022)
(define-constant GL_FIELD_LOWER_NV #x9023)
(define-constant GL_NUM_VIDEO_CAPTURE_STREAMS_NV #x9024)
(define-constant GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV #x9025)
(define-constant GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV #x9026)
(define-constant GL_LAST_VIDEO_CAPTURE_STATUS_NV #x9027)
(define-constant GL_VIDEO_BUFFER_PITCH_NV #x9028)
(define-constant GL_VIDEO_COLOR_CONVERSION_MATRIX_NV #x9029)
(define-constant GL_VIDEO_COLOR_CONVERSION_MAX_NV #x902a)
(define-constant GL_VIDEO_COLOR_CONVERSION_MIN_NV #x902b)
(define-constant GL_VIDEO_COLOR_CONVERSION_OFFSET_NV #x902c)
(define-constant GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV #x902d)
(define-constant GL_PARTIAL_SUCCESS_NV #x902e)
(define-constant GL_SUCCESS_NV #x902f)
(define-constant GL_FAILURE_NV #x9030)
(define-constant GL_YCBYCR8_422_NV #x9031)
(define-constant GL_YCBAYCR8A_4224_NV #x9032)
(define-constant GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV #x9033)
(define-constant GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV #x9034)
(define-constant GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV #x9035)
(define-constant GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV #x9036)
(define-constant GL_Z4Y12Z4CB12Z4CR12_444_NV #x9037)
(define-constant GL_VIDEO_CAPTURE_FRAME_WIDTH_NV #x9038)
(define-constant GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV #x9039)
(define-constant GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV #x903a)
(define-constant GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV #x903b)
(define-constant GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV #x903c)
(define-constant GL_INTERLACE_OML #x8980)
(define-constant GL_INTERLACE_READ_OML #x8981)
(define-constant GL_PACK_RESAMPLE_OML #x8984)
(define-constant GL_UNPACK_RESAMPLE_OML #x8985)
(define-constant GL_RESAMPLE_REPLICATE_OML #x8986)
(define-constant GL_RESAMPLE_ZERO_FILL_OML #x8987)
(define-constant GL_RESAMPLE_AVERAGE_OML #x8988)
(define-constant GL_RESAMPLE_DECIMATE_OML #x8989)
(define-constant GL_FORMAT_SUBSAMPLE_24_24_OML #x8982)
(define-constant GL_FORMAT_SUBSAMPLE_244_244_OML #x8983)
(define-constant GL_PREFER_DOUBLEBUFFER_HINT_PGI #x1a1f8)
(define-constant GL_CONSERVE_MEMORY_HINT_PGI #x1a1fd)
(define-constant GL_RECLAIM_MEMORY_HINT_PGI #x1a1fe)
(define-constant GL_NATIVE_GRAPHICS_HANDLE_PGI #x1a202)
(define-constant GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI #x1a203)
(define-constant GL_NATIVE_GRAPHICS_END_HINT_PGI #x1a204)
(define-constant GL_ALWAYS_FAST_HINT_PGI #x1a20c)
(define-constant GL_ALWAYS_SOFT_HINT_PGI #x1a20d)
(define-constant GL_ALLOW_DRAW_OBJ_HINT_PGI #x1a20e)
(define-constant GL_ALLOW_DRAW_WIN_HINT_PGI #x1a20f)
(define-constant GL_ALLOW_DRAW_FRG_HINT_PGI #x1a210)
(define-constant GL_ALLOW_DRAW_MEM_HINT_PGI #x1a211)
(define-constant GL_STRICT_DEPTHFUNC_HINT_PGI #x1a216)
(define-constant GL_STRICT_LIGHTING_HINT_PGI #x1a217)
(define-constant GL_STRICT_SCISSOR_HINT_PGI #x1a218)
(define-constant GL_FULL_STIPPLE_HINT_PGI #x1a219)
(define-constant GL_CLIP_NEAR_HINT_PGI #x1a220)
(define-constant GL_CLIP_FAR_HINT_PGI #x1a221)
(define-constant GL_WIDE_LINE_HINT_PGI #x1a222)
(define-constant GL_BACK_NORMALS_HINT_PGI #x1a223)
(define-constant GL_VERTEX_DATA_HINT_PGI #x1a22a)
(define-constant GL_VERTEX_CONSISTENT_HINT_PGI #x1a22b)
(define-constant GL_MATERIAL_SIDE_HINT_PGI #x1a22c)
(define-constant GL_MAX_VERTEX_HINT_PGI #x1a22d)
(define-constant GL_COLOR3_BIT_PGI #x10000)
(define-constant GL_COLOR4_BIT_PGI #x20000)
(define-constant GL_EDGEFLAG_BIT_PGI #x40000)
(define-constant GL_INDEX_BIT_PGI #x80000)
(define-constant GL_MAT_AMBIENT_BIT_PGI #x100000)
(define-constant GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI #x200000)
(define-constant GL_MAT_DIFFUSE_BIT_PGI #x400000)
(define-constant GL_MAT_EMISSION_BIT_PGI #x800000)
(define-constant GL_MAT_COLOR_INDEXES_BIT_PGI #x1000000)
(define-constant GL_MAT_SHININESS_BIT_PGI #x2000000)
(define-constant GL_MAT_SPECULAR_BIT_PGI #x4000000)
(define-constant GL_NORMAL_BIT_PGI #x8000000)
(define-constant GL_TEXCOORD1_BIT_PGI #x10000000)
(define-constant GL_TEXCOORD2_BIT_PGI #x20000000)
(define-constant GL_TEXCOORD3_BIT_PGI #x40000000)
(define-constant GL_TEXCOORD4_BIT_PGI #x80000000)
(define-constant GL_VERTEX23_BIT_PGI #x0004)
(define-constant GL_VERTEX4_BIT_PGI #x0008)
(define-constant GL_SCREEN_COORDINATES_REND #x8490)
(define-constant GL_INVERTED_SCREEN_W_REND #x8491)
(define-constant GL_RGB_S3TC #x83a0)
(define-constant GL_RGB4_S3TC #x83a1)
(define-constant GL_RGBA_S3TC #x83a2)
(define-constant GL_RGBA4_S3TC #x83a3)
(define-constant GL_RGBA_DXT5_S3TC #x83a4)
(define-constant GL_RGBA4_DXT5_S3TC #x83a5)
(define-constant GL_DETAIL_TEXTURE_2D_SGIS #x8095)
(define-constant GL_DETAIL_TEXTURE_2D_BINDING_SGIS #x8096)
(define-constant GL_LINEAR_DETAIL_SGIS #x8097)
(define-constant GL_LINEAR_DETAIL_ALPHA_SGIS #x8098)
(define-constant GL_LINEAR_DETAIL_COLOR_SGIS #x8099)
(define-constant GL_DETAIL_TEXTURE_LEVEL_SGIS #x809a)
(define-constant GL_DETAIL_TEXTURE_MODE_SGIS #x809b)
(define-constant GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS #x809c)
(define-constant GL_FOG_FUNC_SGIS #x812a)
(define-constant GL_FOG_FUNC_POINTS_SGIS #x812b)
(define-constant GL_MAX_FOG_FUNC_POINTS_SGIS #x812c)
(define-constant GL_GENERATE_MIPMAP_SGIS #x8191)
(define-constant GL_GENERATE_MIPMAP_HINT_SGIS #x8192)
(define-constant GL_MULTISAMPLE_SGIS #x809d)
(define-constant GL_SAMPLE_ALPHA_TO_MASK_SGIS #x809e)
(define-constant GL_SAMPLE_ALPHA_TO_ONE_SGIS #x809f)
(define-constant GL_SAMPLE_MASK_SGIS #x80a0)
(define-constant GL_1PASS_SGIS #x80a1)
(define-constant GL_2PASS_0_SGIS #x80a2)
(define-constant GL_2PASS_1_SGIS #x80a3)
(define-constant GL_4PASS_0_SGIS #x80a4)
(define-constant GL_4PASS_1_SGIS #x80a5)
(define-constant GL_4PASS_2_SGIS #x80a6)
(define-constant GL_4PASS_3_SGIS #x80a7)
(define-constant GL_SAMPLE_BUFFERS_SGIS #x80a8)
(define-constant GL_SAMPLES_SGIS #x80a9)
(define-constant GL_SAMPLE_MASK_VALUE_SGIS #x80aa)
(define-constant GL_SAMPLE_MASK_INVERT_SGIS #x80ab)
(define-constant GL_SAMPLE_PATTERN_SGIS #x80ac)
(define-constant GL_PIXEL_TEXTURE_SGIS #x8353)
(define-constant GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS #x8354)
(define-constant GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS #x8355)
(define-constant GL_PIXEL_GROUP_COLOR_SGIS #x8356)
(define-constant GL_EYE_DISTANCE_TO_POINT_SGIS #x81f0)
(define-constant GL_OBJECT_DISTANCE_TO_POINT_SGIS #x81f1)
(define-constant GL_EYE_DISTANCE_TO_LINE_SGIS #x81f2)
(define-constant GL_OBJECT_DISTANCE_TO_LINE_SGIS #x81f3)
(define-constant GL_EYE_POINT_SGIS #x81f4)
(define-constant GL_OBJECT_POINT_SGIS #x81f5)
(define-constant GL_EYE_LINE_SGIS #x81f6)
(define-constant GL_OBJECT_LINE_SGIS #x81f7)
(define-constant GL_POINT_SIZE_MIN_SGIS #x8126)
(define-constant GL_POINT_SIZE_MAX_SGIS #x8127)
(define-constant GL_POINT_FADE_THRESHOLD_SIZE_SGIS #x8128)
(define-constant GL_DISTANCE_ATTENUATION_SGIS #x8129)
(define-constant GL_LINEAR_SHARPEN_SGIS #x80ad)
(define-constant GL_LINEAR_SHARPEN_ALPHA_SGIS #x80ae)
(define-constant GL_LINEAR_SHARPEN_COLOR_SGIS #x80af)
(define-constant GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS #x80b0)
(define-constant GL_PACK_SKIP_VOLUMES_SGIS #x8130)
(define-constant GL_PACK_IMAGE_DEPTH_SGIS #x8131)
(define-constant GL_UNPACK_SKIP_VOLUMES_SGIS #x8132)
(define-constant GL_UNPACK_IMAGE_DEPTH_SGIS #x8133)
(define-constant GL_TEXTURE_4D_SGIS #x8134)
(define-constant GL_PROXY_TEXTURE_4D_SGIS #x8135)
(define-constant GL_TEXTURE_4DSIZE_SGIS #x8136)
(define-constant GL_TEXTURE_WRAP_Q_SGIS #x8137)
(define-constant GL_MAX_4D_TEXTURE_SIZE_SGIS #x8138)
(define-constant GL_TEXTURE_4D_BINDING_SGIS #x814f)
(define-constant GL_CLAMP_TO_BORDER_SGIS #x812d)
(define-constant GL_TEXTURE_COLOR_WRITEMASK_SGIS #x81ef)
(define-constant GL_CLAMP_TO_EDGE_SGIS #x812f)
(define-constant GL_FILTER4_SGIS #x8146)
(define-constant GL_TEXTURE_FILTER4_SIZE_SGIS #x8147)
(define-constant GL_TEXTURE_MIN_LOD_SGIS #x813a)
(define-constant GL_TEXTURE_MAX_LOD_SGIS #x813b)
(define-constant GL_TEXTURE_BASE_LEVEL_SGIS #x813c)
(define-constant GL_TEXTURE_MAX_LEVEL_SGIS #x813d)
(define-constant GL_DUAL_ALPHA4_SGIS #x8110)
(define-constant GL_DUAL_ALPHA8_SGIS #x8111)
(define-constant GL_DUAL_ALPHA12_SGIS #x8112)
(define-constant GL_DUAL_ALPHA16_SGIS #x8113)
(define-constant GL_DUAL_LUMINANCE4_SGIS #x8114)
(define-constant GL_DUAL_LUMINANCE8_SGIS #x8115)
(define-constant GL_DUAL_LUMINANCE12_SGIS #x8116)
(define-constant GL_DUAL_LUMINANCE16_SGIS #x8117)
(define-constant GL_DUAL_INTENSITY4_SGIS #x8118)
(define-constant GL_DUAL_INTENSITY8_SGIS #x8119)
(define-constant GL_DUAL_INTENSITY12_SGIS #x811a)
(define-constant GL_DUAL_INTENSITY16_SGIS #x811b)
(define-constant GL_DUAL_LUMINANCE_ALPHA4_SGIS #x811c)
(define-constant GL_DUAL_LUMINANCE_ALPHA8_SGIS #x811d)
(define-constant GL_QUAD_ALPHA4_SGIS #x811e)
(define-constant GL_QUAD_ALPHA8_SGIS #x811f)
(define-constant GL_QUAD_LUMINANCE4_SGIS #x8120)
(define-constant GL_QUAD_LUMINANCE8_SGIS #x8121)
(define-constant GL_QUAD_INTENSITY4_SGIS #x8122)
(define-constant GL_QUAD_INTENSITY8_SGIS #x8123)
(define-constant GL_DUAL_TEXTURE_SELECT_SGIS #x8124)
(define-constant GL_QUAD_TEXTURE_SELECT_SGIS #x8125)
(define-constant GL_ASYNC_MARKER_SGIX #x8329)
(define-constant GL_ASYNC_HISTOGRAM_SGIX #x832c)
(define-constant GL_MAX_ASYNC_HISTOGRAM_SGIX #x832d)
(define-constant GL_ASYNC_TEX_IMAGE_SGIX #x835c)
(define-constant GL_ASYNC_DRAW_PIXELS_SGIX #x835d)
(define-constant GL_ASYNC_READ_PIXELS_SGIX #x835e)
(define-constant GL_MAX_ASYNC_TEX_IMAGE_SGIX #x835f)
(define-constant GL_MAX_ASYNC_DRAW_PIXELS_SGIX #x8360)
(define-constant GL_MAX_ASYNC_READ_PIXELS_SGIX #x8361)
(define-constant GL_ALPHA_MIN_SGIX #x8320)
(define-constant GL_ALPHA_MAX_SGIX #x8321)
(define-constant GL_CALLIGRAPHIC_FRAGMENT_SGIX #x8183)
(define-constant GL_LINEAR_CLIPMAP_LINEAR_SGIX #x8170)
(define-constant GL_TEXTURE_CLIPMAP_CENTER_SGIX #x8171)
(define-constant GL_TEXTURE_CLIPMAP_FRAME_SGIX #x8172)
(define-constant GL_TEXTURE_CLIPMAP_OFFSET_SGIX #x8173)
(define-constant GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX #x8174)
(define-constant GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX #x8175)
(define-constant GL_TEXTURE_CLIPMAP_DEPTH_SGIX #x8176)
(define-constant GL_MAX_CLIPMAP_DEPTH_SGIX #x8177)
(define-constant GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX #x8178)
(define-constant GL_NEAREST_CLIPMAP_NEAREST_SGIX #x844d)
(define-constant GL_NEAREST_CLIPMAP_LINEAR_SGIX #x844e)
(define-constant GL_LINEAR_CLIPMAP_NEAREST_SGIX #x844f)
(define-constant GL_CONVOLUTION_HINT_SGIX #x8316)
(define-constant GL_DEPTH_COMPONENT16_SGIX #x81a5)
(define-constant GL_DEPTH_COMPONENT24_SGIX #x81a6)
(define-constant GL_DEPTH_COMPONENT32_SGIX #x81a7)
(define-constant GL_FOG_OFFSET_SGIX #x8198)
(define-constant GL_FOG_OFFSET_VALUE_SGIX #x8199)
(define-constant GL_FRAGMENT_LIGHTING_SGIX #x8400)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_SGIX #x8401)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX #x8402)
(define-constant GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX #x8403)
(define-constant GL_MAX_FRAGMENT_LIGHTS_SGIX #x8404)
(define-constant GL_MAX_ACTIVE_LIGHTS_SGIX #x8405)
(define-constant GL_CURRENT_RASTER_NORMAL_SGIX #x8406)
(define-constant GL_LIGHT_ENV_MODE_SGIX #x8407)
(define-constant GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX #x8408)
(define-constant GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX #x8409)
(define-constant GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX #x840a)
(define-constant GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX #x840b)
(define-constant GL_FRAGMENT_LIGHT0_SGIX #x840c)
(define-constant GL_FRAGMENT_LIGHT1_SGIX #x840d)
(define-constant GL_FRAGMENT_LIGHT2_SGIX #x840e)
(define-constant GL_FRAGMENT_LIGHT3_SGIX #x840f)
(define-constant GL_FRAGMENT_LIGHT4_SGIX #x8410)
(define-constant GL_FRAGMENT_LIGHT5_SGIX #x8411)
(define-constant GL_FRAGMENT_LIGHT6_SGIX #x8412)
(define-constant GL_FRAGMENT_LIGHT7_SGIX #x8413)
(define-constant GL_FRAMEZOOM_SGIX #x818b)
(define-constant GL_FRAMEZOOM_FACTOR_SGIX #x818c)
(define-constant GL_MAX_FRAMEZOOM_FACTOR_SGIX #x818d)
(define-constant GL_INSTRUMENT_BUFFER_POINTER_SGIX #x8180)
(define-constant GL_INSTRUMENT_MEASUREMENTS_SGIX #x8181)
(define-constant GL_INTERLACE_SGIX #x8094)
(define-constant GL_IR_INSTRUMENT1_SGIX #x817f)
(define-constant GL_LIST_PRIORITY_SGIX #x8182)
(define-constant GL_PIXEL_TEX_GEN_SGIX #x8139)
(define-constant GL_PIXEL_TEX_GEN_MODE_SGIX #x832b)
(define-constant GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX #x813e)
(define-constant GL_PIXEL_TILE_CACHE_INCREMENT_SGIX #x813f)
(define-constant GL_PIXEL_TILE_WIDTH_SGIX #x8140)
(define-constant GL_PIXEL_TILE_HEIGHT_SGIX #x8141)
(define-constant GL_PIXEL_TILE_GRID_WIDTH_SGIX #x8142)
(define-constant GL_PIXEL_TILE_GRID_HEIGHT_SGIX #x8143)
(define-constant GL_PIXEL_TILE_GRID_DEPTH_SGIX #x8144)
(define-constant GL_PIXEL_TILE_CACHE_SIZE_SGIX #x8145)
(define-constant GL_TEXTURE_DEFORMATION_BIT_SGIX #x0001)
(define-constant GL_GEOMETRY_DEFORMATION_BIT_SGIX #x0002)
(define-constant GL_GEOMETRY_DEFORMATION_SGIX #x8194)
(define-constant GL_TEXTURE_DEFORMATION_SGIX #x8195)
(define-constant GL_DEFORMATIONS_MASK_SGIX #x8196)
(define-constant GL_MAX_DEFORMATION_ORDER_SGIX #x8197)
(define-constant GL_REFERENCE_PLANE_SGIX #x817d)
(define-constant GL_REFERENCE_PLANE_EQUATION_SGIX #x817e)
(define-constant GL_PACK_RESAMPLE_SGIX #x842c)
(define-constant GL_UNPACK_RESAMPLE_SGIX #x842d)
(define-constant GL_RESAMPLE_REPLICATE_SGIX #x842e)
(define-constant GL_RESAMPLE_ZERO_FILL_SGIX #x842f)
(define-constant GL_RESAMPLE_DECIMATE_SGIX #x8430)
(define-constant GL_SCALEBIAS_HINT_SGIX #x8322)
(define-constant GL_TEXTURE_COMPARE_SGIX #x819a)
(define-constant GL_TEXTURE_COMPARE_OPERATOR_SGIX #x819b)
(define-constant GL_TEXTURE_LEQUAL_R_SGIX #x819c)
(define-constant GL_TEXTURE_GEQUAL_R_SGIX #x819d)
(define-constant GL_SHADOW_AMBIENT_SGIX #x80bf)
(define-constant GL_SPRITE_SGIX #x8148)
(define-constant GL_SPRITE_MODE_SGIX #x8149)
(define-constant GL_SPRITE_AXIS_SGIX #x814a)
(define-constant GL_SPRITE_TRANSLATION_SGIX #x814b)
(define-constant GL_SPRITE_AXIAL_SGIX #x814c)
(define-constant GL_SPRITE_OBJECT_ALIGNED_SGIX #x814d)
(define-constant GL_SPRITE_EYE_ALIGNED_SGIX #x814e)
(define-constant GL_PACK_SUBSAMPLE_RATE_SGIX #x85a0)
(define-constant GL_UNPACK_SUBSAMPLE_RATE_SGIX #x85a1)
(define-constant GL_PIXEL_SUBSAMPLE_4444_SGIX #x85a2)
(define-constant GL_PIXEL_SUBSAMPLE_2424_SGIX #x85a3)
(define-constant GL_PIXEL_SUBSAMPLE_4242_SGIX #x85a4)
(define-constant GL_TEXTURE_ENV_BIAS_SGIX #x80be)
(define-constant GL_TEXTURE_MAX_CLAMP_S_SGIX #x8369)
(define-constant GL_TEXTURE_MAX_CLAMP_T_SGIX #x836a)
(define-constant GL_TEXTURE_MAX_CLAMP_R_SGIX #x836b)
(define-constant GL_TEXTURE_LOD_BIAS_S_SGIX #x818e)
(define-constant GL_TEXTURE_LOD_BIAS_T_SGIX #x818f)
(define-constant GL_TEXTURE_LOD_BIAS_R_SGIX #x8190)
(define-constant GL_TEXTURE_MULTI_BUFFER_HINT_SGIX #x812e)
(define-constant GL_POST_TEXTURE_FILTER_BIAS_SGIX #x8179)
(define-constant GL_POST_TEXTURE_FILTER_SCALE_SGIX #x817a)
(define-constant GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX #x817b)
(define-constant GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX #x817c)
(define-constant GL_VERTEX_PRECLIP_SGIX #x83ee)
(define-constant GL_VERTEX_PRECLIP_HINT_SGIX #x83ef)
(define-constant GL_YCRCB_422_SGIX #x81bb)
(define-constant GL_YCRCB_444_SGIX #x81bc)
(define-constant GL_YCRCB_SGIX #x8318)
(define-constant GL_YCRCBA_SGIX #x8319)
(define-constant GL_COLOR_MATRIX_SGI #x80b1)
(define-constant GL_COLOR_MATRIX_STACK_DEPTH_SGI #x80b2)
(define-constant GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI #x80b3)
(define-constant GL_POST_COLOR_MATRIX_RED_SCALE_SGI #x80b4)
(define-constant GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI #x80b5)
(define-constant GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI #x80b6)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI #x80b7)
(define-constant GL_POST_COLOR_MATRIX_RED_BIAS_SGI #x80b8)
(define-constant GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI #x80b9)
(define-constant GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI #x80ba)
(define-constant GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI #x80bb)
(define-constant GL_COLOR_TABLE_SGI #x80d0)
(define-constant GL_POST_CONVOLUTION_COLOR_TABLE_SGI #x80d1)
(define-constant GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI #x80d2)
(define-constant GL_PROXY_COLOR_TABLE_SGI #x80d3)
(define-constant GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI #x80d4)
(define-constant GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI #x80d5)
(define-constant GL_COLOR_TABLE_SCALE_SGI #x80d6)
(define-constant GL_COLOR_TABLE_BIAS_SGI #x80d7)
(define-constant GL_COLOR_TABLE_FORMAT_SGI #x80d8)
(define-constant GL_COLOR_TABLE_WIDTH_SGI #x80d9)
(define-constant GL_COLOR_TABLE_RED_SIZE_SGI #x80da)
(define-constant GL_COLOR_TABLE_GREEN_SIZE_SGI #x80db)
(define-constant GL_COLOR_TABLE_BLUE_SIZE_SGI #x80dc)
(define-constant GL_COLOR_TABLE_ALPHA_SIZE_SGI #x80dd)
(define-constant GL_COLOR_TABLE_LUMINANCE_SIZE_SGI #x80de)
(define-constant GL_COLOR_TABLE_INTENSITY_SIZE_SGI #x80df)
(define-constant GL_TEXTURE_COLOR_TABLE_SGI #x80bc)
(define-constant GL_PROXY_TEXTURE_COLOR_TABLE_SGI #x80bd)
(define-constant GL_UNPACK_CONSTANT_DATA_SUNX #x81d5)
(define-constant GL_TEXTURE_CONSTANT_DATA_SUNX #x81d6)
(define-constant GL_WRAP_BORDER_SUN #x81d4)
(define-constant GL_GLOBAL_ALPHA_SUN #x81d9)
(define-constant GL_GLOBAL_ALPHA_FACTOR_SUN #x81da)
(define-constant GL_QUAD_MESH_SUN #x8614)
(define-constant GL_TRIANGLE_MESH_SUN #x8615)
(define-constant GL_SLICE_ACCUM_SUN #x85cc)
(define-constant GL_RESTART_SUN #x0001)
(define-constant GL_REPLACE_MIDDLE_SUN #x0002)
(define-constant GL_REPLACE_OLDEST_SUN #x0003)
(define-constant GL_TRIANGLE_LIST_SUN #x81d7)
(define-constant GL_REPLACEMENT_CODE_SUN #x81d8)
(define-constant GL_REPLACEMENT_CODE_ARRAY_SUN #x85c0)
(define-constant GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN #x85c1)
(define-constant GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN #x85c2)
(define-constant GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN #x85c3)
(define-constant GL_R1UI_V3F_SUN #x85c4)
(define-constant GL_R1UI_C4UB_V3F_SUN #x85c5)
(define-constant GL_R1UI_C3F_V3F_SUN #x85c6)
(define-constant GL_R1UI_N3F_V3F_SUN #x85c7)
(define-constant GL_R1UI_C4F_N3F_V3F_SUN #x85c8)
(define-constant GL_R1UI_T2F_V3F_SUN #x85c9)
(define-constant GL_R1UI_T2F_N3F_V3F_SUN #x85ca)
(define-constant GL_R1UI_T2F_C4F_N3F_V3F_SUN #x85cb)
(define-constant GL_PHONG_WIN #x80ea)
(define-constant GL_PHONG_HINT_WIN #x80eb)
(define-constant GL_FOG_SPECULAR_TEXTURE_WIN #x80ec)

;; API entry points
(define-entry-point glDrawRangeElements PFNGLDRAWRANGEELEMENTSPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);")
(define-entry-point glTexImage3D PFNGLTEXIMAGE3DPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTexSubImage3D PFNGLTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCopyTexSubImage3D PFNGLCOPYTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glActiveTexture PFNGLACTIVETEXTUREPROC "typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);")
(define-entry-point glSampleCoverage PFNGLSAMPLECOVERAGEPROC "typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);")
(define-entry-point glCompressedTexImage3D PFNGLCOMPRESSEDTEXIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexImage2D PFNGLCOMPRESSEDTEXIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexImage1D PFNGLCOMPRESSEDTEXIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage3D PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage2D PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage1D PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glGetCompressedTexImage PFNGLGETCOMPRESSEDTEXIMAGEPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);")
(define-entry-point glClientActiveTexture PFNGLCLIENTACTIVETEXTUREPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);")
(define-entry-point glMultiTexCoord1d PFNGLMULTITEXCOORD1DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);")
(define-entry-point glMultiTexCoord1dv PFNGLMULTITEXCOORD1DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord1f PFNGLMULTITEXCOORD1FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);")
(define-entry-point glMultiTexCoord1fv PFNGLMULTITEXCOORD1FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord1i PFNGLMULTITEXCOORD1IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);")
(define-entry-point glMultiTexCoord1iv PFNGLMULTITEXCOORD1IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord1s PFNGLMULTITEXCOORD1SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);")
(define-entry-point glMultiTexCoord1sv PFNGLMULTITEXCOORD1SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord2d PFNGLMULTITEXCOORD2DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);")
(define-entry-point glMultiTexCoord2dv PFNGLMULTITEXCOORD2DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord2f PFNGLMULTITEXCOORD2FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);")
(define-entry-point glMultiTexCoord2fv PFNGLMULTITEXCOORD2FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord2i PFNGLMULTITEXCOORD2IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);")
(define-entry-point glMultiTexCoord2iv PFNGLMULTITEXCOORD2IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord2s PFNGLMULTITEXCOORD2SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);")
(define-entry-point glMultiTexCoord2sv PFNGLMULTITEXCOORD2SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord3d PFNGLMULTITEXCOORD3DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);")
(define-entry-point glMultiTexCoord3dv PFNGLMULTITEXCOORD3DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord3f PFNGLMULTITEXCOORD3FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);")
(define-entry-point glMultiTexCoord3fv PFNGLMULTITEXCOORD3FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord3i PFNGLMULTITEXCOORD3IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);")
(define-entry-point glMultiTexCoord3iv PFNGLMULTITEXCOORD3IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord3s PFNGLMULTITEXCOORD3SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);")
(define-entry-point glMultiTexCoord3sv PFNGLMULTITEXCOORD3SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord4d PFNGLMULTITEXCOORD4DPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);")
(define-entry-point glMultiTexCoord4dv PFNGLMULTITEXCOORD4DVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord4f PFNGLMULTITEXCOORD4FPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);")
(define-entry-point glMultiTexCoord4fv PFNGLMULTITEXCOORD4FVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord4i PFNGLMULTITEXCOORD4IPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);")
(define-entry-point glMultiTexCoord4iv PFNGLMULTITEXCOORD4IVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord4s PFNGLMULTITEXCOORD4SPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);")
(define-entry-point glMultiTexCoord4sv PFNGLMULTITEXCOORD4SVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);")
(define-entry-point glLoadTransposeMatrixf PFNGLLOADTRANSPOSEMATRIXFPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);")
(define-entry-point glLoadTransposeMatrixd PFNGLLOADTRANSPOSEMATRIXDPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);")
(define-entry-point glMultTransposeMatrixf PFNGLMULTTRANSPOSEMATRIXFPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);")
(define-entry-point glMultTransposeMatrixd PFNGLMULTTRANSPOSEMATRIXDPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);")
(define-entry-point glBlendFuncSeparate PFNGLBLENDFUNCSEPARATEPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glMultiDrawArrays PFNGLMULTIDRAWARRAYSPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);")
(define-entry-point glMultiDrawElements PFNGLMULTIDRAWELEMENTSPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);")
(define-entry-point glPointParameterf PFNGLPOINTPARAMETERFPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfv PFNGLPOINTPARAMETERFVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glPointParameteri PFNGLPOINTPARAMETERIPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);")
(define-entry-point glPointParameteriv PFNGLPOINTPARAMETERIVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glFogCoordf PFNGLFOGCOORDFPROC "typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);")
(define-entry-point glFogCoordfv PFNGLFOGCOORDFVPROC "typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);")
(define-entry-point glFogCoordd PFNGLFOGCOORDDPROC "typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);")
(define-entry-point glFogCoorddv PFNGLFOGCOORDDVPROC "typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);")
(define-entry-point glFogCoordPointer PFNGLFOGCOORDPOINTERPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glSecondaryColor3b PFNGLSECONDARYCOLOR3BPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);")
(define-entry-point glSecondaryColor3bv PFNGLSECONDARYCOLOR3BVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);")
(define-entry-point glSecondaryColor3d PFNGLSECONDARYCOLOR3DPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);")
(define-entry-point glSecondaryColor3dv PFNGLSECONDARYCOLOR3DVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);")
(define-entry-point glSecondaryColor3f PFNGLSECONDARYCOLOR3FPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);")
(define-entry-point glSecondaryColor3fv PFNGLSECONDARYCOLOR3FVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);")
(define-entry-point glSecondaryColor3i PFNGLSECONDARYCOLOR3IPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);")
(define-entry-point glSecondaryColor3iv PFNGLSECONDARYCOLOR3IVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);")
(define-entry-point glSecondaryColor3s PFNGLSECONDARYCOLOR3SPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);")
(define-entry-point glSecondaryColor3sv PFNGLSECONDARYCOLOR3SVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);")
(define-entry-point glSecondaryColor3ub PFNGLSECONDARYCOLOR3UBPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);")
(define-entry-point glSecondaryColor3ubv PFNGLSECONDARYCOLOR3UBVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);")
(define-entry-point glSecondaryColor3ui PFNGLSECONDARYCOLOR3UIPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);")
(define-entry-point glSecondaryColor3uiv PFNGLSECONDARYCOLOR3UIVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);")
(define-entry-point glSecondaryColor3us PFNGLSECONDARYCOLOR3USPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);")
(define-entry-point glSecondaryColor3usv PFNGLSECONDARYCOLOR3USVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);")
(define-entry-point glSecondaryColorPointer PFNGLSECONDARYCOLORPOINTERPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glWindowPos2d PFNGLWINDOWPOS2DPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dv PFNGLWINDOWPOS2DVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2f PFNGLWINDOWPOS2FPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fv PFNGLWINDOWPOS2FVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2i PFNGLWINDOWPOS2IPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2iv PFNGLWINDOWPOS2IVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);")
(define-entry-point glWindowPos2s PFNGLWINDOWPOS2SPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2sv PFNGLWINDOWPOS2SVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);")
(define-entry-point glWindowPos3d PFNGLWINDOWPOS3DPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dv PFNGLWINDOWPOS3DVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3f PFNGLWINDOWPOS3FPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fv PFNGLWINDOWPOS3FVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3i PFNGLWINDOWPOS3IPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3iv PFNGLWINDOWPOS3IVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);")
(define-entry-point glWindowPos3s PFNGLWINDOWPOS3SPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3sv PFNGLWINDOWPOS3SVPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);")
(define-entry-point glBlendColor PFNGLBLENDCOLORPROC "typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);")
(define-entry-point glBlendEquation PFNGLBLENDEQUATIONPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);")
(define-entry-point glGenQueries PFNGLGENQUERIESPROC "typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteQueries PFNGLDELETEQUERIESPROC "typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsQuery PFNGLISQUERYPROC "typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);")
(define-entry-point glBeginQuery PFNGLBEGINQUERYPROC "typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);")
(define-entry-point glEndQuery PFNGLENDQUERYPROC "typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);")
(define-entry-point glGetQueryiv PFNGLGETQUERYIVPROC "typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectiv PFNGLGETQUERYOBJECTIVPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectuiv PFNGLGETQUERYOBJECTUIVPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glBindBuffer PFNGLBINDBUFFERPROC "typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);")
(define-entry-point glDeleteBuffers PFNGLDELETEBUFFERSPROC "typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);")
(define-entry-point glGenBuffers PFNGLGENBUFFERSPROC "typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);")
(define-entry-point glIsBuffer PFNGLISBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);")
(define-entry-point glBufferData PFNGLBUFFERDATAPROC "typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);")
(define-entry-point glBufferSubData PFNGLBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);")
(define-entry-point glGetBufferSubData PFNGLGETBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);")
(define-entry-point glMapBuffer PFNGLMAPBUFFERPROC "typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);")
(define-entry-point glUnmapBuffer PFNGLUNMAPBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);")
(define-entry-point glGetBufferParameteriv PFNGLGETBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetBufferPointerv PFNGLGETBUFFERPOINTERVPROC "typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);")
(define-entry-point glBlendEquationSeparate PFNGLBLENDEQUATIONSEPARATEPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glDrawBuffers PFNGLDRAWBUFFERSPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glStencilOpSeparate PFNGLSTENCILOPSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);")
(define-entry-point glStencilFuncSeparate PFNGLSTENCILFUNCSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);")
(define-entry-point glStencilMaskSeparate PFNGLSTENCILMASKSEPARATEPROC "typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);")
(define-entry-point glAttachShader PFNGLATTACHSHADERPROC "typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);")
(define-entry-point glBindAttribLocation PFNGLBINDATTRIBLOCATIONPROC "typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);")
(define-entry-point glCompileShader PFNGLCOMPILESHADERPROC "typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);")
(define-entry-point glCreateProgram PFNGLCREATEPROGRAMPROC "typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);")
(define-entry-point glCreateShader PFNGLCREATESHADERPROC "typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);")
(define-entry-point glDeleteProgram PFNGLDELETEPROGRAMPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);")
(define-entry-point glDeleteShader PFNGLDELETESHADERPROC "typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);")
(define-entry-point glDetachShader PFNGLDETACHSHADERPROC "typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);")
(define-entry-point glDisableVertexAttribArray PFNGLDISABLEVERTEXATTRIBARRAYPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);")
(define-entry-point glEnableVertexAttribArray PFNGLENABLEVERTEXATTRIBARRAYPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);")
(define-entry-point glGetActiveAttrib PFNGLGETACTIVEATTRIBPROC "typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);")
(define-entry-point glGetActiveUniform PFNGLGETACTIVEUNIFORMPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);")
(define-entry-point glGetAttachedShaders PFNGLGETATTACHEDSHADERSPROC "typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);")
(define-entry-point glGetAttribLocation PFNGLGETATTRIBLOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetProgramiv PFNGLGETPROGRAMIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);")
(define-entry-point glGetProgramInfoLog PFNGLGETPROGRAMINFOLOGPROC "typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);")
(define-entry-point glGetShaderiv PFNGLGETSHADERIVPROC "typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);")
(define-entry-point glGetShaderInfoLog PFNGLGETSHADERINFOLOGPROC "typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);")
(define-entry-point glGetShaderSource PFNGLGETSHADERSOURCEPROC "typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);")
(define-entry-point glGetUniformLocation PFNGLGETUNIFORMLOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetUniformfv PFNGLGETUNIFORMFVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);")
(define-entry-point glGetUniformiv PFNGLGETUNIFORMIVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);")
(define-entry-point glGetVertexAttribdv PFNGLGETVERTEXATTRIBDVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfv PFNGLGETVERTEXATTRIBFVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribiv PFNGLGETVERTEXATTRIBIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointerv PFNGLGETVERTEXATTRIBPOINTERVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);")
(define-entry-point glIsProgram PFNGLISPROGRAMPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);")
(define-entry-point glIsShader PFNGLISSHADERPROC "typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);")
(define-entry-point glLinkProgram PFNGLLINKPROGRAMPROC "typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);")
(define-entry-point glShaderSource PFNGLSHADERSOURCEPROC "typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);")
(define-entry-point glUseProgram PFNGLUSEPROGRAMPROC "typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);")
(define-entry-point glUniform1f PFNGLUNIFORM1FPROC "typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);")
(define-entry-point glUniform2f PFNGLUNIFORM2FPROC "typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glUniform3f PFNGLUNIFORM3FPROC "typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glUniform4f PFNGLUNIFORM4FPROC "typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glUniform1i PFNGLUNIFORM1IPROC "typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);")
(define-entry-point glUniform2i PFNGLUNIFORM2IPROC "typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);")
(define-entry-point glUniform3i PFNGLUNIFORM3IPROC "typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glUniform4i PFNGLUNIFORM4IPROC "typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glUniform1fv PFNGLUNIFORM1FVPROC "typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform2fv PFNGLUNIFORM2FVPROC "typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform3fv PFNGLUNIFORM3FVPROC "typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform4fv PFNGLUNIFORM4FVPROC "typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform1iv PFNGLUNIFORM1IVPROC "typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform2iv PFNGLUNIFORM2IVPROC "typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform3iv PFNGLUNIFORM3IVPROC "typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform4iv PFNGLUNIFORM4IVPROC "typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniformMatrix2fv PFNGLUNIFORMMATRIX2FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3fv PFNGLUNIFORMMATRIX3FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4fv PFNGLUNIFORMMATRIX4FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glValidateProgram PFNGLVALIDATEPROGRAMPROC "typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);")
(define-entry-point glVertexAttrib1d PFNGLVERTEXATTRIB1DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dv PFNGLVERTEXATTRIB1DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1f PFNGLVERTEXATTRIB1FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fv PFNGLVERTEXATTRIB1FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1s PFNGLVERTEXATTRIB1SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1sv PFNGLVERTEXATTRIB1SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2d PFNGLVERTEXATTRIB2DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dv PFNGLVERTEXATTRIB2DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2f PFNGLVERTEXATTRIB2FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fv PFNGLVERTEXATTRIB2FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2s PFNGLVERTEXATTRIB2SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2sv PFNGLVERTEXATTRIB2SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3d PFNGLVERTEXATTRIB3DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dv PFNGLVERTEXATTRIB3DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3f PFNGLVERTEXATTRIB3FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fv PFNGLVERTEXATTRIB3FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3s PFNGLVERTEXATTRIB3SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3sv PFNGLVERTEXATTRIB3SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4Nbv PFNGLVERTEXATTRIB4NBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4Niv PFNGLVERTEXATTRIB4NIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4Nsv PFNGLVERTEXATTRIB4NSVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4Nub PFNGLVERTEXATTRIB4NUBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4Nubv PFNGLVERTEXATTRIB4NUBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4Nuiv PFNGLVERTEXATTRIB4NUIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4Nusv PFNGLVERTEXATTRIB4NUSVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttrib4bv PFNGLVERTEXATTRIB4BVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4d PFNGLVERTEXATTRIB4DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dv PFNGLVERTEXATTRIB4DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4f PFNGLVERTEXATTRIB4FPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fv PFNGLVERTEXATTRIB4FVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4iv PFNGLVERTEXATTRIB4IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4s PFNGLVERTEXATTRIB4SPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4sv PFNGLVERTEXATTRIB4SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubv PFNGLVERTEXATTRIB4UBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4uiv PFNGLVERTEXATTRIB4UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4usv PFNGLVERTEXATTRIB4USVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttribPointer PFNGLVERTEXATTRIBPOINTERPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);")
(define-entry-point glUniformMatrix2x3fv PFNGLUNIFORMMATRIX2X3FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3x2fv PFNGLUNIFORMMATRIX3X2FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix2x4fv PFNGLUNIFORMMATRIX2X4FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4x2fv PFNGLUNIFORMMATRIX4X2FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3x4fv PFNGLUNIFORMMATRIX3X4FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4x3fv PFNGLUNIFORMMATRIX4X3FVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glColorMaski PFNGLCOLORMASKIPROC "typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);")
(define-entry-point glGetBooleani_v PFNGLGETBOOLEANI_VPROC "typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);")
(define-entry-point glGetIntegeri_v PFNGLGETINTEGERI_VPROC "typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);")
(define-entry-point glEnablei PFNGLENABLEIPROC "typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);")
(define-entry-point glDisablei PFNGLDISABLEIPROC "typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);")
(define-entry-point glIsEnabledi PFNGLISENABLEDIPROC "typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);")
(define-entry-point glBeginTransformFeedback PFNGLBEGINTRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);")
(define-entry-point glEndTransformFeedback PFNGLENDTRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);")
(define-entry-point glBindBufferRange PFNGLBINDBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);")
(define-entry-point glBindBufferBase PFNGLBINDBUFFERBASEPROC "typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);")
(define-entry-point glTransformFeedbackVaryings PFNGLTRANSFORMFEEDBACKVARYINGSPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);")
(define-entry-point glGetTransformFeedbackVarying PFNGLGETTRANSFORMFEEDBACKVARYINGPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);")
(define-entry-point glClampColor PFNGLCLAMPCOLORPROC "typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);")
(define-entry-point glBeginConditionalRender PFNGLBEGINCONDITIONALRENDERPROC "typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);")
(define-entry-point glEndConditionalRender PFNGLENDCONDITIONALRENDERPROC "typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);")
(define-entry-point glVertexAttribIPointer PFNGLVERTEXATTRIBIPOINTERPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glGetVertexAttribIiv PFNGLGETVERTEXATTRIBIIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribIuiv PFNGLGETVERTEXATTRIBIUIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);")
(define-entry-point glVertexAttribI1i PFNGLVERTEXATTRIBI1IPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);")
(define-entry-point glVertexAttribI2i PFNGLVERTEXATTRIBI2IPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);")
(define-entry-point glVertexAttribI3i PFNGLVERTEXATTRIBI3IPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);")
(define-entry-point glVertexAttribI4i PFNGLVERTEXATTRIBI4IPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glVertexAttribI1ui PFNGLVERTEXATTRIBI1UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);")
(define-entry-point glVertexAttribI2ui PFNGLVERTEXATTRIBI2UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);")
(define-entry-point glVertexAttribI3ui PFNGLVERTEXATTRIBI3UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);")
(define-entry-point glVertexAttribI4ui PFNGLVERTEXATTRIBI4UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);")
(define-entry-point glVertexAttribI1iv PFNGLVERTEXATTRIBI1IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI2iv PFNGLVERTEXATTRIBI2IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI3iv PFNGLVERTEXATTRIBI3IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI4iv PFNGLVERTEXATTRIBI4IVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI1uiv PFNGLVERTEXATTRIBI1UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI2uiv PFNGLVERTEXATTRIBI2UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI3uiv PFNGLVERTEXATTRIBI3UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI4uiv PFNGLVERTEXATTRIBI4UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI4bv PFNGLVERTEXATTRIBI4BVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttribI4sv PFNGLVERTEXATTRIBI4SVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttribI4ubv PFNGLVERTEXATTRIBI4UBVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttribI4usv PFNGLVERTEXATTRIBI4USVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);")
(define-entry-point glGetUniformuiv PFNGLGETUNIFORMUIVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);")
(define-entry-point glBindFragDataLocation PFNGLBINDFRAGDATALOCATIONPROC "typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);")
(define-entry-point glGetFragDataLocation PFNGLGETFRAGDATALOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);")
(define-entry-point glUniform1ui PFNGLUNIFORM1UIPROC "typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);")
(define-entry-point glUniform2ui PFNGLUNIFORM2UIPROC "typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);")
(define-entry-point glUniform3ui PFNGLUNIFORM3UIPROC "typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);")
(define-entry-point glUniform4ui PFNGLUNIFORM4UIPROC "typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);")
(define-entry-point glUniform1uiv PFNGLUNIFORM1UIVPROC "typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform2uiv PFNGLUNIFORM2UIVPROC "typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform3uiv PFNGLUNIFORM3UIVPROC "typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform4uiv PFNGLUNIFORM4UIVPROC "typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glTexParameterIiv PFNGLTEXPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glTexParameterIuiv PFNGLTEXPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);")
(define-entry-point glGetTexParameterIiv PFNGLGETTEXPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetTexParameterIuiv PFNGLGETTEXPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);")
(define-entry-point glClearBufferiv PFNGLCLEARBUFFERIVPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);")
(define-entry-point glClearBufferuiv PFNGLCLEARBUFFERUIVPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);")
(define-entry-point glClearBufferfv PFNGLCLEARBUFFERFVPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);")
(define-entry-point glClearBufferfi PFNGLCLEARBUFFERFIPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);")
(define-entry-point glGetStringi PFNGLGETSTRINGIPROC "typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);")
(define-entry-point glIsRenderbuffer PFNGLISRENDERBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);")
(define-entry-point glBindRenderbuffer PFNGLBINDRENDERBUFFERPROC "typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);")
(define-entry-point glDeleteRenderbuffers PFNGLDELETERENDERBUFFERSPROC "typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);")
(define-entry-point glGenRenderbuffers PFNGLGENRENDERBUFFERSPROC "typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);")
(define-entry-point glRenderbufferStorage PFNGLRENDERBUFFERSTORAGEPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glGetRenderbufferParameteriv PFNGLGETRENDERBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glIsFramebuffer PFNGLISFRAMEBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);")
(define-entry-point glBindFramebuffer PFNGLBINDFRAMEBUFFERPROC "typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);")
(define-entry-point glDeleteFramebuffers PFNGLDELETEFRAMEBUFFERSPROC "typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);")
(define-entry-point glGenFramebuffers PFNGLGENFRAMEBUFFERSPROC "typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);")
(define-entry-point glCheckFramebufferStatus PFNGLCHECKFRAMEBUFFERSTATUSPROC "typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);")
(define-entry-point glFramebufferTexture1D PFNGLFRAMEBUFFERTEXTURE1DPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture2D PFNGLFRAMEBUFFERTEXTURE2DPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture3D PFNGLFRAMEBUFFERTEXTURE3DPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);")
(define-entry-point glFramebufferRenderbuffer PFNGLFRAMEBUFFERRENDERBUFFERPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);")
(define-entry-point glGetFramebufferAttachmentParameteriv PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);")
(define-entry-point glGenerateMipmap PFNGLGENERATEMIPMAPPROC "typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);")
(define-entry-point glBlitFramebuffer PFNGLBLITFRAMEBUFFERPROC "typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);")
(define-entry-point glRenderbufferStorageMultisample PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glFramebufferTextureLayer PFNGLFRAMEBUFFERTEXTURELAYERPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);")
(define-entry-point glMapBufferRange PFNGLMAPBUFFERRANGEPROC "typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);")
(define-entry-point glFlushMappedBufferRange PFNGLFLUSHMAPPEDBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);")
(define-entry-point glBindVertexArray PFNGLBINDVERTEXARRAYPROC "typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);")
(define-entry-point glDeleteVertexArrays PFNGLDELETEVERTEXARRAYSPROC "typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);")
(define-entry-point glGenVertexArrays PFNGLGENVERTEXARRAYSPROC "typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);")
(define-entry-point glIsVertexArray PFNGLISVERTEXARRAYPROC "typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);")
(define-entry-point glDrawArraysInstanced PFNGLDRAWARRAYSINSTANCEDPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);")
(define-entry-point glDrawElementsInstanced PFNGLDRAWELEMENTSINSTANCEDPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);")
(define-entry-point glTexBuffer PFNGLTEXBUFFERPROC "typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);")
(define-entry-point glPrimitiveRestartIndex PFNGLPRIMITIVERESTARTINDEXPROC "typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);")
(define-entry-point glCopyBufferSubData PFNGLCOPYBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);")
(define-entry-point glGetUniformIndices PFNGLGETUNIFORMINDICESPROC "typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);")
(define-entry-point glGetActiveUniformsiv PFNGLGETACTIVEUNIFORMSIVPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);")
(define-entry-point glGetActiveUniformName PFNGLGETACTIVEUNIFORMNAMEPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);")
(define-entry-point glGetUniformBlockIndex PFNGLGETUNIFORMBLOCKINDEXPROC "typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);")
(define-entry-point glGetActiveUniformBlockiv PFNGLGETACTIVEUNIFORMBLOCKIVPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);")
(define-entry-point glGetActiveUniformBlockName PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);")
(define-entry-point glUniformBlockBinding PFNGLUNIFORMBLOCKBINDINGPROC "typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);")
(define-entry-point glDrawElementsBaseVertex PFNGLDRAWELEMENTSBASEVERTEXPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);")
(define-entry-point glDrawRangeElementsBaseVertex PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);")
(define-entry-point glDrawElementsInstancedBaseVertex PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);")
(define-entry-point glMultiDrawElementsBaseVertex PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);")
(define-entry-point glProvokingVertex PFNGLPROVOKINGVERTEXPROC "typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);")
(define-entry-point glFenceSync PFNGLFENCESYNCPROC "typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);")
(define-entry-point glIsSync PFNGLISSYNCPROC "typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);")
(define-entry-point glDeleteSync PFNGLDELETESYNCPROC "typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);")
(define-entry-point glClientWaitSync PFNGLCLIENTWAITSYNCPROC "typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);")
(define-entry-point glWaitSync PFNGLWAITSYNCPROC "typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);")
(define-entry-point glGetInteger64v PFNGLGETINTEGER64VPROC "typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);")
(define-entry-point glGetSynciv PFNGLGETSYNCIVPROC "typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);")
(define-entry-point glGetInteger64i_v PFNGLGETINTEGER64I_VPROC "typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);")
(define-entry-point glGetBufferParameteri64v PFNGLGETBUFFERPARAMETERI64VPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);")
(define-entry-point glFramebufferTexture PFNGLFRAMEBUFFERTEXTUREPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);")
(define-entry-point glTexImage2DMultisample PFNGLTEXIMAGE2DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);")
(define-entry-point glTexImage3DMultisample PFNGLTEXIMAGE3DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);")
(define-entry-point glGetMultisamplefv PFNGLGETMULTISAMPLEFVPROC "typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);")
(define-entry-point glSampleMaski PFNGLSAMPLEMASKIPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);")
(define-entry-point glBindFragDataLocationIndexed PFNGLBINDFRAGDATALOCATIONINDEXEDPROC "typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);")
(define-entry-point glGetFragDataIndex PFNGLGETFRAGDATAINDEXPROC "typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGenSamplers PFNGLGENSAMPLERSPROC "typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);")
(define-entry-point glDeleteSamplers PFNGLDELETESAMPLERSPROC "typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);")
(define-entry-point glIsSampler PFNGLISSAMPLERPROC "typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);")
(define-entry-point glBindSampler PFNGLBINDSAMPLERPROC "typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);")
(define-entry-point glSamplerParameteri PFNGLSAMPLERPARAMETERIPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);")
(define-entry-point glSamplerParameteriv PFNGLSAMPLERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);")
(define-entry-point glSamplerParameterf PFNGLSAMPLERPARAMETERFPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);")
(define-entry-point glSamplerParameterfv PFNGLSAMPLERPARAMETERFVPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);")
(define-entry-point glSamplerParameterIiv PFNGLSAMPLERPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);")
(define-entry-point glSamplerParameterIuiv PFNGLSAMPLERPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);")
(define-entry-point glGetSamplerParameteriv PFNGLGETSAMPLERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);")
(define-entry-point glGetSamplerParameterIiv PFNGLGETSAMPLERPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);")
(define-entry-point glGetSamplerParameterfv PFNGLGETSAMPLERPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);")
(define-entry-point glGetSamplerParameterIuiv PFNGLGETSAMPLERPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);")
(define-entry-point glQueryCounter PFNGLQUERYCOUNTERPROC "typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);")
(define-entry-point glGetQueryObjecti64v PFNGLGETQUERYOBJECTI64VPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);")
(define-entry-point glGetQueryObjectui64v PFNGLGETQUERYOBJECTUI64VPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);")
(define-entry-point glVertexAttribDivisor PFNGLVERTEXATTRIBDIVISORPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);")
(define-entry-point glVertexAttribP1ui PFNGLVERTEXATTRIBP1UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);")
(define-entry-point glVertexAttribP1uiv PFNGLVERTEXATTRIBP1UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);")
(define-entry-point glVertexAttribP2ui PFNGLVERTEXATTRIBP2UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);")
(define-entry-point glVertexAttribP2uiv PFNGLVERTEXATTRIBP2UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);")
(define-entry-point glVertexAttribP3ui PFNGLVERTEXATTRIBP3UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);")
(define-entry-point glVertexAttribP3uiv PFNGLVERTEXATTRIBP3UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);")
(define-entry-point glVertexAttribP4ui PFNGLVERTEXATTRIBP4UIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);")
(define-entry-point glVertexAttribP4uiv PFNGLVERTEXATTRIBP4UIVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);")
(define-entry-point glVertexP2ui PFNGLVERTEXP2UIPROC "typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);")
(define-entry-point glVertexP2uiv PFNGLVERTEXP2UIVPROC "typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);")
(define-entry-point glVertexP3ui PFNGLVERTEXP3UIPROC "typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);")
(define-entry-point glVertexP3uiv PFNGLVERTEXP3UIVPROC "typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);")
(define-entry-point glVertexP4ui PFNGLVERTEXP4UIPROC "typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);")
(define-entry-point glVertexP4uiv PFNGLVERTEXP4UIVPROC "typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);")
(define-entry-point glTexCoordP1ui PFNGLTEXCOORDP1UIPROC "typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);")
(define-entry-point glTexCoordP1uiv PFNGLTEXCOORDP1UIVPROC "typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);")
(define-entry-point glTexCoordP2ui PFNGLTEXCOORDP2UIPROC "typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);")
(define-entry-point glTexCoordP2uiv PFNGLTEXCOORDP2UIVPROC "typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);")
(define-entry-point glTexCoordP3ui PFNGLTEXCOORDP3UIPROC "typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);")
(define-entry-point glTexCoordP3uiv PFNGLTEXCOORDP3UIVPROC "typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);")
(define-entry-point glTexCoordP4ui PFNGLTEXCOORDP4UIPROC "typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);")
(define-entry-point glTexCoordP4uiv PFNGLTEXCOORDP4UIVPROC "typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);")
(define-entry-point glMultiTexCoordP1ui PFNGLMULTITEXCOORDP1UIPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);")
(define-entry-point glMultiTexCoordP1uiv PFNGLMULTITEXCOORDP1UIVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);")
(define-entry-point glMultiTexCoordP2ui PFNGLMULTITEXCOORDP2UIPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);")
(define-entry-point glMultiTexCoordP2uiv PFNGLMULTITEXCOORDP2UIVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);")
(define-entry-point glMultiTexCoordP3ui PFNGLMULTITEXCOORDP3UIPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);")
(define-entry-point glMultiTexCoordP3uiv PFNGLMULTITEXCOORDP3UIVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);")
(define-entry-point glMultiTexCoordP4ui PFNGLMULTITEXCOORDP4UIPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);")
(define-entry-point glMultiTexCoordP4uiv PFNGLMULTITEXCOORDP4UIVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);")
(define-entry-point glNormalP3ui PFNGLNORMALP3UIPROC "typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);")
(define-entry-point glNormalP3uiv PFNGLNORMALP3UIVPROC "typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);")
(define-entry-point glColorP3ui PFNGLCOLORP3UIPROC "typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);")
(define-entry-point glColorP3uiv PFNGLCOLORP3UIVPROC "typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);")
(define-entry-point glColorP4ui PFNGLCOLORP4UIPROC "typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);")
(define-entry-point glColorP4uiv PFNGLCOLORP4UIVPROC "typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);")
(define-entry-point glSecondaryColorP3ui PFNGLSECONDARYCOLORP3UIPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);")
(define-entry-point glSecondaryColorP3uiv PFNGLSECONDARYCOLORP3UIVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);")
(define-entry-point glMinSampleShading PFNGLMINSAMPLESHADINGPROC "typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);")
(define-entry-point glBlendEquationi PFNGLBLENDEQUATIONIPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);")
(define-entry-point glBlendEquationSeparatei PFNGLBLENDEQUATIONSEPARATEIPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glBlendFunci PFNGLBLENDFUNCIPROC "typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);")
(define-entry-point glBlendFuncSeparatei PFNGLBLENDFUNCSEPARATEIPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);")
(define-entry-point glDrawArraysIndirect PFNGLDRAWARRAYSINDIRECTPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);")
(define-entry-point glDrawElementsIndirect PFNGLDRAWELEMENTSINDIRECTPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);")
(define-entry-point glUniform1d PFNGLUNIFORM1DPROC "typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);")
(define-entry-point glUniform2d PFNGLUNIFORM2DPROC "typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);")
(define-entry-point glUniform3d PFNGLUNIFORM3DPROC "typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glUniform4d PFNGLUNIFORM4DPROC "typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glUniform1dv PFNGLUNIFORM1DVPROC "typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glUniform2dv PFNGLUNIFORM2DVPROC "typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glUniform3dv PFNGLUNIFORM3DVPROC "typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glUniform4dv PFNGLUNIFORM4DVPROC "typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glUniformMatrix2dv PFNGLUNIFORMMATRIX2DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix3dv PFNGLUNIFORMMATRIX3DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix4dv PFNGLUNIFORMMATRIX4DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix2x3dv PFNGLUNIFORMMATRIX2X3DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix2x4dv PFNGLUNIFORMMATRIX2X4DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix3x2dv PFNGLUNIFORMMATRIX3X2DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix3x4dv PFNGLUNIFORMMATRIX3X4DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix4x2dv PFNGLUNIFORMMATRIX4X2DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glUniformMatrix4x3dv PFNGLUNIFORMMATRIX4X3DVPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glGetUniformdv PFNGLGETUNIFORMDVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);")
(define-entry-point glGetSubroutineUniformLocation PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);")
(define-entry-point glGetSubroutineIndex PFNGLGETSUBROUTINEINDEXPROC "typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);")
(define-entry-point glGetActiveSubroutineUniformiv PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC "typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);")
(define-entry-point glGetActiveSubroutineUniformName PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC "typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);")
(define-entry-point glGetActiveSubroutineName PFNGLGETACTIVESUBROUTINENAMEPROC "typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);")
(define-entry-point glUniformSubroutinesuiv PFNGLUNIFORMSUBROUTINESUIVPROC "typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);")
(define-entry-point glGetUniformSubroutineuiv PFNGLGETUNIFORMSUBROUTINEUIVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);")
(define-entry-point glGetProgramStageiv PFNGLGETPROGRAMSTAGEIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);")
(define-entry-point glPatchParameteri PFNGLPATCHPARAMETERIPROC "typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);")
(define-entry-point glPatchParameterfv PFNGLPATCHPARAMETERFVPROC "typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);")
(define-entry-point glBindTransformFeedback PFNGLBINDTRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);")
(define-entry-point glDeleteTransformFeedbacks PFNGLDELETETRANSFORMFEEDBACKSPROC "typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glGenTransformFeedbacks PFNGLGENTRANSFORMFEEDBACKSPROC "typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glIsTransformFeedback PFNGLISTRANSFORMFEEDBACKPROC "typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);")
(define-entry-point glPauseTransformFeedback PFNGLPAUSETRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);")
(define-entry-point glResumeTransformFeedback PFNGLRESUMETRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);")
(define-entry-point glDrawTransformFeedback PFNGLDRAWTRANSFORMFEEDBACKPROC "typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);")
(define-entry-point glDrawTransformFeedbackStream PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC "typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);")
(define-entry-point glBeginQueryIndexed PFNGLBEGINQUERYINDEXEDPROC "typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);")
(define-entry-point glEndQueryIndexed PFNGLENDQUERYINDEXEDPROC "typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);")
(define-entry-point glGetQueryIndexediv PFNGLGETQUERYINDEXEDIVPROC "typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);")
(define-entry-point glReleaseShaderCompiler PFNGLRELEASESHADERCOMPILERPROC "typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);")
(define-entry-point glShaderBinary PFNGLSHADERBINARYPROC "typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);")
(define-entry-point glGetShaderPrecisionFormat PFNGLGETSHADERPRECISIONFORMATPROC "typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);")
(define-entry-point glDepthRangef PFNGLDEPTHRANGEFPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);")
(define-entry-point glClearDepthf PFNGLCLEARDEPTHFPROC "typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);")
(define-entry-point glGetProgramBinary PFNGLGETPROGRAMBINARYPROC "typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);")
(define-entry-point glProgramBinary PFNGLPROGRAMBINARYPROC "typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);")
(define-entry-point glProgramParameteri PFNGLPROGRAMPARAMETERIPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);")
(define-entry-point glUseProgramStages PFNGLUSEPROGRAMSTAGESPROC "typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);")
(define-entry-point glActiveShaderProgram PFNGLACTIVESHADERPROGRAMPROC "typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);")
(define-entry-point glCreateShaderProgramv PFNGLCREATESHADERPROGRAMVPROC "typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);")
(define-entry-point glBindProgramPipeline PFNGLBINDPROGRAMPIPELINEPROC "typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);")
(define-entry-point glDeleteProgramPipelines PFNGLDELETEPROGRAMPIPELINESPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);")
(define-entry-point glGenProgramPipelines PFNGLGENPROGRAMPIPELINESPROC "typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);")
(define-entry-point glIsProgramPipeline PFNGLISPROGRAMPIPELINEPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);")
(define-entry-point glGetProgramPipelineiv PFNGLGETPROGRAMPIPELINEIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);")
(define-entry-point glProgramUniform1i PFNGLPROGRAMUNIFORM1IPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);")
(define-entry-point glProgramUniform1iv PFNGLPROGRAMUNIFORM1IVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform1f PFNGLPROGRAMUNIFORM1FPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);")
(define-entry-point glProgramUniform1fv PFNGLPROGRAMUNIFORM1FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform1d PFNGLPROGRAMUNIFORM1DPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);")
(define-entry-point glProgramUniform1dv PFNGLPROGRAMUNIFORM1DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform1ui PFNGLPROGRAMUNIFORM1UIPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);")
(define-entry-point glProgramUniform1uiv PFNGLPROGRAMUNIFORM1UIVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform2i PFNGLPROGRAMUNIFORM2IPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);")
(define-entry-point glProgramUniform2iv PFNGLPROGRAMUNIFORM2IVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform2f PFNGLPROGRAMUNIFORM2FPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glProgramUniform2fv PFNGLPROGRAMUNIFORM2FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform2d PFNGLPROGRAMUNIFORM2DPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);")
(define-entry-point glProgramUniform2dv PFNGLPROGRAMUNIFORM2DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform2ui PFNGLPROGRAMUNIFORM2UIPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);")
(define-entry-point glProgramUniform2uiv PFNGLPROGRAMUNIFORM2UIVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform3i PFNGLPROGRAMUNIFORM3IPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glProgramUniform3iv PFNGLPROGRAMUNIFORM3IVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform3f PFNGLPROGRAMUNIFORM3FPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glProgramUniform3fv PFNGLPROGRAMUNIFORM3FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform3d PFNGLPROGRAMUNIFORM3DPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);")
(define-entry-point glProgramUniform3dv PFNGLPROGRAMUNIFORM3DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform3ui PFNGLPROGRAMUNIFORM3UIPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);")
(define-entry-point glProgramUniform3uiv PFNGLPROGRAMUNIFORM3UIVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform4i PFNGLPROGRAMUNIFORM4IPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glProgramUniform4iv PFNGLPROGRAMUNIFORM4IVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform4f PFNGLPROGRAMUNIFORM4FPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glProgramUniform4fv PFNGLPROGRAMUNIFORM4FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform4d PFNGLPROGRAMUNIFORM4DPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);")
(define-entry-point glProgramUniform4dv PFNGLPROGRAMUNIFORM4DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform4ui PFNGLPROGRAMUNIFORM4UIPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);")
(define-entry-point glProgramUniform4uiv PFNGLPROGRAMUNIFORM4UIVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniformMatrix2fv PFNGLPROGRAMUNIFORMMATRIX2FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3fv PFNGLPROGRAMUNIFORMMATRIX3FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4fv PFNGLPROGRAMUNIFORMMATRIX4FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix2dv PFNGLPROGRAMUNIFORMMATRIX2DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3dv PFNGLPROGRAMUNIFORMMATRIX3DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4dv PFNGLPROGRAMUNIFORMMATRIX4DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix2x3fv PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3x2fv PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix2x4fv PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4x2fv PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3x4fv PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4x3fv PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix2x3dv PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3x2dv PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix2x4dv PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4x2dv PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3x4dv PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4x3dv PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glValidateProgramPipeline PFNGLVALIDATEPROGRAMPIPELINEPROC "typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);")
(define-entry-point glGetProgramPipelineInfoLog PFNGLGETPROGRAMPIPELINEINFOLOGPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);")
(define-entry-point glVertexAttribL1d PFNGLVERTEXATTRIBL1DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttribL2d PFNGLVERTEXATTRIBL2DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttribL3d PFNGLVERTEXATTRIBL3DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttribL4d PFNGLVERTEXATTRIBL4DPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttribL1dv PFNGLVERTEXATTRIBL1DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL2dv PFNGLVERTEXATTRIBL2DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL3dv PFNGLVERTEXATTRIBL3DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL4dv PFNGLVERTEXATTRIBL4DVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribLPointer PFNGLVERTEXATTRIBLPOINTERPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glGetVertexAttribLdv PFNGLGETVERTEXATTRIBLDVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glViewportArrayv PFNGLVIEWPORTARRAYVPROC "typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);")
(define-entry-point glViewportIndexedf PFNGLVIEWPORTINDEXEDFPROC "typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);")
(define-entry-point glViewportIndexedfv PFNGLVIEWPORTINDEXEDFVPROC "typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glScissorArrayv PFNGLSCISSORARRAYVPROC "typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);")
(define-entry-point glScissorIndexed PFNGLSCISSORINDEXEDPROC "typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);")
(define-entry-point glScissorIndexedv PFNGLSCISSORINDEXEDVPROC "typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);")
(define-entry-point glDepthRangeArrayv PFNGLDEPTHRANGEARRAYVPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);")
(define-entry-point glDepthRangeIndexed PFNGLDEPTHRANGEINDEXEDPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);")
(define-entry-point glGetFloati_v PFNGLGETFLOATI_VPROC "typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);")
(define-entry-point glGetDoublei_v PFNGLGETDOUBLEI_VPROC "typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);")
(define-entry-point glDrawArraysInstancedBaseInstance PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);")
(define-entry-point glDrawElementsInstancedBaseInstance PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);")
(define-entry-point glDrawElementsInstancedBaseVertexBaseInstance PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);")
(define-entry-point glGetInternalformativ PFNGLGETINTERNALFORMATIVPROC "typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);")
(define-entry-point glGetActiveAtomicCounterBufferiv PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC "typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);")
(define-entry-point glBindImageTexture PFNGLBINDIMAGETEXTUREPROC "typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);")
(define-entry-point glMemoryBarrier PFNGLMEMORYBARRIERPROC "typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);")
(define-entry-point glTexStorage1D PFNGLTEXSTORAGE1DPROC "typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);")
(define-entry-point glTexStorage2D PFNGLTEXSTORAGE2DPROC "typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glTexStorage3D PFNGLTEXSTORAGE3DPROC "typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);")
(define-entry-point glDrawTransformFeedbackInstanced PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC "typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);")
(define-entry-point glDrawTransformFeedbackStreamInstanced PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC "typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);")
(define-entry-point glClearBufferData PFNGLCLEARBUFFERDATAPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);")
(define-entry-point glClearBufferSubData PFNGLCLEARBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);")
(define-entry-point glDispatchCompute PFNGLDISPATCHCOMPUTEPROC "typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);")
(define-entry-point glDispatchComputeIndirect PFNGLDISPATCHCOMPUTEINDIRECTPROC "typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);")
(define-entry-point glCopyImageSubData PFNGLCOPYIMAGESUBDATAPROC "typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);")
(define-entry-point glFramebufferParameteri PFNGLFRAMEBUFFERPARAMETERIPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glGetFramebufferParameteriv PFNGLGETFRAMEBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetInternalformati64v PFNGLGETINTERNALFORMATI64VPROC "typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);")
(define-entry-point glInvalidateTexSubImage PFNGLINVALIDATETEXSUBIMAGEPROC "typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);")
(define-entry-point glInvalidateTexImage PFNGLINVALIDATETEXIMAGEPROC "typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);")
(define-entry-point glInvalidateBufferSubData PFNGLINVALIDATEBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);")
(define-entry-point glInvalidateBufferData PFNGLINVALIDATEBUFFERDATAPROC "typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);")
(define-entry-point glInvalidateFramebuffer PFNGLINVALIDATEFRAMEBUFFERPROC "typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);")
(define-entry-point glInvalidateSubFramebuffer PFNGLINVALIDATESUBFRAMEBUFFERPROC "typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glMultiDrawArraysIndirect PFNGLMULTIDRAWARRAYSINDIRECTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);")
(define-entry-point glMultiDrawElementsIndirect PFNGLMULTIDRAWELEMENTSINDIRECTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);")
(define-entry-point glGetProgramInterfaceiv PFNGLGETPROGRAMINTERFACEIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);")
(define-entry-point glGetProgramResourceIndex PFNGLGETPROGRAMRESOURCEINDEXPROC "typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);")
(define-entry-point glGetProgramResourceName PFNGLGETPROGRAMRESOURCENAMEPROC "typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);")
(define-entry-point glGetProgramResourceiv PFNGLGETPROGRAMRESOURCEIVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);")
(define-entry-point glGetProgramResourceLocation PFNGLGETPROGRAMRESOURCELOCATIONPROC "typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);")
(define-entry-point glGetProgramResourceLocationIndex PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC "typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);")
(define-entry-point glShaderStorageBlockBinding PFNGLSHADERSTORAGEBLOCKBINDINGPROC "typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);")
(define-entry-point glTexBufferRange PFNGLTEXBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);")
(define-entry-point glTexStorage2DMultisample PFNGLTEXSTORAGE2DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);")
(define-entry-point glTexStorage3DMultisample PFNGLTEXSTORAGE3DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);")
(define-entry-point glTextureView PFNGLTEXTUREVIEWPROC "typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);")
(define-entry-point glBindVertexBuffer PFNGLBINDVERTEXBUFFERPROC "typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);")
(define-entry-point glVertexAttribFormat PFNGLVERTEXATTRIBFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);")
(define-entry-point glVertexAttribIFormat PFNGLVERTEXATTRIBIFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexAttribLFormat PFNGLVERTEXATTRIBLFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexAttribBinding PFNGLVERTEXATTRIBBINDINGPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);")
(define-entry-point glVertexBindingDivisor PFNGLVERTEXBINDINGDIVISORPROC "typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);")
(define-entry-point glDebugMessageControl PFNGLDEBUGMESSAGECONTROLPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);")
(define-entry-point glDebugMessageInsert PFNGLDEBUGMESSAGEINSERTPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);")
(define-entry-point glDebugMessageCallback PFNGLDEBUGMESSAGECALLBACKPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);")
(define-entry-point glGetDebugMessageLog PFNGLGETDEBUGMESSAGELOGPROC "typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);")
(define-entry-point glPushDebugGroup PFNGLPUSHDEBUGGROUPPROC "typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);")
(define-entry-point glPopDebugGroup PFNGLPOPDEBUGGROUPPROC "typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);")
(define-entry-point glObjectLabel PFNGLOBJECTLABELPROC "typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);")
(define-entry-point glGetObjectLabel PFNGLGETOBJECTLABELPROC "typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);")
(define-entry-point glObjectPtrLabel PFNGLOBJECTPTRLABELPROC "typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);")
(define-entry-point glGetObjectPtrLabel PFNGLGETOBJECTPTRLABELPROC "typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);")
(define-entry-point glBufferStorage PFNGLBUFFERSTORAGEPROC "typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);")
(define-entry-point glClearTexImage PFNGLCLEARTEXIMAGEPROC "typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);")
(define-entry-point glClearTexSubImage PFNGLCLEARTEXSUBIMAGEPROC "typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);")
(define-entry-point glBindBuffersBase PFNGLBINDBUFFERSBASEPROC "typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);")
(define-entry-point glBindBuffersRange PFNGLBINDBUFFERSRANGEPROC "typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);")
(define-entry-point glBindTextures PFNGLBINDTEXTURESPROC "typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);")
(define-entry-point glBindSamplers PFNGLBINDSAMPLERSPROC "typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);")
(define-entry-point glBindImageTextures PFNGLBINDIMAGETEXTURESPROC "typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);")
(define-entry-point glBindVertexBuffers PFNGLBINDVERTEXBUFFERSPROC "typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);")
(define-entry-point glClipControl PFNGLCLIPCONTROLPROC "typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);")
(define-entry-point glCreateTransformFeedbacks PFNGLCREATETRANSFORMFEEDBACKSPROC "typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glTransformFeedbackBufferBase PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);")
(define-entry-point glTransformFeedbackBufferRange PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizei size);")
(define-entry-point glGetTransformFeedbackiv PFNGLGETTRANSFORMFEEDBACKIVPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);")
(define-entry-point glGetTransformFeedbacki_v PFNGLGETTRANSFORMFEEDBACKI_VPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);")
(define-entry-point glGetTransformFeedbacki64_v PFNGLGETTRANSFORMFEEDBACKI64_VPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);")
(define-entry-point glCreateBuffers PFNGLCREATEBUFFERSPROC "typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);")
(define-entry-point glNamedBufferStorage PFNGLNAMEDBUFFERSTORAGEPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizei size, const void *data, GLbitfield flags);")
(define-entry-point glNamedBufferData PFNGLNAMEDBUFFERDATAPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizei size, const void *data, GLenum usage);")
(define-entry-point glNamedBufferSubData PFNGLNAMEDBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei size, const void *data);")
(define-entry-point glCopyNamedBufferSubData PFNGLCOPYNAMEDBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizei size);")
(define-entry-point glClearNamedBufferData PFNGLCLEARNAMEDBUFFERDATAPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);")
(define-entry-point glClearNamedBufferSubData PFNGLCLEARNAMEDBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizei size, GLenum format, GLenum type, const void *data);")
(define-entry-point glMapNamedBuffer PFNGLMAPNAMEDBUFFERPROC "typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);")
(define-entry-point glMapNamedBufferRange PFNGLMAPNAMEDBUFFERRANGEPROC "typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizei length, GLbitfield access);")
(define-entry-point glUnmapNamedBuffer PFNGLUNMAPNAMEDBUFFERPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);")
(define-entry-point glFlushMappedNamedBufferRange PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizei length);")
(define-entry-point glGetNamedBufferParameteriv PFNGLGETNAMEDBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);")
(define-entry-point glGetNamedBufferParameteri64v PFNGLGETNAMEDBUFFERPARAMETERI64VPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);")
(define-entry-point glGetNamedBufferPointerv PFNGLGETNAMEDBUFFERPOINTERVPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);")
(define-entry-point glGetNamedBufferSubData PFNGLGETNAMEDBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei size, void *data);")
(define-entry-point glCreateFramebuffers PFNGLCREATEFRAMEBUFFERSPROC "typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);")
(define-entry-point glNamedFramebufferRenderbuffer PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);")
(define-entry-point glNamedFramebufferParameteri PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);")
(define-entry-point glNamedFramebufferTexture PFNGLNAMEDFRAMEBUFFERTEXTUREPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);")
(define-entry-point glNamedFramebufferTextureLayer PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);")
(define-entry-point glNamedFramebufferDrawBuffer PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);")
(define-entry-point glNamedFramebufferDrawBuffers PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);")
(define-entry-point glNamedFramebufferReadBuffer PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);")
(define-entry-point glInvalidateNamedFramebufferData PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC "typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);")
(define-entry-point glInvalidateNamedFramebufferSubData PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC "typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glClearNamedFramebufferiv PFNGLCLEARNAMEDFRAMEBUFFERIVPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);")
(define-entry-point glClearNamedFramebufferuiv PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);")
(define-entry-point glClearNamedFramebufferfv PFNGLCLEARNAMEDFRAMEBUFFERFVPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);")
(define-entry-point glClearNamedFramebufferfi PFNGLCLEARNAMEDFRAMEBUFFERFIPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);")
(define-entry-point glBlitNamedFramebuffer PFNGLBLITNAMEDFRAMEBUFFERPROC "typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);")
(define-entry-point glCheckNamedFramebufferStatus PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC "typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);")
(define-entry-point glGetNamedFramebufferParameteriv PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);")
(define-entry-point glGetNamedFramebufferAttachmentParameteriv PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);")
(define-entry-point glCreateRenderbuffers PFNGLCREATERENDERBUFFERSPROC "typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);")
(define-entry-point glNamedRenderbufferStorage PFNGLNAMEDRENDERBUFFERSTORAGEPROC "typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glNamedRenderbufferStorageMultisample PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glGetNamedRenderbufferParameteriv PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);")
(define-entry-point glCreateTextures PFNGLCREATETEXTURESPROC "typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);")
(define-entry-point glTextureBuffer PFNGLTEXTUREBUFFERPROC "typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);")
(define-entry-point glTextureBufferRange PFNGLTEXTUREBUFFERRANGEPROC "typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizei size);")
(define-entry-point glTextureStorage1D PFNGLTEXTURESTORAGE1DPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);")
(define-entry-point glTextureStorage2D PFNGLTEXTURESTORAGE2DPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glTextureStorage3D PFNGLTEXTURESTORAGE3DPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);")
(define-entry-point glTextureStorage2DMultisample PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);")
(define-entry-point glTextureStorage3DMultisample PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);")
(define-entry-point glTextureSubImage1D PFNGLTEXTURESUBIMAGE1DPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureSubImage2D PFNGLTEXTURESUBIMAGE2DPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureSubImage3D PFNGLTEXTURESUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCompressedTextureSubImage1D PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTextureSubImage2D PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTextureSubImage3D PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCopyTextureSubImage1D PFNGLCOPYTEXTURESUBIMAGE1DPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyTextureSubImage2D PFNGLCOPYTEXTURESUBIMAGE2DPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glCopyTextureSubImage3D PFNGLCOPYTEXTURESUBIMAGE3DPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glTextureParameterf PFNGLTEXTUREPARAMETERFPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);")
(define-entry-point glTextureParameterfv PFNGLTEXTUREPARAMETERFVPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);")
(define-entry-point glTextureParameteri PFNGLTEXTUREPARAMETERIPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);")
(define-entry-point glTextureParameterIiv PFNGLTEXTUREPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);")
(define-entry-point glTextureParameterIuiv PFNGLTEXTUREPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);")
(define-entry-point glTextureParameteriv PFNGLTEXTUREPARAMETERIVPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);")
(define-entry-point glGenerateTextureMipmap PFNGLGENERATETEXTUREMIPMAPPROC "typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);")
(define-entry-point glBindTextureUnit PFNGLBINDTEXTUREUNITPROC "typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);")
(define-entry-point glGetTextureImage PFNGLGETTEXTUREIMAGEPROC "typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);")
(define-entry-point glGetCompressedTextureImage PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);")
(define-entry-point glGetTextureLevelParameterfv PFNGLGETTEXTURELEVELPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);")
(define-entry-point glGetTextureLevelParameteriv PFNGLGETTEXTURELEVELPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);")
(define-entry-point glGetTextureParameterfv PFNGLGETTEXTUREPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);")
(define-entry-point glGetTextureParameterIiv PFNGLGETTEXTUREPARAMETERIIVPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);")
(define-entry-point glGetTextureParameterIuiv PFNGLGETTEXTUREPARAMETERIUIVPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);")
(define-entry-point glGetTextureParameteriv PFNGLGETTEXTUREPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);")
(define-entry-point glCreateVertexArrays PFNGLCREATEVERTEXARRAYSPROC "typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);")
(define-entry-point glDisableVertexArrayAttrib PFNGLDISABLEVERTEXARRAYATTRIBPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);")
(define-entry-point glEnableVertexArrayAttrib PFNGLENABLEVERTEXARRAYATTRIBPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);")
(define-entry-point glVertexArrayElementBuffer PFNGLVERTEXARRAYELEMENTBUFFERPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);")
(define-entry-point glVertexArrayVertexBuffer PFNGLVERTEXARRAYVERTEXBUFFERPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);")
(define-entry-point glVertexArrayVertexBuffers PFNGLVERTEXARRAYVERTEXBUFFERSPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);")
(define-entry-point glVertexArrayAttribBinding PFNGLVERTEXARRAYATTRIBBINDINGPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);")
(define-entry-point glVertexArrayAttribFormat PFNGLVERTEXARRAYATTRIBFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);")
(define-entry-point glVertexArrayAttribIFormat PFNGLVERTEXARRAYATTRIBIFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexArrayAttribLFormat PFNGLVERTEXARRAYATTRIBLFORMATPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexArrayBindingDivisor PFNGLVERTEXARRAYBINDINGDIVISORPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);")
(define-entry-point glGetVertexArrayiv PFNGLGETVERTEXARRAYIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);")
(define-entry-point glGetVertexArrayIndexediv PFNGLGETVERTEXARRAYINDEXEDIVPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);")
(define-entry-point glGetVertexArrayIndexed64iv PFNGLGETVERTEXARRAYINDEXED64IVPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);")
(define-entry-point glCreateSamplers PFNGLCREATESAMPLERSPROC "typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);")
(define-entry-point glCreateProgramPipelines PFNGLCREATEPROGRAMPIPELINESPROC "typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);")
(define-entry-point glCreateQueries PFNGLCREATEQUERIESPROC "typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);")
(define-entry-point glGetQueryBufferObjecti64v PFNGLGETQUERYBUFFEROBJECTI64VPROC "typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);")
(define-entry-point glGetQueryBufferObjectiv PFNGLGETQUERYBUFFEROBJECTIVPROC "typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);")
(define-entry-point glGetQueryBufferObjectui64v PFNGLGETQUERYBUFFEROBJECTUI64VPROC "typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);")
(define-entry-point glGetQueryBufferObjectuiv PFNGLGETQUERYBUFFEROBJECTUIVPROC "typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);")
(define-entry-point glMemoryBarrierByRegion PFNGLMEMORYBARRIERBYREGIONPROC "typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);")
(define-entry-point glGetTextureSubImage PFNGLGETTEXTURESUBIMAGEPROC "typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);")
(define-entry-point glGetCompressedTextureSubImage PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);")
(define-entry-point glGetGraphicsResetStatus PFNGLGETGRAPHICSRESETSTATUSPROC "typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);")
(define-entry-point glGetnCompressedTexImage PFNGLGETNCOMPRESSEDTEXIMAGEPROC "typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);")
(define-entry-point glGetnTexImage PFNGLGETNTEXIMAGEPROC "typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);")
(define-entry-point glGetnUniformdv PFNGLGETNUNIFORMDVPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);")
(define-entry-point glGetnUniformfv PFNGLGETNUNIFORMFVPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);")
(define-entry-point glGetnUniformiv PFNGLGETNUNIFORMIVPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);")
(define-entry-point glGetnUniformuiv PFNGLGETNUNIFORMUIVPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);")
(define-entry-point glReadnPixels PFNGLREADNPIXELSPROC "typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);")
(define-entry-point glGetnMapdv PFNGLGETNMAPDVPROC "typedef void (APIENTRYP PFNGLGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);")
(define-entry-point glGetnMapfv PFNGLGETNMAPFVPROC "typedef void (APIENTRYP PFNGLGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);")
(define-entry-point glGetnMapiv PFNGLGETNMAPIVPROC "typedef void (APIENTRYP PFNGLGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);")
(define-entry-point glGetnPixelMapfv PFNGLGETNPIXELMAPFVPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);")
(define-entry-point glGetnPixelMapuiv PFNGLGETNPIXELMAPUIVPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);")
(define-entry-point glGetnPixelMapusv PFNGLGETNPIXELMAPUSVPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values);")
(define-entry-point glGetnPolygonStipple PFNGLGETNPOLYGONSTIPPLEPROC "typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);")
(define-entry-point glGetnColorTable PFNGLGETNCOLORTABLEPROC "typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);")
(define-entry-point glGetnConvolutionFilter PFNGLGETNCONVOLUTIONFILTERPROC "typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);")
(define-entry-point glGetnSeparableFilter PFNGLGETNSEPARABLEFILTERPROC "typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);")
(define-entry-point glGetnHistogram PFNGLGETNHISTOGRAMPROC "typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);")
(define-entry-point glGetnMinmax PFNGLGETNMINMAXPROC "typedef void (APIENTRYP PFNGLGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);")
(define-entry-point glTextureBarrier PFNGLTEXTUREBARRIERPROC "typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);")
(define-entry-point glGetTextureHandleARB PFNGLGETTEXTUREHANDLEARBPROC "typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);")
(define-entry-point glGetTextureSamplerHandleARB PFNGLGETTEXTURESAMPLERHANDLEARBPROC "typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);")
(define-entry-point glMakeTextureHandleResidentARB PFNGLMAKETEXTUREHANDLERESIDENTARBPROC "typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);")
(define-entry-point glMakeTextureHandleNonResidentARB PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC "typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);")
(define-entry-point glGetImageHandleARB PFNGLGETIMAGEHANDLEARBPROC "typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);")
(define-entry-point glMakeImageHandleResidentARB PFNGLMAKEIMAGEHANDLERESIDENTARBPROC "typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);")
(define-entry-point glMakeImageHandleNonResidentARB PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC "typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);")
(define-entry-point glUniformHandleui64ARB PFNGLUNIFORMHANDLEUI64ARBPROC "typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);")
(define-entry-point glUniformHandleui64vARB PFNGLUNIFORMHANDLEUI64VARBPROC "typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);")
(define-entry-point glProgramUniformHandleui64ARB PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);")
(define-entry-point glProgramUniformHandleui64vARB PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);")
(define-entry-point glIsTextureHandleResidentARB PFNGLISTEXTUREHANDLERESIDENTARBPROC "typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);")
(define-entry-point glIsImageHandleResidentARB PFNGLISIMAGEHANDLERESIDENTARBPROC "typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);")
(define-entry-point glVertexAttribL1ui64ARB PFNGLVERTEXATTRIBL1UI64ARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);")
(define-entry-point glVertexAttribL1ui64vARB PFNGLVERTEXATTRIBL1UI64VARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);")
(define-entry-point glGetVertexAttribLui64vARB PFNGLGETVERTEXATTRIBLUI64VARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);")
(define-entry-point glCreateSyncFromCLeventARB PFNGLCREATESYNCFROMCLEVENTARBPROC "typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);")
(define-entry-point glClampColorARB PFNGLCLAMPCOLORARBPROC "typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);")
(define-entry-point glDispatchComputeGroupSizeARB PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC "typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);")
(define-entry-point glDebugMessageControlARB PFNGLDEBUGMESSAGECONTROLARBPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);")
(define-entry-point glDebugMessageInsertARB PFNGLDEBUGMESSAGEINSERTARBPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);")
(define-entry-point glDebugMessageCallbackARB PFNGLDEBUGMESSAGECALLBACKARBPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);")
(define-entry-point glGetDebugMessageLogARB PFNGLGETDEBUGMESSAGELOGARBPROC "typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);")
(define-entry-point glDrawBuffersARB PFNGLDRAWBUFFERSARBPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glBlendEquationiARB PFNGLBLENDEQUATIONIARBPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);")
(define-entry-point glBlendEquationSeparateiARB PFNGLBLENDEQUATIONSEPARATEIARBPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glBlendFunciARB PFNGLBLENDFUNCIARBPROC "typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);")
(define-entry-point glBlendFuncSeparateiARB PFNGLBLENDFUNCSEPARATEIARBPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);")
(define-entry-point glDrawArraysInstancedARB PFNGLDRAWARRAYSINSTANCEDARBPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);")
(define-entry-point glDrawElementsInstancedARB PFNGLDRAWELEMENTSINSTANCEDARBPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);")
(define-entry-point glProgramStringARB PFNGLPROGRAMSTRINGARBPROC "typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void *string);")
(define-entry-point glBindProgramARB PFNGLBINDPROGRAMARBPROC "typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);")
(define-entry-point glDeleteProgramsARB PFNGLDELETEPROGRAMSARBPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glGenProgramsARB PFNGLGENPROGRAMSARBPROC "typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);")
(define-entry-point glProgramEnvParameter4dARB PFNGLPROGRAMENVPARAMETER4DARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramEnvParameter4dvARB PFNGLPROGRAMENVPARAMETER4DVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);")
(define-entry-point glProgramEnvParameter4fARB PFNGLPROGRAMENVPARAMETER4FARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramEnvParameter4fvARB PFNGLPROGRAMENVPARAMETER4FVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);")
(define-entry-point glProgramLocalParameter4dARB PFNGLPROGRAMLOCALPARAMETER4DARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramLocalParameter4dvARB PFNGLPROGRAMLOCALPARAMETER4DVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);")
(define-entry-point glProgramLocalParameter4fARB PFNGLPROGRAMLOCALPARAMETER4FARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramLocalParameter4fvARB PFNGLPROGRAMLOCALPARAMETER4FVARBPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);")
(define-entry-point glGetProgramEnvParameterdvARB PFNGLGETPROGRAMENVPARAMETERDVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);")
(define-entry-point glGetProgramEnvParameterfvARB PFNGLGETPROGRAMENVPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);")
(define-entry-point glGetProgramLocalParameterdvARB PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);")
(define-entry-point glGetProgramLocalParameterfvARB PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);")
(define-entry-point glGetProgramivARB PFNGLGETPROGRAMIVARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetProgramStringARB PFNGLGETPROGRAMSTRINGARBPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string);")
(define-entry-point glIsProgramARB PFNGLISPROGRAMARBPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);")
(define-entry-point glProgramParameteriARB PFNGLPROGRAMPARAMETERIARBPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);")
(define-entry-point glFramebufferTextureARB PFNGLFRAMEBUFFERTEXTUREARBPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);")
(define-entry-point glFramebufferTextureLayerARB PFNGLFRAMEBUFFERTEXTURELAYERARBPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);")
(define-entry-point glFramebufferTextureFaceARB PFNGLFRAMEBUFFERTEXTUREFACEARBPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);")
(define-entry-point glColorTable PFNGLCOLORTABLEPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);")
(define-entry-point glColorTableParameterfv PFNGLCOLORTABLEPARAMETERFVPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glColorTableParameteriv PFNGLCOLORTABLEPARAMETERIVPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyColorTable PFNGLCOPYCOLORTABLEPROC "typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glGetColorTable PFNGLGETCOLORTABLEPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void *table);")
(define-entry-point glGetColorTableParameterfv PFNGLGETCOLORTABLEPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetColorTableParameteriv PFNGLGETCOLORTABLEPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glColorSubTable PFNGLCOLORSUBTABLEPROC "typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);")
(define-entry-point glCopyColorSubTable PFNGLCOPYCOLORSUBTABLEPROC "typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);")
(define-entry-point glConvolutionFilter1D PFNGLCONVOLUTIONFILTER1DPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);")
(define-entry-point glConvolutionFilter2D PFNGLCONVOLUTIONFILTER2DPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);")
(define-entry-point glConvolutionParameterf PFNGLCONVOLUTIONPARAMETERFPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);")
(define-entry-point glConvolutionParameterfv PFNGLCONVOLUTIONPARAMETERFVPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glConvolutionParameteri PFNGLCONVOLUTIONPARAMETERIPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);")
(define-entry-point glConvolutionParameteriv PFNGLCONVOLUTIONPARAMETERIVPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyConvolutionFilter1D PFNGLCOPYCONVOLUTIONFILTER1DPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyConvolutionFilter2D PFNGLCOPYCONVOLUTIONFILTER2DPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetConvolutionFilter PFNGLGETCONVOLUTIONFILTERPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, void *image);")
(define-entry-point glGetConvolutionParameterfv PFNGLGETCONVOLUTIONPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetConvolutionParameteriv PFNGLGETCONVOLUTIONPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetSeparableFilter PFNGLGETSEPARABLEFILTERPROC "typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);")
(define-entry-point glSeparableFilter2D PFNGLSEPARABLEFILTER2DPROC "typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);")
(define-entry-point glGetHistogram PFNGLGETHISTOGRAMPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);")
(define-entry-point glGetHistogramParameterfv PFNGLGETHISTOGRAMPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetHistogramParameteriv PFNGLGETHISTOGRAMPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMinmax PFNGLGETMINMAXPROC "typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);")
(define-entry-point glGetMinmaxParameterfv PFNGLGETMINMAXPARAMETERFVPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMinmaxParameteriv PFNGLGETMINMAXPARAMETERIVPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glHistogram PFNGLHISTOGRAMPROC "typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);")
(define-entry-point glMinmax PFNGLMINMAXPROC "typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);")
(define-entry-point glResetHistogram PFNGLRESETHISTOGRAMPROC "typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);")
(define-entry-point glResetMinmax PFNGLRESETMINMAXPROC "typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);")
(define-entry-point glMultiDrawArraysIndirectCountARB PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);")
(define-entry-point glMultiDrawElementsIndirectCountARB PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);")
(define-entry-point glVertexAttribDivisorARB PFNGLVERTEXATTRIBDIVISORARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);")
(define-entry-point glCurrentPaletteMatrixARB PFNGLCURRENTPALETTEMATRIXARBPROC "typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);")
(define-entry-point glMatrixIndexubvARB PFNGLMATRIXINDEXUBVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);")
(define-entry-point glMatrixIndexusvARB PFNGLMATRIXINDEXUSVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);")
(define-entry-point glMatrixIndexuivARB PFNGLMATRIXINDEXUIVARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);")
(define-entry-point glMatrixIndexPointerARB PFNGLMATRIXINDEXPOINTERARBPROC "typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glSampleCoverageARB PFNGLSAMPLECOVERAGEARBPROC "typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);")
(define-entry-point glActiveTextureARB PFNGLACTIVETEXTUREARBPROC "typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);")
(define-entry-point glClientActiveTextureARB PFNGLCLIENTACTIVETEXTUREARBPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);")
(define-entry-point glMultiTexCoord1dARB PFNGLMULTITEXCOORD1DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);")
(define-entry-point glMultiTexCoord1dvARB PFNGLMULTITEXCOORD1DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord1fARB PFNGLMULTITEXCOORD1FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);")
(define-entry-point glMultiTexCoord1fvARB PFNGLMULTITEXCOORD1FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord1iARB PFNGLMULTITEXCOORD1IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);")
(define-entry-point glMultiTexCoord1ivARB PFNGLMULTITEXCOORD1IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord1sARB PFNGLMULTITEXCOORD1SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);")
(define-entry-point glMultiTexCoord1svARB PFNGLMULTITEXCOORD1SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord2dARB PFNGLMULTITEXCOORD2DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);")
(define-entry-point glMultiTexCoord2dvARB PFNGLMULTITEXCOORD2DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord2fARB PFNGLMULTITEXCOORD2FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);")
(define-entry-point glMultiTexCoord2fvARB PFNGLMULTITEXCOORD2FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord2iARB PFNGLMULTITEXCOORD2IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);")
(define-entry-point glMultiTexCoord2ivARB PFNGLMULTITEXCOORD2IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord2sARB PFNGLMULTITEXCOORD2SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);")
(define-entry-point glMultiTexCoord2svARB PFNGLMULTITEXCOORD2SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord3dARB PFNGLMULTITEXCOORD3DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);")
(define-entry-point glMultiTexCoord3dvARB PFNGLMULTITEXCOORD3DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord3fARB PFNGLMULTITEXCOORD3FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);")
(define-entry-point glMultiTexCoord3fvARB PFNGLMULTITEXCOORD3FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord3iARB PFNGLMULTITEXCOORD3IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);")
(define-entry-point glMultiTexCoord3ivARB PFNGLMULTITEXCOORD3IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord3sARB PFNGLMULTITEXCOORD3SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);")
(define-entry-point glMultiTexCoord3svARB PFNGLMULTITEXCOORD3SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glMultiTexCoord4dARB PFNGLMULTITEXCOORD4DARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);")
(define-entry-point glMultiTexCoord4dvARB PFNGLMULTITEXCOORD4DVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);")
(define-entry-point glMultiTexCoord4fARB PFNGLMULTITEXCOORD4FARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);")
(define-entry-point glMultiTexCoord4fvARB PFNGLMULTITEXCOORD4FVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);")
(define-entry-point glMultiTexCoord4iARB PFNGLMULTITEXCOORD4IARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);")
(define-entry-point glMultiTexCoord4ivARB PFNGLMULTITEXCOORD4IVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);")
(define-entry-point glMultiTexCoord4sARB PFNGLMULTITEXCOORD4SARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);")
(define-entry-point glMultiTexCoord4svARB PFNGLMULTITEXCOORD4SVARBPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);")
(define-entry-point glGenQueriesARB PFNGLGENQUERIESARBPROC "typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteQueriesARB PFNGLDELETEQUERIESARBPROC "typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsQueryARB PFNGLISQUERYARBPROC "typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);")
(define-entry-point glBeginQueryARB PFNGLBEGINQUERYARBPROC "typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);")
(define-entry-point glEndQueryARB PFNGLENDQUERYARBPROC "typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);")
(define-entry-point glGetQueryivARB PFNGLGETQUERYIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectivARB PFNGLGETQUERYOBJECTIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetQueryObjectuivARB PFNGLGETQUERYOBJECTUIVARBPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glPointParameterfARB PFNGLPOINTPARAMETERFARBPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvARB PFNGLPOINTPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glGetGraphicsResetStatusARB PFNGLGETGRAPHICSRESETSTATUSARBPROC "typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);")
(define-entry-point glGetnTexImageARB PFNGLGETNTEXIMAGEARBPROC "typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);")
(define-entry-point glReadnPixelsARB PFNGLREADNPIXELSARBPROC "typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);")
(define-entry-point glGetnCompressedTexImageARB PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC "typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);")
(define-entry-point glGetnUniformfvARB PFNGLGETNUNIFORMFVARBPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);")
(define-entry-point glGetnUniformivARB PFNGLGETNUNIFORMIVARBPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);")
(define-entry-point glGetnUniformuivARB PFNGLGETNUNIFORMUIVARBPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);")
(define-entry-point glGetnUniformdvARB PFNGLGETNUNIFORMDVARBPROC "typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);")
(define-entry-point glGetnMapdvARB PFNGLGETNMAPDVARBPROC "typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);")
(define-entry-point glGetnMapfvARB PFNGLGETNMAPFVARBPROC "typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);")
(define-entry-point glGetnMapivARB PFNGLGETNMAPIVARBPROC "typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);")
(define-entry-point glGetnPixelMapfvARB PFNGLGETNPIXELMAPFVARBPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);")
(define-entry-point glGetnPixelMapuivARB PFNGLGETNPIXELMAPUIVARBPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);")
(define-entry-point glGetnPixelMapusvARB PFNGLGETNPIXELMAPUSVARBPROC "typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);")
(define-entry-point glGetnPolygonStippleARB PFNGLGETNPOLYGONSTIPPLEARBPROC "typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);")
(define-entry-point glGetnColorTableARB PFNGLGETNCOLORTABLEARBPROC "typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);")
(define-entry-point glGetnConvolutionFilterARB PFNGLGETNCONVOLUTIONFILTERARBPROC "typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);")
(define-entry-point glGetnSeparableFilterARB PFNGLGETNSEPARABLEFILTERARBPROC "typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);")
(define-entry-point glGetnHistogramARB PFNGLGETNHISTOGRAMARBPROC "typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);")
(define-entry-point glGetnMinmaxARB PFNGLGETNMINMAXARBPROC "typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);")
(define-entry-point glMinSampleShadingARB PFNGLMINSAMPLESHADINGARBPROC "typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);")
(define-entry-point glDeleteObjectARB PFNGLDELETEOBJECTARBPROC "typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);")
(define-entry-point glGetHandleARB PFNGLGETHANDLEARBPROC "typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);")
(define-entry-point glDetachObjectARB PFNGLDETACHOBJECTARBPROC "typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);")
(define-entry-point glCreateShaderObjectARB PFNGLCREATESHADEROBJECTARBPROC "typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);")
(define-entry-point glShaderSourceARB PFNGLSHADERSOURCEARBPROC "typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);")
(define-entry-point glCompileShaderARB PFNGLCOMPILESHADERARBPROC "typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);")
(define-entry-point glCreateProgramObjectARB PFNGLCREATEPROGRAMOBJECTARBPROC "typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);")
(define-entry-point glAttachObjectARB PFNGLATTACHOBJECTARBPROC "typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);")
(define-entry-point glLinkProgramARB PFNGLLINKPROGRAMARBPROC "typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);")
(define-entry-point glUseProgramObjectARB PFNGLUSEPROGRAMOBJECTARBPROC "typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);")
(define-entry-point glValidateProgramARB PFNGLVALIDATEPROGRAMARBPROC "typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);")
(define-entry-point glUniform1fARB PFNGLUNIFORM1FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);")
(define-entry-point glUniform2fARB PFNGLUNIFORM2FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glUniform3fARB PFNGLUNIFORM3FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glUniform4fARB PFNGLUNIFORM4FARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glUniform1iARB PFNGLUNIFORM1IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);")
(define-entry-point glUniform2iARB PFNGLUNIFORM2IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);")
(define-entry-point glUniform3iARB PFNGLUNIFORM3IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glUniform4iARB PFNGLUNIFORM4IARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glUniform1fvARB PFNGLUNIFORM1FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform2fvARB PFNGLUNIFORM2FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform3fvARB PFNGLUNIFORM3FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform4fvARB PFNGLUNIFORM4FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glUniform1ivARB PFNGLUNIFORM1IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform2ivARB PFNGLUNIFORM2IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform3ivARB PFNGLUNIFORM3IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniform4ivARB PFNGLUNIFORM4IVARBPROC "typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);")
(define-entry-point glUniformMatrix2fvARB PFNGLUNIFORMMATRIX2FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix3fvARB PFNGLUNIFORMMATRIX3FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glUniformMatrix4fvARB PFNGLUNIFORMMATRIX4FVARBPROC "typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glGetObjectParameterfvARB PFNGLGETOBJECTPARAMETERFVARBPROC "typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);")
(define-entry-point glGetObjectParameterivARB PFNGLGETOBJECTPARAMETERIVARBPROC "typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);")
(define-entry-point glGetInfoLogARB PFNGLGETINFOLOGARBPROC "typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);")
(define-entry-point glGetAttachedObjectsARB PFNGLGETATTACHEDOBJECTSARBPROC "typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);")
(define-entry-point glGetUniformLocationARB PFNGLGETUNIFORMLOCATIONARBPROC "typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);")
(define-entry-point glGetActiveUniformARB PFNGLGETACTIVEUNIFORMARBPROC "typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);")
(define-entry-point glGetUniformfvARB PFNGLGETUNIFORMFVARBPROC "typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);")
(define-entry-point glGetUniformivARB PFNGLGETUNIFORMIVARBPROC "typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);")
(define-entry-point glGetShaderSourceARB PFNGLGETSHADERSOURCEARBPROC "typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);")
(define-entry-point glNamedStringARB PFNGLNAMEDSTRINGARBPROC "typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);")
(define-entry-point glDeleteNamedStringARB PFNGLDELETENAMEDSTRINGARBPROC "typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);")
(define-entry-point glCompileShaderIncludeARB PFNGLCOMPILESHADERINCLUDEARBPROC "typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);")
(define-entry-point glIsNamedStringARB PFNGLISNAMEDSTRINGARBPROC "typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);")
(define-entry-point glGetNamedStringARB PFNGLGETNAMEDSTRINGARBPROC "typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);")
(define-entry-point glGetNamedStringivARB PFNGLGETNAMEDSTRINGIVARBPROC "typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);")
(define-entry-point glBufferPageCommitmentARB PFNGLBUFFERPAGECOMMITMENTARBPROC "typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);")
(define-entry-point glNamedBufferPageCommitmentEXT PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);")
(define-entry-point glNamedBufferPageCommitmentARB PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);")
(define-entry-point glTexPageCommitmentARB PFNGLTEXPAGECOMMITMENTARBPROC "typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);")
(define-entry-point glTexBufferARB PFNGLTEXBUFFERARBPROC "typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);")
(define-entry-point glCompressedTexImage3DARB PFNGLCOMPRESSEDTEXIMAGE3DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexImage2DARB PFNGLCOMPRESSEDTEXIMAGE2DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexImage1DARB PFNGLCOMPRESSEDTEXIMAGE1DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage3DARB PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage2DARB PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glCompressedTexSubImage1DARB PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);")
(define-entry-point glGetCompressedTexImageARB PFNGLGETCOMPRESSEDTEXIMAGEARBPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *img);")
(define-entry-point glLoadTransposeMatrixfARB PFNGLLOADTRANSPOSEMATRIXFARBPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);")
(define-entry-point glLoadTransposeMatrixdARB PFNGLLOADTRANSPOSEMATRIXDARBPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);")
(define-entry-point glMultTransposeMatrixfARB PFNGLMULTTRANSPOSEMATRIXFARBPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);")
(define-entry-point glMultTransposeMatrixdARB PFNGLMULTTRANSPOSEMATRIXDARBPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);")
(define-entry-point glWeightbvARB PFNGLWEIGHTBVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);")
(define-entry-point glWeightsvARB PFNGLWEIGHTSVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);")
(define-entry-point glWeightivARB PFNGLWEIGHTIVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);")
(define-entry-point glWeightfvARB PFNGLWEIGHTFVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);")
(define-entry-point glWeightdvARB PFNGLWEIGHTDVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);")
(define-entry-point glWeightubvARB PFNGLWEIGHTUBVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);")
(define-entry-point glWeightusvARB PFNGLWEIGHTUSVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);")
(define-entry-point glWeightuivARB PFNGLWEIGHTUIVARBPROC "typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);")
(define-entry-point glWeightPointerARB PFNGLWEIGHTPOINTERARBPROC "typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glVertexBlendARB PFNGLVERTEXBLENDARBPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);")
(define-entry-point glBindBufferARB PFNGLBINDBUFFERARBPROC "typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);")
(define-entry-point glDeleteBuffersARB PFNGLDELETEBUFFERSARBPROC "typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);")
(define-entry-point glGenBuffersARB PFNGLGENBUFFERSARBPROC "typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);")
(define-entry-point glIsBufferARB PFNGLISBUFFERARBPROC "typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);")
(define-entry-point glBufferDataARB PFNGLBUFFERDATAARBPROC "typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);")
(define-entry-point glBufferSubDataARB PFNGLBUFFERSUBDATAARBPROC "typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);")
(define-entry-point glGetBufferSubDataARB PFNGLGETBUFFERSUBDATAARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);")
(define-entry-point glMapBufferARB PFNGLMAPBUFFERARBPROC "typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);")
(define-entry-point glUnmapBufferARB PFNGLUNMAPBUFFERARBPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);")
(define-entry-point glGetBufferParameterivARB PFNGLGETBUFFERPARAMETERIVARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetBufferPointervARB PFNGLGETBUFFERPOINTERVARBPROC "typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **params);")
(define-entry-point glVertexAttrib1dARB PFNGLVERTEXATTRIB1DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dvARB PFNGLVERTEXATTRIB1DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1fARB PFNGLVERTEXATTRIB1FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fvARB PFNGLVERTEXATTRIB1FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1sARB PFNGLVERTEXATTRIB1SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1svARB PFNGLVERTEXATTRIB1SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2dARB PFNGLVERTEXATTRIB2DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dvARB PFNGLVERTEXATTRIB2DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2fARB PFNGLVERTEXATTRIB2FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fvARB PFNGLVERTEXATTRIB2FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2sARB PFNGLVERTEXATTRIB2SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2svARB PFNGLVERTEXATTRIB2SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3dARB PFNGLVERTEXATTRIB3DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dvARB PFNGLVERTEXATTRIB3DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3fARB PFNGLVERTEXATTRIB3FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fvARB PFNGLVERTEXATTRIB3FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3sARB PFNGLVERTEXATTRIB3SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3svARB PFNGLVERTEXATTRIB3SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4NbvARB PFNGLVERTEXATTRIB4NBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4NivARB PFNGLVERTEXATTRIB4NIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4NsvARB PFNGLVERTEXATTRIB4NSVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4NubARB PFNGLVERTEXATTRIB4NUBARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4NubvARB PFNGLVERTEXATTRIB4NUBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4NuivARB PFNGLVERTEXATTRIB4NUIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4NusvARB PFNGLVERTEXATTRIB4NUSVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttrib4bvARB PFNGLVERTEXATTRIB4BVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttrib4dARB PFNGLVERTEXATTRIB4DARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dvARB PFNGLVERTEXATTRIB4DVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4fARB PFNGLVERTEXATTRIB4FARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fvARB PFNGLVERTEXATTRIB4FVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4ivARB PFNGLVERTEXATTRIB4IVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttrib4sARB PFNGLVERTEXATTRIB4SARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4svARB PFNGLVERTEXATTRIB4SVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubvARB PFNGLVERTEXATTRIB4UBVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttrib4uivARB PFNGLVERTEXATTRIB4UIVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttrib4usvARB PFNGLVERTEXATTRIB4USVARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttribPointerARB PFNGLVERTEXATTRIBPOINTERARBPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);")
(define-entry-point glEnableVertexAttribArrayARB PFNGLENABLEVERTEXATTRIBARRAYARBPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);")
(define-entry-point glDisableVertexAttribArrayARB PFNGLDISABLEVERTEXATTRIBARRAYARBPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);")
(define-entry-point glGetVertexAttribdvARB PFNGLGETVERTEXATTRIBDVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfvARB PFNGLGETVERTEXATTRIBFVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribivARB PFNGLGETVERTEXATTRIBIVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointervARB PFNGLGETVERTEXATTRIBPOINTERVARBPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void **pointer);")
(define-entry-point glBindAttribLocationARB PFNGLBINDATTRIBLOCATIONARBPROC "typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);")
(define-entry-point glGetActiveAttribARB PFNGLGETACTIVEATTRIBARBPROC "typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);")
(define-entry-point glGetAttribLocationARB PFNGLGETATTRIBLOCATIONARBPROC "typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);")
(define-entry-point glWindowPos2dARB PFNGLWINDOWPOS2DARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dvARB PFNGLWINDOWPOS2DVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2fARB PFNGLWINDOWPOS2FARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fvARB PFNGLWINDOWPOS2FVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2iARB PFNGLWINDOWPOS2IARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2ivARB PFNGLWINDOWPOS2IVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);")
(define-entry-point glWindowPos2sARB PFNGLWINDOWPOS2SARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2svARB PFNGLWINDOWPOS2SVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);")
(define-entry-point glWindowPos3dARB PFNGLWINDOWPOS3DARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dvARB PFNGLWINDOWPOS3DVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3fARB PFNGLWINDOWPOS3FARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fvARB PFNGLWINDOWPOS3FVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3iARB PFNGLWINDOWPOS3IARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3ivARB PFNGLWINDOWPOS3IVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);")
(define-entry-point glWindowPos3sARB PFNGLWINDOWPOS3SARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3svARB PFNGLWINDOWPOS3SVARBPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);")
(define-entry-point glBlendBarrierKHR PFNGLBLENDBARRIERKHRPROC "typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);")
(define-entry-point glMultiTexCoord1bOES PFNGLMULTITEXCOORD1BOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);")
(define-entry-point glMultiTexCoord1bvOES PFNGLMULTITEXCOORD1BVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);")
(define-entry-point glMultiTexCoord2bOES PFNGLMULTITEXCOORD2BOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);")
(define-entry-point glMultiTexCoord2bvOES PFNGLMULTITEXCOORD2BVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);")
(define-entry-point glMultiTexCoord3bOES PFNGLMULTITEXCOORD3BOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r);")
(define-entry-point glMultiTexCoord3bvOES PFNGLMULTITEXCOORD3BVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);")
(define-entry-point glMultiTexCoord4bOES PFNGLMULTITEXCOORD4BOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);")
(define-entry-point glMultiTexCoord4bvOES PFNGLMULTITEXCOORD4BVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);")
(define-entry-point glTexCoord1bOES PFNGLTEXCOORD1BOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);")
(define-entry-point glTexCoord1bvOES PFNGLTEXCOORD1BVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);")
(define-entry-point glTexCoord2bOES PFNGLTEXCOORD2BOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);")
(define-entry-point glTexCoord2bvOES PFNGLTEXCOORD2BVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);")
(define-entry-point glTexCoord3bOES PFNGLTEXCOORD3BOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);")
(define-entry-point glTexCoord3bvOES PFNGLTEXCOORD3BVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);")
(define-entry-point glTexCoord4bOES PFNGLTEXCOORD4BOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);")
(define-entry-point glTexCoord4bvOES PFNGLTEXCOORD4BVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);")
(define-entry-point glVertex2bOES PFNGLVERTEX2BOESPROC "typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x, GLbyte y);")
(define-entry-point glVertex2bvOES PFNGLVERTEX2BVOESPROC "typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);")
(define-entry-point glVertex3bOES PFNGLVERTEX3BOESPROC "typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y, GLbyte z);")
(define-entry-point glVertex3bvOES PFNGLVERTEX3BVOESPROC "typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);")
(define-entry-point glVertex4bOES PFNGLVERTEX4BOESPROC "typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z, GLbyte w);")
(define-entry-point glVertex4bvOES PFNGLVERTEX4BVOESPROC "typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);")
(define-entry-point glAlphaFuncxOES PFNGLALPHAFUNCXOESPROC "typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);")
(define-entry-point glClearColorxOES PFNGLCLEARCOLORXOESPROC "typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);")
(define-entry-point glClearDepthxOES PFNGLCLEARDEPTHXOESPROC "typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);")
(define-entry-point glClipPlanexOES PFNGLCLIPPLANEXOESPROC "typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);")
(define-entry-point glColor4xOES PFNGLCOLOR4XOESPROC "typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);")
(define-entry-point glDepthRangexOES PFNGLDEPTHRANGEXOESPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);")
(define-entry-point glFogxOES PFNGLFOGXOESPROC "typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);")
(define-entry-point glFogxvOES PFNGLFOGXVOESPROC "typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);")
(define-entry-point glFrustumxOES PFNGLFRUSTUMXOESPROC "typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);")
(define-entry-point glGetClipPlanexOES PFNGLGETCLIPPLANEXOESPROC "typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);")
(define-entry-point glGetFixedvOES PFNGLGETFIXEDVOESPROC "typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);")
(define-entry-point glGetTexEnvxvOES PFNGLGETTEXENVXVOESPROC "typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);")
(define-entry-point glGetTexParameterxvOES PFNGLGETTEXPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);")
(define-entry-point glLightModelxOES PFNGLLIGHTMODELXOESPROC "typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);")
(define-entry-point glLightModelxvOES PFNGLLIGHTMODELXVOESPROC "typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);")
(define-entry-point glLightxOES PFNGLLIGHTXOESPROC "typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);")
(define-entry-point glLightxvOES PFNGLLIGHTXVOESPROC "typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);")
(define-entry-point glLineWidthxOES PFNGLLINEWIDTHXOESPROC "typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);")
(define-entry-point glLoadMatrixxOES PFNGLLOADMATRIXXOESPROC "typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);")
(define-entry-point glMaterialxOES PFNGLMATERIALXOESPROC "typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);")
(define-entry-point glMaterialxvOES PFNGLMATERIALXVOESPROC "typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);")
(define-entry-point glMultMatrixxOES PFNGLMULTMATRIXXOESPROC "typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);")
(define-entry-point glMultiTexCoord4xOES PFNGLMULTITEXCOORD4XOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);")
(define-entry-point glNormal3xOES PFNGLNORMAL3XOESPROC "typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);")
(define-entry-point glOrthoxOES PFNGLORTHOXOESPROC "typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);")
(define-entry-point glPointParameterxvOES PFNGLPOINTPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);")
(define-entry-point glPointSizexOES PFNGLPOINTSIZEXOESPROC "typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);")
(define-entry-point glPolygonOffsetxOES PFNGLPOLYGONOFFSETXOESPROC "typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);")
(define-entry-point glRotatexOES PFNGLROTATEXOESPROC "typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);")
(define-entry-point glSampleCoverageOES PFNGLSAMPLECOVERAGEOESPROC "typedef void (APIENTRYP PFNGLSAMPLECOVERAGEOESPROC) (GLfixed value, GLboolean invert);")
(define-entry-point glScalexOES PFNGLSCALEXOESPROC "typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);")
(define-entry-point glTexEnvxOES PFNGLTEXENVXOESPROC "typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);")
(define-entry-point glTexEnvxvOES PFNGLTEXENVXVOESPROC "typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);")
(define-entry-point glTexParameterxOES PFNGLTEXPARAMETERXOESPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);")
(define-entry-point glTexParameterxvOES PFNGLTEXPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);")
(define-entry-point glTranslatexOES PFNGLTRANSLATEXOESPROC "typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);")
(define-entry-point glAccumxOES PFNGLACCUMXOESPROC "typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);")
(define-entry-point glBitmapxOES PFNGLBITMAPXOESPROC "typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);")
(define-entry-point glBlendColorxOES PFNGLBLENDCOLORXOESPROC "typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);")
(define-entry-point glClearAccumxOES PFNGLCLEARACCUMXOESPROC "typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);")
(define-entry-point glColor3xOES PFNGLCOLOR3XOESPROC "typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);")
(define-entry-point glColor3xvOES PFNGLCOLOR3XVOESPROC "typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);")
(define-entry-point glColor4xvOES PFNGLCOLOR4XVOESPROC "typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);")
(define-entry-point glConvolutionParameterxOES PFNGLCONVOLUTIONPARAMETERXOESPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);")
(define-entry-point glConvolutionParameterxvOES PFNGLCONVOLUTIONPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);")
(define-entry-point glEvalCoord1xOES PFNGLEVALCOORD1XOESPROC "typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);")
(define-entry-point glEvalCoord1xvOES PFNGLEVALCOORD1XVOESPROC "typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);")
(define-entry-point glEvalCoord2xOES PFNGLEVALCOORD2XOESPROC "typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);")
(define-entry-point glEvalCoord2xvOES PFNGLEVALCOORD2XVOESPROC "typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);")
(define-entry-point glFeedbackBufferxOES PFNGLFEEDBACKBUFFERXOESPROC "typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);")
(define-entry-point glGetConvolutionParameterxvOES PFNGLGETCONVOLUTIONPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);")
(define-entry-point glGetHistogramParameterxvOES PFNGLGETHISTOGRAMPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);")
(define-entry-point glGetLightxOES PFNGLGETLIGHTXOESPROC "typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);")
(define-entry-point glGetMapxvOES PFNGLGETMAPXVOESPROC "typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);")
(define-entry-point glGetMaterialxOES PFNGLGETMATERIALXOESPROC "typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);")
(define-entry-point glGetPixelMapxv PFNGLGETPIXELMAPXVPROC "typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);")
(define-entry-point glGetTexGenxvOES PFNGLGETTEXGENXVOESPROC "typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);")
(define-entry-point glGetTexLevelParameterxvOES PFNGLGETTEXLEVELPARAMETERXVOESPROC "typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);")
(define-entry-point glIndexxOES PFNGLINDEXXOESPROC "typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);")
(define-entry-point glIndexxvOES PFNGLINDEXXVOESPROC "typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);")
(define-entry-point glLoadTransposeMatrixxOES PFNGLLOADTRANSPOSEMATRIXXOESPROC "typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);")
(define-entry-point glMap1xOES PFNGLMAP1XOESPROC "typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);")
(define-entry-point glMap2xOES PFNGLMAP2XOESPROC "typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);")
(define-entry-point glMapGrid1xOES PFNGLMAPGRID1XOESPROC "typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);")
(define-entry-point glMapGrid2xOES PFNGLMAPGRID2XOESPROC "typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);")
(define-entry-point glMultTransposeMatrixxOES PFNGLMULTTRANSPOSEMATRIXXOESPROC "typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);")
(define-entry-point glMultiTexCoord1xOES PFNGLMULTITEXCOORD1XOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);")
(define-entry-point glMultiTexCoord1xvOES PFNGLMULTITEXCOORD1XVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);")
(define-entry-point glMultiTexCoord2xOES PFNGLMULTITEXCOORD2XOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);")
(define-entry-point glMultiTexCoord2xvOES PFNGLMULTITEXCOORD2XVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);")
(define-entry-point glMultiTexCoord3xOES PFNGLMULTITEXCOORD3XOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);")
(define-entry-point glMultiTexCoord3xvOES PFNGLMULTITEXCOORD3XVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);")
(define-entry-point glMultiTexCoord4xvOES PFNGLMULTITEXCOORD4XVOESPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);")
(define-entry-point glNormal3xvOES PFNGLNORMAL3XVOESPROC "typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);")
(define-entry-point glPassThroughxOES PFNGLPASSTHROUGHXOESPROC "typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);")
(define-entry-point glPixelMapx PFNGLPIXELMAPXPROC "typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);")
(define-entry-point glPixelStorex PFNGLPIXELSTOREXPROC "typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);")
(define-entry-point glPixelTransferxOES PFNGLPIXELTRANSFERXOESPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);")
(define-entry-point glPixelZoomxOES PFNGLPIXELZOOMXOESPROC "typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);")
(define-entry-point glPrioritizeTexturesxOES PFNGLPRIORITIZETEXTURESXOESPROC "typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);")
(define-entry-point glRasterPos2xOES PFNGLRASTERPOS2XOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);")
(define-entry-point glRasterPos2xvOES PFNGLRASTERPOS2XVOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);")
(define-entry-point glRasterPos3xOES PFNGLRASTERPOS3XOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);")
(define-entry-point glRasterPos3xvOES PFNGLRASTERPOS3XVOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);")
(define-entry-point glRasterPos4xOES PFNGLRASTERPOS4XOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);")
(define-entry-point glRasterPos4xvOES PFNGLRASTERPOS4XVOESPROC "typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);")
(define-entry-point glRectxOES PFNGLRECTXOESPROC "typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);")
(define-entry-point glRectxvOES PFNGLRECTXVOESPROC "typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);")
(define-entry-point glTexCoord1xOES PFNGLTEXCOORD1XOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);")
(define-entry-point glTexCoord1xvOES PFNGLTEXCOORD1XVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);")
(define-entry-point glTexCoord2xOES PFNGLTEXCOORD2XOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);")
(define-entry-point glTexCoord2xvOES PFNGLTEXCOORD2XVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);")
(define-entry-point glTexCoord3xOES PFNGLTEXCOORD3XOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);")
(define-entry-point glTexCoord3xvOES PFNGLTEXCOORD3XVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);")
(define-entry-point glTexCoord4xOES PFNGLTEXCOORD4XOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);")
(define-entry-point glTexCoord4xvOES PFNGLTEXCOORD4XVOESPROC "typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);")
(define-entry-point glTexGenxOES PFNGLTEXGENXOESPROC "typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);")
(define-entry-point glTexGenxvOES PFNGLTEXGENXVOESPROC "typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);")
(define-entry-point glVertex2xOES PFNGLVERTEX2XOESPROC "typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);")
(define-entry-point glVertex2xvOES PFNGLVERTEX2XVOESPROC "typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);")
(define-entry-point glVertex3xOES PFNGLVERTEX3XOESPROC "typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);")
(define-entry-point glVertex3xvOES PFNGLVERTEX3XVOESPROC "typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);")
(define-entry-point glVertex4xOES PFNGLVERTEX4XOESPROC "typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);")
(define-entry-point glVertex4xvOES PFNGLVERTEX4XVOESPROC "typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);")
(define-entry-point glQueryMatrixxOES PFNGLQUERYMATRIXXOESPROC "typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);")
(define-entry-point glClearDepthfOES PFNGLCLEARDEPTHFOESPROC "typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);")
(define-entry-point glClipPlanefOES PFNGLCLIPPLANEFOESPROC "typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);")
(define-entry-point glDepthRangefOES PFNGLDEPTHRANGEFOESPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);")
(define-entry-point glFrustumfOES PFNGLFRUSTUMFOESPROC "typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);")
(define-entry-point glGetClipPlanefOES PFNGLGETCLIPPLANEFOESPROC "typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);")
(define-entry-point glOrthofOES PFNGLORTHOFOESPROC "typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);")
(define-entry-point glTbufferMask3DFX PFNGLTBUFFERMASK3DFXPROC "typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);")
(define-entry-point glDebugMessageEnableAMD PFNGLDEBUGMESSAGEENABLEAMDPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);")
(define-entry-point glDebugMessageInsertAMD PFNGLDEBUGMESSAGEINSERTAMDPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);")
(define-entry-point glDebugMessageCallbackAMD PFNGLDEBUGMESSAGECALLBACKAMDPROC "typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userParam);")
(define-entry-point glGetDebugMessageLogAMD PFNGLGETDEBUGMESSAGELOGAMDPROC "typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);")
(define-entry-point glBlendFuncIndexedAMD PFNGLBLENDFUNCINDEXEDAMDPROC "typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);")
(define-entry-point glBlendFuncSeparateIndexedAMD PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);")
(define-entry-point glBlendEquationIndexedAMD PFNGLBLENDEQUATIONINDEXEDAMDPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);")
(define-entry-point glBlendEquationSeparateIndexedAMD PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glUniform1i64NV PFNGLUNIFORM1I64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);")
(define-entry-point glUniform2i64NV PFNGLUNIFORM2I64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);")
(define-entry-point glUniform3i64NV PFNGLUNIFORM3I64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);")
(define-entry-point glUniform4i64NV PFNGLUNIFORM4I64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);")
(define-entry-point glUniform1i64vNV PFNGLUNIFORM1I64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glUniform2i64vNV PFNGLUNIFORM2I64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glUniform3i64vNV PFNGLUNIFORM3I64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glUniform4i64vNV PFNGLUNIFORM4I64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glUniform1ui64NV PFNGLUNIFORM1UI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);")
(define-entry-point glUniform2ui64NV PFNGLUNIFORM2UI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);")
(define-entry-point glUniform3ui64NV PFNGLUNIFORM3UI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);")
(define-entry-point glUniform4ui64NV PFNGLUNIFORM4UI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);")
(define-entry-point glUniform1ui64vNV PFNGLUNIFORM1UI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glUniform2ui64vNV PFNGLUNIFORM2UI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glUniform3ui64vNV PFNGLUNIFORM3UI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glUniform4ui64vNV PFNGLUNIFORM4UI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glGetUniformi64vNV PFNGLGETUNIFORMI64VNVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);")
(define-entry-point glGetUniformui64vNV PFNGLGETUNIFORMUI64VNVPROC "typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);")
(define-entry-point glProgramUniform1i64NV PFNGLPROGRAMUNIFORM1I64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);")
(define-entry-point glProgramUniform2i64NV PFNGLPROGRAMUNIFORM2I64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);")
(define-entry-point glProgramUniform3i64NV PFNGLPROGRAMUNIFORM3I64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);")
(define-entry-point glProgramUniform4i64NV PFNGLPROGRAMUNIFORM4I64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);")
(define-entry-point glProgramUniform1i64vNV PFNGLPROGRAMUNIFORM1I64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glProgramUniform2i64vNV PFNGLPROGRAMUNIFORM2I64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glProgramUniform3i64vNV PFNGLPROGRAMUNIFORM3I64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glProgramUniform4i64vNV PFNGLPROGRAMUNIFORM4I64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);")
(define-entry-point glProgramUniform1ui64NV PFNGLPROGRAMUNIFORM1UI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);")
(define-entry-point glProgramUniform2ui64NV PFNGLPROGRAMUNIFORM2UI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);")
(define-entry-point glProgramUniform3ui64NV PFNGLPROGRAMUNIFORM3UI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);")
(define-entry-point glProgramUniform4ui64NV PFNGLPROGRAMUNIFORM4UI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);")
(define-entry-point glProgramUniform1ui64vNV PFNGLPROGRAMUNIFORM1UI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glProgramUniform2ui64vNV PFNGLPROGRAMUNIFORM2UI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glProgramUniform3ui64vNV PFNGLPROGRAMUNIFORM3UI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glProgramUniform4ui64vNV PFNGLPROGRAMUNIFORM4UI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glVertexAttribParameteriAMD PFNGLVERTEXATTRIBPARAMETERIAMDPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint param);")
(define-entry-point glMultiDrawArraysIndirectAMD PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);")
(define-entry-point glMultiDrawElementsIndirectAMD PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);")
(define-entry-point glGenNamesAMD PFNGLGENNAMESAMDPROC "typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);")
(define-entry-point glDeleteNamesAMD PFNGLDELETENAMESAMDPROC "typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);")
(define-entry-point glIsNameAMD PFNGLISNAMEAMDPROC "typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);")
(define-entry-point glQueryObjectParameteruiAMD PFNGLQUERYOBJECTPARAMETERUIAMDPROC "typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pname, GLuint param);")
(define-entry-point glGetPerfMonitorGroupsAMD PFNGLGETPERFMONITORGROUPSAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);")
(define-entry-point glGetPerfMonitorCountersAMD PFNGLGETPERFMONITORCOUNTERSAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);")
(define-entry-point glGetPerfMonitorGroupStringAMD PFNGLGETPERFMONITORGROUPSTRINGAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);")
(define-entry-point glGetPerfMonitorCounterStringAMD PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);")
(define-entry-point glGetPerfMonitorCounterInfoAMD PFNGLGETPERFMONITORCOUNTERINFOAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);")
(define-entry-point glGenPerfMonitorsAMD PFNGLGENPERFMONITORSAMDPROC "typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);")
(define-entry-point glDeletePerfMonitorsAMD PFNGLDELETEPERFMONITORSAMDPROC "typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);")
(define-entry-point glSelectPerfMonitorCountersAMD PFNGLSELECTPERFMONITORCOUNTERSAMDPROC "typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);")
(define-entry-point glBeginPerfMonitorAMD PFNGLBEGINPERFMONITORAMDPROC "typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);")
(define-entry-point glEndPerfMonitorAMD PFNGLENDPERFMONITORAMDPROC "typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);")
(define-entry-point glGetPerfMonitorCounterDataAMD PFNGLGETPERFMONITORCOUNTERDATAAMDPROC "typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);")
(define-entry-point glSetMultisamplefvAMD PFNGLSETMULTISAMPLEFVAMDPROC "typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);")
(define-entry-point glTexStorageSparseAMD PFNGLTEXSTORAGESPARSEAMDPROC "typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);")
(define-entry-point glTextureStorageSparseAMD PFNGLTEXTURESTORAGESPARSEAMDPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);")
(define-entry-point glStencilOpValueAMD PFNGLSTENCILOPVALUEAMDPROC "typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);")
(define-entry-point glTessellationFactorAMD PFNGLTESSELLATIONFACTORAMDPROC "typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);")
(define-entry-point glTessellationModeAMD PFNGLTESSELLATIONMODEAMDPROC "typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);")
(define-entry-point glElementPointerAPPLE PFNGLELEMENTPOINTERAPPLEPROC "typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);")
(define-entry-point glDrawElementArrayAPPLE PFNGLDRAWELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);")
(define-entry-point glDrawRangeElementArrayAPPLE PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);")
(define-entry-point glMultiDrawElementArrayAPPLE PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);")
(define-entry-point glMultiDrawRangeElementArrayAPPLE PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);")
(define-entry-point glGenFencesAPPLE PFNGLGENFENCESAPPLEPROC "typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);")
(define-entry-point glDeleteFencesAPPLE PFNGLDELETEFENCESAPPLEPROC "typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);")
(define-entry-point glSetFenceAPPLE PFNGLSETFENCEAPPLEPROC "typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glIsFenceAPPLE PFNGLISFENCEAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glTestFenceAPPLE PFNGLTESTFENCEAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glFinishFenceAPPLE PFNGLFINISHFENCEAPPLEPROC "typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);")
(define-entry-point glTestObjectAPPLE PFNGLTESTOBJECTAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);")
(define-entry-point glFinishObjectAPPLE PFNGLFINISHOBJECTAPPLEPROC "typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);")
(define-entry-point glBufferParameteriAPPLE PFNGLBUFFERPARAMETERIAPPLEPROC "typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glFlushMappedBufferRangeAPPLE PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC "typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);")
(define-entry-point glObjectPurgeableAPPLE PFNGLOBJECTPURGEABLEAPPLEPROC "typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);")
(define-entry-point glObjectUnpurgeableAPPLE PFNGLOBJECTUNPURGEABLEAPPLEPROC "typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);")
(define-entry-point glGetObjectParameterivAPPLE PFNGLGETOBJECTPARAMETERIVAPPLEPROC "typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);")
(define-entry-point glTextureRangeAPPLE PFNGLTEXTURERANGEAPPLEPROC "typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void *pointer);")
(define-entry-point glGetTexParameterPointervAPPLE PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, void **params);")
(define-entry-point glBindVertexArrayAPPLE PFNGLBINDVERTEXARRAYAPPLEPROC "typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);")
(define-entry-point glDeleteVertexArraysAPPLE PFNGLDELETEVERTEXARRAYSAPPLEPROC "typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);")
(define-entry-point glGenVertexArraysAPPLE PFNGLGENVERTEXARRAYSAPPLEPROC "typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);")
(define-entry-point glIsVertexArrayAPPLE PFNGLISVERTEXARRAYAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);")
(define-entry-point glVertexArrayRangeAPPLE PFNGLVERTEXARRAYRANGEAPPLEPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);")
(define-entry-point glFlushVertexArrayRangeAPPLE PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC "typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);")
(define-entry-point glVertexArrayParameteriAPPLE PFNGLVERTEXARRAYPARAMETERIAPPLEPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);")
(define-entry-point glEnableVertexAttribAPPLE PFNGLENABLEVERTEXATTRIBAPPLEPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);")
(define-entry-point glDisableVertexAttribAPPLE PFNGLDISABLEVERTEXATTRIBAPPLEPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);")
(define-entry-point glIsVertexAttribEnabledAPPLE PFNGLISVERTEXATTRIBENABLEDAPPLEPROC "typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);")
(define-entry-point glMapVertexAttrib1dAPPLE PFNGLMAPVERTEXATTRIB1DAPPLEPROC "typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);")
(define-entry-point glMapVertexAttrib1fAPPLE PFNGLMAPVERTEXATTRIB1FAPPLEPROC "typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);")
(define-entry-point glMapVertexAttrib2dAPPLE PFNGLMAPVERTEXATTRIB2DAPPLEPROC "typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);")
(define-entry-point glMapVertexAttrib2fAPPLE PFNGLMAPVERTEXATTRIB2FAPPLEPROC "typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);")
(define-entry-point glDrawBuffersATI PFNGLDRAWBUFFERSATIPROC "typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);")
(define-entry-point glElementPointerATI PFNGLELEMENTPOINTERATIPROC "typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);")
(define-entry-point glDrawElementArrayATI PFNGLDRAWELEMENTARRAYATIPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);")
(define-entry-point glDrawRangeElementArrayATI PFNGLDRAWRANGEELEMENTARRAYATIPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);")
(define-entry-point glTexBumpParameterivATI PFNGLTEXBUMPPARAMETERIVATIPROC "typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);")
(define-entry-point glTexBumpParameterfvATI PFNGLTEXBUMPPARAMETERFVATIPROC "typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);")
(define-entry-point glGetTexBumpParameterivATI PFNGLGETTEXBUMPPARAMETERIVATIPROC "typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);")
(define-entry-point glGetTexBumpParameterfvATI PFNGLGETTEXBUMPPARAMETERFVATIPROC "typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);")
(define-entry-point glGenFragmentShadersATI PFNGLGENFRAGMENTSHADERSATIPROC "typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);")
(define-entry-point glBindFragmentShaderATI PFNGLBINDFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);")
(define-entry-point glDeleteFragmentShaderATI PFNGLDELETEFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);")
(define-entry-point glBeginFragmentShaderATI PFNGLBEGINFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);")
(define-entry-point glEndFragmentShaderATI PFNGLENDFRAGMENTSHADERATIPROC "typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);")
(define-entry-point glPassTexCoordATI PFNGLPASSTEXCOORDATIPROC "typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);")
(define-entry-point glSampleMapATI PFNGLSAMPLEMAPATIPROC "typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);")
(define-entry-point glColorFragmentOp1ATI PFNGLCOLORFRAGMENTOP1ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);")
(define-entry-point glColorFragmentOp2ATI PFNGLCOLORFRAGMENTOP2ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);")
(define-entry-point glColorFragmentOp3ATI PFNGLCOLORFRAGMENTOP3ATIPROC "typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);")
(define-entry-point glAlphaFragmentOp1ATI PFNGLALPHAFRAGMENTOP1ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);")
(define-entry-point glAlphaFragmentOp2ATI PFNGLALPHAFRAGMENTOP2ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);")
(define-entry-point glAlphaFragmentOp3ATI PFNGLALPHAFRAGMENTOP3ATIPROC "typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);")
(define-entry-point glSetFragmentShaderConstantATI PFNGLSETFRAGMENTSHADERCONSTANTATIPROC "typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);")
(define-entry-point glMapObjectBufferATI PFNGLMAPOBJECTBUFFERATIPROC "typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glUnmapObjectBufferATI PFNGLUNMAPOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glPNTrianglesiATI PFNGLPNTRIANGLESIATIPROC "typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);")
(define-entry-point glPNTrianglesfATI PFNGLPNTRIANGLESFATIPROC "typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);")
(define-entry-point glStencilOpSeparateATI PFNGLSTENCILOPSEPARATEATIPROC "typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);")
(define-entry-point glStencilFuncSeparateATI PFNGLSTENCILFUNCSEPARATEATIPROC "typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);")
(define-entry-point glNewObjectBufferATI PFNGLNEWOBJECTBUFFERATIPROC "typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenum usage);")
(define-entry-point glIsObjectBufferATI PFNGLISOBJECTBUFFERATIPROC "typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glUpdateObjectBufferATI PFNGLUPDATEOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);")
(define-entry-point glGetObjectBufferfvATI PFNGLGETOBJECTBUFFERFVATIPROC "typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);")
(define-entry-point glGetObjectBufferivATI PFNGLGETOBJECTBUFFERIVATIPROC "typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);")
(define-entry-point glFreeObjectBufferATI PFNGLFREEOBJECTBUFFERATIPROC "typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);")
(define-entry-point glArrayObjectATI PFNGLARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetArrayObjectfvATI PFNGLGETARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);")
(define-entry-point glGetArrayObjectivATI PFNGLGETARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);")
(define-entry-point glVariantArrayObjectATI PFNGLVARIANTARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetVariantArrayObjectfvATI PFNGLGETVARIANTARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);")
(define-entry-point glGetVariantArrayObjectivATI PFNGLGETVARIANTARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glVertexAttribArrayObjectATI PFNGLVERTEXATTRIBARRAYOBJECTATIPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);")
(define-entry-point glGetVertexAttribArrayObjectfvATI PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribArrayObjectivATI PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glVertexStream1sATI PFNGLVERTEXSTREAM1SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);")
(define-entry-point glVertexStream1svATI PFNGLVERTEXSTREAM1SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream1iATI PFNGLVERTEXSTREAM1IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);")
(define-entry-point glVertexStream1ivATI PFNGLVERTEXSTREAM1IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream1fATI PFNGLVERTEXSTREAM1FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);")
(define-entry-point glVertexStream1fvATI PFNGLVERTEXSTREAM1FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream1dATI PFNGLVERTEXSTREAM1DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);")
(define-entry-point glVertexStream1dvATI PFNGLVERTEXSTREAM1DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream2sATI PFNGLVERTEXSTREAM2SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);")
(define-entry-point glVertexStream2svATI PFNGLVERTEXSTREAM2SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream2iATI PFNGLVERTEXSTREAM2IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);")
(define-entry-point glVertexStream2ivATI PFNGLVERTEXSTREAM2IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream2fATI PFNGLVERTEXSTREAM2FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);")
(define-entry-point glVertexStream2fvATI PFNGLVERTEXSTREAM2FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream2dATI PFNGLVERTEXSTREAM2DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);")
(define-entry-point glVertexStream2dvATI PFNGLVERTEXSTREAM2DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream3sATI PFNGLVERTEXSTREAM3SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexStream3svATI PFNGLVERTEXSTREAM3SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream3iATI PFNGLVERTEXSTREAM3IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);")
(define-entry-point glVertexStream3ivATI PFNGLVERTEXSTREAM3IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream3fATI PFNGLVERTEXSTREAM3FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexStream3fvATI PFNGLVERTEXSTREAM3FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream3dATI PFNGLVERTEXSTREAM3DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexStream3dvATI PFNGLVERTEXSTREAM3DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glVertexStream4sATI PFNGLVERTEXSTREAM4SATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexStream4svATI PFNGLVERTEXSTREAM4SVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glVertexStream4iATI PFNGLVERTEXSTREAM4IATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glVertexStream4ivATI PFNGLVERTEXSTREAM4IVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glVertexStream4fATI PFNGLVERTEXSTREAM4FATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexStream4fvATI PFNGLVERTEXSTREAM4FVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glVertexStream4dATI PFNGLVERTEXSTREAM4DATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexStream4dvATI PFNGLVERTEXSTREAM4DVATIPROC "typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glNormalStream3bATI PFNGLNORMALSTREAM3BATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);")
(define-entry-point glNormalStream3bvATI PFNGLNORMALSTREAM3BVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);")
(define-entry-point glNormalStream3sATI PFNGLNORMALSTREAM3SATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);")
(define-entry-point glNormalStream3svATI PFNGLNORMALSTREAM3SVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);")
(define-entry-point glNormalStream3iATI PFNGLNORMALSTREAM3IATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);")
(define-entry-point glNormalStream3ivATI PFNGLNORMALSTREAM3IVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);")
(define-entry-point glNormalStream3fATI PFNGLNORMALSTREAM3FATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);")
(define-entry-point glNormalStream3fvATI PFNGLNORMALSTREAM3FVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);")
(define-entry-point glNormalStream3dATI PFNGLNORMALSTREAM3DATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);")
(define-entry-point glNormalStream3dvATI PFNGLNORMALSTREAM3DVATIPROC "typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);")
(define-entry-point glClientActiveVertexStreamATI PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC "typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);")
(define-entry-point glVertexBlendEnviATI PFNGLVERTEXBLENDENVIATIPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);")
(define-entry-point glVertexBlendEnvfATI PFNGLVERTEXBLENDENVFATIPROC "typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);")
(define-entry-point glUniformBufferEXT PFNGLUNIFORMBUFFEREXTPROC "typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);")
(define-entry-point glGetUniformBufferSizeEXT PFNGLGETUNIFORMBUFFERSIZEEXTPROC "typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);")
(define-entry-point glGetUniformOffsetEXT PFNGLGETUNIFORMOFFSETEXTPROC "typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);")
(define-entry-point glBlendColorEXT PFNGLBLENDCOLOREXTPROC "typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);")
(define-entry-point glBlendEquationSeparateEXT PFNGLBLENDEQUATIONSEPARATEEXTPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);")
(define-entry-point glBlendFuncSeparateEXT PFNGLBLENDFUNCSEPARATEEXTPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glBlendEquationEXT PFNGLBLENDEQUATIONEXTPROC "typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);")
(define-entry-point glColorSubTableEXT PFNGLCOLORSUBTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);")
(define-entry-point glCopyColorSubTableEXT PFNGLCOPYCOLORSUBTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);")
(define-entry-point glLockArraysEXT PFNGLLOCKARRAYSEXTPROC "typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);")
(define-entry-point glUnlockArraysEXT PFNGLUNLOCKARRAYSEXTPROC "typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);")
(define-entry-point glConvolutionFilter1DEXT PFNGLCONVOLUTIONFILTER1DEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);")
(define-entry-point glConvolutionFilter2DEXT PFNGLCONVOLUTIONFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);")
(define-entry-point glConvolutionParameterfEXT PFNGLCONVOLUTIONPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);")
(define-entry-point glConvolutionParameterfvEXT PFNGLCONVOLUTIONPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glConvolutionParameteriEXT PFNGLCONVOLUTIONPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);")
(define-entry-point glConvolutionParameterivEXT PFNGLCONVOLUTIONPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyConvolutionFilter1DEXT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyConvolutionFilter2DEXT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetConvolutionFilterEXT PFNGLGETCONVOLUTIONFILTEREXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *image);")
(define-entry-point glGetConvolutionParameterfvEXT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetConvolutionParameterivEXT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetSeparableFilterEXT PFNGLGETSEPARABLEFILTEREXTPROC "typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);")
(define-entry-point glSeparableFilter2DEXT PFNGLSEPARABLEFILTER2DEXTPROC "typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);")
(define-entry-point glTangent3bEXT PFNGLTANGENT3BEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);")
(define-entry-point glTangent3bvEXT PFNGLTANGENT3BVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glTangent3dEXT PFNGLTANGENT3DEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);")
(define-entry-point glTangent3dvEXT PFNGLTANGENT3DVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glTangent3fEXT PFNGLTANGENT3FEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);")
(define-entry-point glTangent3fvEXT PFNGLTANGENT3FVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glTangent3iEXT PFNGLTANGENT3IEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);")
(define-entry-point glTangent3ivEXT PFNGLTANGENT3IVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);")
(define-entry-point glTangent3sEXT PFNGLTANGENT3SEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);")
(define-entry-point glTangent3svEXT PFNGLTANGENT3SVEXTPROC "typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);")
(define-entry-point glBinormal3bEXT PFNGLBINORMAL3BEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);")
(define-entry-point glBinormal3bvEXT PFNGLBINORMAL3BVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glBinormal3dEXT PFNGLBINORMAL3DEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);")
(define-entry-point glBinormal3dvEXT PFNGLBINORMAL3DVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glBinormal3fEXT PFNGLBINORMAL3FEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);")
(define-entry-point glBinormal3fvEXT PFNGLBINORMAL3FVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glBinormal3iEXT PFNGLBINORMAL3IEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);")
(define-entry-point glBinormal3ivEXT PFNGLBINORMAL3IVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);")
(define-entry-point glBinormal3sEXT PFNGLBINORMAL3SEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);")
(define-entry-point glBinormal3svEXT PFNGLBINORMAL3SVEXTPROC "typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);")
(define-entry-point glTangentPointerEXT PFNGLTANGENTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glBinormalPointerEXT PFNGLBINORMALPOINTEREXTPROC "typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glCopyTexImage1DEXT PFNGLCOPYTEXIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);")
(define-entry-point glCopyTexImage2DEXT PFNGLCOPYTEXIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);")
(define-entry-point glCopyTexSubImage1DEXT PFNGLCOPYTEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyTexSubImage2DEXT PFNGLCOPYTEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glCopyTexSubImage3DEXT PFNGLCOPYTEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glCullParameterdvEXT PFNGLCULLPARAMETERDVEXTPROC "typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);")
(define-entry-point glCullParameterfvEXT PFNGLCULLPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);")
(define-entry-point glLabelObjectEXT PFNGLLABELOBJECTEXTPROC "typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);")
(define-entry-point glGetObjectLabelEXT PFNGLGETOBJECTLABELEXTPROC "typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);")
(define-entry-point glInsertEventMarkerEXT PFNGLINSERTEVENTMARKEREXTPROC "typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);")
(define-entry-point glPushGroupMarkerEXT PFNGLPUSHGROUPMARKEREXTPROC "typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);")
(define-entry-point glPopGroupMarkerEXT PFNGLPOPGROUPMARKEREXTPROC "typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);")
(define-entry-point glDepthBoundsEXT PFNGLDEPTHBOUNDSEXTPROC "typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);")
(define-entry-point glMatrixLoadfEXT PFNGLMATRIXLOADFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);")
(define-entry-point glMatrixLoaddEXT PFNGLMATRIXLOADDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);")
(define-entry-point glMatrixMultfEXT PFNGLMATRIXMULTFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);")
(define-entry-point glMatrixMultdEXT PFNGLMATRIXMULTDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);")
(define-entry-point glMatrixLoadIdentityEXT PFNGLMATRIXLOADIDENTITYEXTPROC "typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);")
(define-entry-point glMatrixRotatefEXT PFNGLMATRIXROTATEFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glMatrixRotatedEXT PFNGLMATRIXROTATEDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glMatrixScalefEXT PFNGLMATRIXSCALEFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glMatrixScaledEXT PFNGLMATRIXSCALEDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glMatrixTranslatefEXT PFNGLMATRIXTRANSLATEFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glMatrixTranslatedEXT PFNGLMATRIXTRANSLATEDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glMatrixFrustumEXT PFNGLMATRIXFRUSTUMEXTPROC "typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);")
(define-entry-point glMatrixOrthoEXT PFNGLMATRIXORTHOEXTPROC "typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);")
(define-entry-point glMatrixPopEXT PFNGLMATRIXPOPEXTPROC "typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);")
(define-entry-point glMatrixPushEXT PFNGLMATRIXPUSHEXTPROC "typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);")
(define-entry-point glClientAttribDefaultEXT PFNGLCLIENTATTRIBDEFAULTEXTPROC "typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);")
(define-entry-point glPushClientAttribDefaultEXT PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC "typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);")
(define-entry-point glTextureParameterfEXT PFNGLTEXTUREPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glTextureParameterfvEXT PFNGLTEXTUREPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glTextureParameteriEXT PFNGLTEXTUREPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);")
(define-entry-point glTextureParameterivEXT PFNGLTEXTUREPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glTextureImage1DEXT PFNGLTEXTUREIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureImage2DEXT PFNGLTEXTUREIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureSubImage1DEXT PFNGLTEXTURESUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureSubImage2DEXT PFNGLTEXTURESUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCopyTextureImage1DEXT PFNGLCOPYTEXTUREIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);")
(define-entry-point glCopyTextureImage2DEXT PFNGLCOPYTEXTUREIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);")
(define-entry-point glCopyTextureSubImage1DEXT PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyTextureSubImage2DEXT PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetTextureImageEXT PFNGLGETTEXTUREIMAGEEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);")
(define-entry-point glGetTextureParameterfvEXT PFNGLGETTEXTUREPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetTextureParameterivEXT PFNGLGETTEXTUREPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetTextureLevelParameterfvEXT PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);")
(define-entry-point glGetTextureLevelParameterivEXT PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);")
(define-entry-point glTextureImage3DEXT PFNGLTEXTUREIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureSubImage3DEXT PFNGLTEXTURESUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCopyTextureSubImage3DEXT PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glBindMultiTextureEXT PFNGLBINDMULTITEXTUREEXTPROC "typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);")
(define-entry-point glMultiTexCoordPointerEXT PFNGLMULTITEXCOORDPOINTEREXTPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glMultiTexEnvfEXT PFNGLMULTITEXENVFEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glMultiTexEnvfvEXT PFNGLMULTITEXENVFVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glMultiTexEnviEXT PFNGLMULTITEXENVIEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);")
(define-entry-point glMultiTexEnvivEXT PFNGLMULTITEXENVIVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glMultiTexGendEXT PFNGLMULTITEXGENDEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);")
(define-entry-point glMultiTexGendvEXT PFNGLMULTITEXGENDVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);")
(define-entry-point glMultiTexGenfEXT PFNGLMULTITEXGENFEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);")
(define-entry-point glMultiTexGenfvEXT PFNGLMULTITEXGENFVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);")
(define-entry-point glMultiTexGeniEXT PFNGLMULTITEXGENIEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);")
(define-entry-point glMultiTexGenivEXT PFNGLMULTITEXGENIVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);")
(define-entry-point glGetMultiTexEnvfvEXT PFNGLGETMULTITEXENVFVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMultiTexEnvivEXT PFNGLGETMULTITEXENVIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMultiTexGendvEXT PFNGLGETMULTITEXGENDVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);")
(define-entry-point glGetMultiTexGenfvEXT PFNGLGETMULTITEXGENFVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);")
(define-entry-point glGetMultiTexGenivEXT PFNGLGETMULTITEXGENIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);")
(define-entry-point glMultiTexParameteriEXT PFNGLMULTITEXPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);")
(define-entry-point glMultiTexParameterivEXT PFNGLMULTITEXPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glMultiTexParameterfEXT PFNGLMULTITEXPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glMultiTexParameterfvEXT PFNGLMULTITEXPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glMultiTexImage1DEXT PFNGLMULTITEXIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glMultiTexImage2DEXT PFNGLMULTITEXIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glMultiTexSubImage1DEXT PFNGLMULTITEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glMultiTexSubImage2DEXT PFNGLMULTITEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCopyMultiTexImage1DEXT PFNGLCOPYMULTITEXIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);")
(define-entry-point glCopyMultiTexImage2DEXT PFNGLCOPYMULTITEXIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);")
(define-entry-point glCopyMultiTexSubImage1DEXT PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);")
(define-entry-point glCopyMultiTexSubImage2DEXT PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glGetMultiTexImageEXT PFNGLGETMULTITEXIMAGEEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);")
(define-entry-point glGetMultiTexParameterfvEXT PFNGLGETMULTITEXPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMultiTexParameterivEXT PFNGLGETMULTITEXPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMultiTexLevelParameterfvEXT PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);")
(define-entry-point glGetMultiTexLevelParameterivEXT PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);")
(define-entry-point glMultiTexImage3DEXT PFNGLMULTITEXIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glMultiTexSubImage3DEXT PFNGLMULTITEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glCopyMultiTexSubImage3DEXT PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);")
(define-entry-point glEnableClientStateIndexedEXT PFNGLENABLECLIENTSTATEINDEXEDEXTPROC "typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);")
(define-entry-point glDisableClientStateIndexedEXT PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC "typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);")
(define-entry-point glGetFloatIndexedvEXT PFNGLGETFLOATINDEXEDVEXTPROC "typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);")
(define-entry-point glGetDoubleIndexedvEXT PFNGLGETDOUBLEINDEXEDVEXTPROC "typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);")
(define-entry-point glGetPointerIndexedvEXT PFNGLGETPOINTERINDEXEDVEXTPROC "typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);")
(define-entry-point glEnableIndexedEXT PFNGLENABLEINDEXEDEXTPROC "typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);")
(define-entry-point glDisableIndexedEXT PFNGLDISABLEINDEXEDEXTPROC "typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);")
(define-entry-point glIsEnabledIndexedEXT PFNGLISENABLEDINDEXEDEXTPROC "typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);")
(define-entry-point glGetIntegerIndexedvEXT PFNGLGETINTEGERINDEXEDVEXTPROC "typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);")
(define-entry-point glGetBooleanIndexedvEXT PFNGLGETBOOLEANINDEXEDVEXTPROC "typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);")
(define-entry-point glCompressedTextureImage3DEXT PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedTextureImage2DEXT PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedTextureImage1DEXT PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedTextureSubImage3DEXT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedTextureSubImage2DEXT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedTextureSubImage1DEXT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glGetCompressedTextureImageEXT PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);")
(define-entry-point glCompressedMultiTexImage3DEXT PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedMultiTexImage2DEXT PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedMultiTexImage1DEXT PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedMultiTexSubImage3DEXT PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedMultiTexSubImage2DEXT PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glCompressedMultiTexSubImage1DEXT PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);")
(define-entry-point glGetCompressedMultiTexImageEXT PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC "typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);")
(define-entry-point glMatrixLoadTransposefEXT PFNGLMATRIXLOADTRANSPOSEFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);")
(define-entry-point glMatrixLoadTransposedEXT PFNGLMATRIXLOADTRANSPOSEDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);")
(define-entry-point glMatrixMultTransposefEXT PFNGLMATRIXMULTTRANSPOSEFEXTPROC "typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);")
(define-entry-point glMatrixMultTransposedEXT PFNGLMATRIXMULTTRANSPOSEDEXTPROC "typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);")
(define-entry-point glNamedBufferDataEXT PFNGLNAMEDBUFFERDATAEXTPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);")
(define-entry-point glNamedBufferSubDataEXT PFNGLNAMEDBUFFERSUBDATAEXTPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);")
(define-entry-point glMapNamedBufferEXT PFNGLMAPNAMEDBUFFEREXTPROC "typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);")
(define-entry-point glUnmapNamedBufferEXT PFNGLUNMAPNAMEDBUFFEREXTPROC "typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);")
(define-entry-point glGetNamedBufferParameterivEXT PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);")
(define-entry-point glGetNamedBufferPointervEXT PFNGLGETNAMEDBUFFERPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);")
(define-entry-point glGetNamedBufferSubDataEXT PFNGLGETNAMEDBUFFERSUBDATAEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);")
(define-entry-point glProgramUniform1fEXT PFNGLPROGRAMUNIFORM1FEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);")
(define-entry-point glProgramUniform2fEXT PFNGLPROGRAMUNIFORM2FEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);")
(define-entry-point glProgramUniform3fEXT PFNGLPROGRAMUNIFORM3FEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);")
(define-entry-point glProgramUniform4fEXT PFNGLPROGRAMUNIFORM4FEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);")
(define-entry-point glProgramUniform1iEXT PFNGLPROGRAMUNIFORM1IEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);")
(define-entry-point glProgramUniform2iEXT PFNGLPROGRAMUNIFORM2IEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);")
(define-entry-point glProgramUniform3iEXT PFNGLPROGRAMUNIFORM3IEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);")
(define-entry-point glProgramUniform4iEXT PFNGLPROGRAMUNIFORM4IEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);")
(define-entry-point glProgramUniform1fvEXT PFNGLPROGRAMUNIFORM1FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform2fvEXT PFNGLPROGRAMUNIFORM2FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform3fvEXT PFNGLPROGRAMUNIFORM3FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform4fvEXT PFNGLPROGRAMUNIFORM4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);")
(define-entry-point glProgramUniform1ivEXT PFNGLPROGRAMUNIFORM1IVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform2ivEXT PFNGLPROGRAMUNIFORM2IVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform3ivEXT PFNGLPROGRAMUNIFORM3IVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniform4ivEXT PFNGLPROGRAMUNIFORM4IVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);")
(define-entry-point glProgramUniformMatrix2fvEXT PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3fvEXT PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4fvEXT PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix2x3fvEXT PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3x2fvEXT PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix2x4fvEXT PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4x2fvEXT PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix3x4fvEXT PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glProgramUniformMatrix4x3fvEXT PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);")
(define-entry-point glTextureBufferEXT PFNGLTEXTUREBUFFEREXTPROC "typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);")
(define-entry-point glMultiTexBufferEXT PFNGLMULTITEXBUFFEREXTPROC "typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);")
(define-entry-point glTextureParameterIivEXT PFNGLTEXTUREPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glTextureParameterIuivEXT PFNGLTEXTUREPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);")
(define-entry-point glGetTextureParameterIivEXT PFNGLGETTEXTUREPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetTextureParameterIuivEXT PFNGLGETTEXTUREPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);")
(define-entry-point glMultiTexParameterIivEXT PFNGLMULTITEXPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glMultiTexParameterIuivEXT PFNGLMULTITEXPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);")
(define-entry-point glGetMultiTexParameterIivEXT PFNGLGETMULTITEXPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMultiTexParameterIuivEXT PFNGLGETMULTITEXPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);")
(define-entry-point glProgramUniform1uiEXT PFNGLPROGRAMUNIFORM1UIEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);")
(define-entry-point glProgramUniform2uiEXT PFNGLPROGRAMUNIFORM2UIEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);")
(define-entry-point glProgramUniform3uiEXT PFNGLPROGRAMUNIFORM3UIEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);")
(define-entry-point glProgramUniform4uiEXT PFNGLPROGRAMUNIFORM4UIEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);")
(define-entry-point glProgramUniform1uivEXT PFNGLPROGRAMUNIFORM1UIVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform2uivEXT PFNGLPROGRAMUNIFORM2UIVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform3uivEXT PFNGLPROGRAMUNIFORM3UIVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glProgramUniform4uivEXT PFNGLPROGRAMUNIFORM4UIVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glNamedProgramLocalParameters4fvEXT PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);")
(define-entry-point glNamedProgramLocalParameterI4iEXT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glNamedProgramLocalParameterI4ivEXT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);")
(define-entry-point glNamedProgramLocalParametersI4ivEXT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);")
(define-entry-point glNamedProgramLocalParameterI4uiEXT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);")
(define-entry-point glNamedProgramLocalParameterI4uivEXT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);")
(define-entry-point glNamedProgramLocalParametersI4uivEXT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);")
(define-entry-point glGetNamedProgramLocalParameterIivEXT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);")
(define-entry-point glGetNamedProgramLocalParameterIuivEXT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);")
(define-entry-point glEnableClientStateiEXT PFNGLENABLECLIENTSTATEIEXTPROC "typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);")
(define-entry-point glDisableClientStateiEXT PFNGLDISABLECLIENTSTATEIEXTPROC "typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);")
(define-entry-point glGetFloati_vEXT PFNGLGETFLOATI_VEXTPROC "typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);")
(define-entry-point glGetDoublei_vEXT PFNGLGETDOUBLEI_VEXTPROC "typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);")
(define-entry-point glGetPointeri_vEXT PFNGLGETPOINTERI_VEXTPROC "typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);")
(define-entry-point glNamedProgramStringEXT PFNGLNAMEDPROGRAMSTRINGEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);")
(define-entry-point glNamedProgramLocalParameter4dEXT PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glNamedProgramLocalParameter4dvEXT PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);")
(define-entry-point glNamedProgramLocalParameter4fEXT PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glNamedProgramLocalParameter4fvEXT PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC "typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);")
(define-entry-point glGetNamedProgramLocalParameterdvEXT PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);")
(define-entry-point glGetNamedProgramLocalParameterfvEXT PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);")
(define-entry-point glGetNamedProgramivEXT PFNGLGETNAMEDPROGRAMIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetNamedProgramStringEXT PFNGLGETNAMEDPROGRAMSTRINGEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);")
(define-entry-point glNamedRenderbufferStorageEXT PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC "typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glGetNamedRenderbufferParameterivEXT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);")
(define-entry-point glNamedRenderbufferStorageMultisampleEXT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC "typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glNamedRenderbufferStorageMultisampleCoverageEXT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC "typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glCheckNamedFramebufferStatusEXT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC "typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);")
(define-entry-point glNamedFramebufferTexture1DEXT PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glNamedFramebufferTexture2DEXT PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glNamedFramebufferTexture3DEXT PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);")
(define-entry-point glNamedFramebufferRenderbufferEXT PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);")
(define-entry-point glGetNamedFramebufferAttachmentParameterivEXT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);")
(define-entry-point glGenerateTextureMipmapEXT PFNGLGENERATETEXTUREMIPMAPEXTPROC "typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);")
(define-entry-point glGenerateMultiTexMipmapEXT PFNGLGENERATEMULTITEXMIPMAPEXTPROC "typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);")
(define-entry-point glFramebufferDrawBufferEXT PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);")
(define-entry-point glFramebufferDrawBuffersEXT PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);")
(define-entry-point glFramebufferReadBufferEXT PFNGLFRAMEBUFFERREADBUFFEREXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);")
(define-entry-point glGetFramebufferParameterivEXT PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);")
(define-entry-point glNamedCopyBufferSubDataEXT PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC "typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);")
(define-entry-point glNamedFramebufferTextureEXT PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);")
(define-entry-point glNamedFramebufferTextureLayerEXT PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);")
(define-entry-point glNamedFramebufferTextureFaceEXT PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);")
(define-entry-point glTextureRenderbufferEXT PFNGLTEXTURERENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);")
(define-entry-point glMultiTexRenderbufferEXT PFNGLMULTITEXRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);")
(define-entry-point glVertexArrayVertexOffsetEXT PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayColorOffsetEXT PFNGLVERTEXARRAYCOLOROFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayEdgeFlagOffsetEXT PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayIndexOffsetEXT PFNGLVERTEXARRAYINDEXOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayNormalOffsetEXT PFNGLVERTEXARRAYNORMALOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayTexCoordOffsetEXT PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayMultiTexCoordOffsetEXT PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayFogCoordOffsetEXT PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArraySecondaryColorOffsetEXT PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayVertexAttribOffsetEXT PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);")
(define-entry-point glVertexArrayVertexAttribIOffsetEXT PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glEnableVertexArrayEXT PFNGLENABLEVERTEXARRAYEXTPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);")
(define-entry-point glDisableVertexArrayEXT PFNGLDISABLEVERTEXARRAYEXTPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);")
(define-entry-point glEnableVertexArrayAttribEXT PFNGLENABLEVERTEXARRAYATTRIBEXTPROC "typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);")
(define-entry-point glDisableVertexArrayAttribEXT PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC "typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);")
(define-entry-point glGetVertexArrayIntegervEXT PFNGLGETVERTEXARRAYINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);")
(define-entry-point glGetVertexArrayPointervEXT PFNGLGETVERTEXARRAYPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);")
(define-entry-point glGetVertexArrayIntegeri_vEXT PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);")
(define-entry-point glGetVertexArrayPointeri_vEXT PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);")
(define-entry-point glMapNamedBufferRangeEXT PFNGLMAPNAMEDBUFFERRANGEEXTPROC "typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);")
(define-entry-point glFlushMappedNamedBufferRangeEXT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC "typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);")
(define-entry-point glNamedBufferStorageEXT PFNGLNAMEDBUFFERSTORAGEEXTPROC "typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);")
(define-entry-point glClearNamedBufferDataEXT PFNGLCLEARNAMEDBUFFERDATAEXTPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);")
(define-entry-point glClearNamedBufferSubDataEXT PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC "typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);")
(define-entry-point glNamedFramebufferParameteriEXT PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);")
(define-entry-point glGetNamedFramebufferParameterivEXT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);")
(define-entry-point glProgramUniform1dEXT PFNGLPROGRAMUNIFORM1DEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);")
(define-entry-point glProgramUniform2dEXT PFNGLPROGRAMUNIFORM2DEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);")
(define-entry-point glProgramUniform3dEXT PFNGLPROGRAMUNIFORM3DEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glProgramUniform4dEXT PFNGLPROGRAMUNIFORM4DEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramUniform1dvEXT PFNGLPROGRAMUNIFORM1DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform2dvEXT PFNGLPROGRAMUNIFORM2DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform3dvEXT PFNGLPROGRAMUNIFORM3DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniform4dvEXT PFNGLPROGRAMUNIFORM4DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix2dvEXT PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3dvEXT PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4dvEXT PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix2x3dvEXT PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix2x4dvEXT PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3x2dvEXT PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix3x4dvEXT PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4x2dvEXT PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glProgramUniformMatrix4x3dvEXT PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);")
(define-entry-point glTextureBufferRangeEXT PFNGLTEXTUREBUFFERRANGEEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);")
(define-entry-point glTextureStorage1DEXT PFNGLTEXTURESTORAGE1DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);")
(define-entry-point glTextureStorage2DEXT PFNGLTEXTURESTORAGE2DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glTextureStorage3DEXT PFNGLTEXTURESTORAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);")
(define-entry-point glTextureStorage2DMultisampleEXT PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);")
(define-entry-point glTextureStorage3DMultisampleEXT PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC "typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);")
(define-entry-point glVertexArrayBindVertexBufferEXT PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);")
(define-entry-point glVertexArrayVertexAttribFormatEXT PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);")
(define-entry-point glVertexArrayVertexAttribIFormatEXT PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexArrayVertexAttribLFormatEXT PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);")
(define-entry-point glVertexArrayVertexAttribBindingEXT PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);")
(define-entry-point glVertexArrayVertexBindingDivisorEXT PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);")
(define-entry-point glVertexArrayVertexAttribLOffsetEXT PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);")
(define-entry-point glTexturePageCommitmentEXT PFNGLTEXTUREPAGECOMMITMENTEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);")
(define-entry-point glVertexArrayVertexAttribDivisorEXT PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);")
(define-entry-point glColorMaskIndexedEXT PFNGLCOLORMASKINDEXEDEXTPROC "typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);")
(define-entry-point glDrawArraysInstancedEXT PFNGLDRAWARRAYSINSTANCEDEXTPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);")
(define-entry-point glDrawElementsInstancedEXT PFNGLDRAWELEMENTSINSTANCEDEXTPROC "typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);")
(define-entry-point glDrawRangeElementsEXT PFNGLDRAWRANGEELEMENTSEXTPROC "typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);")
(define-entry-point glFogCoordfEXT PFNGLFOGCOORDFEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);")
(define-entry-point glFogCoordfvEXT PFNGLFOGCOORDFVEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);")
(define-entry-point glFogCoorddEXT PFNGLFOGCOORDDEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);")
(define-entry-point glFogCoorddvEXT PFNGLFOGCOORDDVEXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);")
(define-entry-point glFogCoordPointerEXT PFNGLFOGCOORDPOINTEREXTPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glBlitFramebufferEXT PFNGLBLITFRAMEBUFFEREXTPROC "typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);")
(define-entry-point glRenderbufferStorageMultisampleEXT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glIsRenderbufferEXT PFNGLISRENDERBUFFEREXTPROC "typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);")
(define-entry-point glBindRenderbufferEXT PFNGLBINDRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);")
(define-entry-point glDeleteRenderbuffersEXT PFNGLDELETERENDERBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);")
(define-entry-point glGenRenderbuffersEXT PFNGLGENRENDERBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);")
(define-entry-point glRenderbufferStorageEXT PFNGLRENDERBUFFERSTORAGEEXTPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glGetRenderbufferParameterivEXT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glIsFramebufferEXT PFNGLISFRAMEBUFFEREXTPROC "typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);")
(define-entry-point glBindFramebufferEXT PFNGLBINDFRAMEBUFFEREXTPROC "typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);")
(define-entry-point glDeleteFramebuffersEXT PFNGLDELETEFRAMEBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);")
(define-entry-point glGenFramebuffersEXT PFNGLGENFRAMEBUFFERSEXTPROC "typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);")
(define-entry-point glCheckFramebufferStatusEXT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC "typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);")
(define-entry-point glFramebufferTexture1DEXT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture2DEXT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);")
(define-entry-point glFramebufferTexture3DEXT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);")
(define-entry-point glFramebufferRenderbufferEXT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);")
(define-entry-point glGetFramebufferAttachmentParameterivEXT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);")
(define-entry-point glGenerateMipmapEXT PFNGLGENERATEMIPMAPEXTPROC "typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);")
(define-entry-point glProgramParameteriEXT PFNGLPROGRAMPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);")
(define-entry-point glProgramEnvParameters4fvEXT PFNGLPROGRAMENVPARAMETERS4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);")
(define-entry-point glProgramLocalParameters4fvEXT PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);")
(define-entry-point glGetUniformuivEXT PFNGLGETUNIFORMUIVEXTPROC "typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);")
(define-entry-point glBindFragDataLocationEXT PFNGLBINDFRAGDATALOCATIONEXTPROC "typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);")
(define-entry-point glGetFragDataLocationEXT PFNGLGETFRAGDATALOCATIONEXTPROC "typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);")
(define-entry-point glUniform1uiEXT PFNGLUNIFORM1UIEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);")
(define-entry-point glUniform2uiEXT PFNGLUNIFORM2UIEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);")
(define-entry-point glUniform3uiEXT PFNGLUNIFORM3UIEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);")
(define-entry-point glUniform4uiEXT PFNGLUNIFORM4UIEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);")
(define-entry-point glUniform1uivEXT PFNGLUNIFORM1UIVEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform2uivEXT PFNGLUNIFORM2UIVEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform3uivEXT PFNGLUNIFORM3UIVEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glUniform4uivEXT PFNGLUNIFORM4UIVEXTPROC "typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);")
(define-entry-point glGetHistogramEXT PFNGLGETHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);")
(define-entry-point glGetHistogramParameterfvEXT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetHistogramParameterivEXT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMinmaxEXT PFNGLGETMINMAXEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);")
(define-entry-point glGetMinmaxParameterfvEXT PFNGLGETMINMAXPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMinmaxParameterivEXT PFNGLGETMINMAXPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glHistogramEXT PFNGLHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);")
(define-entry-point glMinmaxEXT PFNGLMINMAXEXTPROC "typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);")
(define-entry-point glResetHistogramEXT PFNGLRESETHISTOGRAMEXTPROC "typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);")
(define-entry-point glResetMinmaxEXT PFNGLRESETMINMAXEXTPROC "typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);")
(define-entry-point glIndexFuncEXT PFNGLINDEXFUNCEXTPROC "typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);")
(define-entry-point glIndexMaterialEXT PFNGLINDEXMATERIALEXTPROC "typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);")
(define-entry-point glApplyTextureEXT PFNGLAPPLYTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);")
(define-entry-point glTextureLightEXT PFNGLTEXTURELIGHTEXTPROC "typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);")
(define-entry-point glTextureMaterialEXT PFNGLTEXTUREMATERIALEXTPROC "typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);")
(define-entry-point glMultiDrawArraysEXT PFNGLMULTIDRAWARRAYSEXTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);")
(define-entry-point glMultiDrawElementsEXT PFNGLMULTIDRAWELEMENTSEXTPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);")
(define-entry-point glSampleMaskEXT PFNGLSAMPLEMASKEXTPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glSamplePatternEXT PFNGLSAMPLEPATTERNEXTPROC "typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);")
(define-entry-point glColorTableEXT PFNGLCOLORTABLEEXTPROC "typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);")
(define-entry-point glGetColorTableEXT PFNGLGETCOLORTABLEEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, void *data);")
(define-entry-point glGetColorTableParameterivEXT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetColorTableParameterfvEXT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glPixelTransformParameteriEXT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glPixelTransformParameterfEXT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glPixelTransformParameterivEXT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glPixelTransformParameterfvEXT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glGetPixelTransformParameterivEXT PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC "typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetPixelTransformParameterfvEXT PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glPointParameterfEXT PFNGLPOINTPARAMETERFEXTPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvEXT PFNGLPOINTPARAMETERFVEXTPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glPolygonOffsetEXT PFNGLPOLYGONOFFSETEXTPROC "typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);")
(define-entry-point glPolygonOffsetClampEXT PFNGLPOLYGONOFFSETCLAMPEXTPROC "typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);")
(define-entry-point glProvokingVertexEXT PFNGLPROVOKINGVERTEXEXTPROC "typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);")
(define-entry-point glRasterSamplesEXT PFNGLRASTERSAMPLESEXTPROC "typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);")
(define-entry-point glSecondaryColor3bEXT PFNGLSECONDARYCOLOR3BEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);")
(define-entry-point glSecondaryColor3bvEXT PFNGLSECONDARYCOLOR3BVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);")
(define-entry-point glSecondaryColor3dEXT PFNGLSECONDARYCOLOR3DEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);")
(define-entry-point glSecondaryColor3dvEXT PFNGLSECONDARYCOLOR3DVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);")
(define-entry-point glSecondaryColor3fEXT PFNGLSECONDARYCOLOR3FEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);")
(define-entry-point glSecondaryColor3fvEXT PFNGLSECONDARYCOLOR3FVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);")
(define-entry-point glSecondaryColor3iEXT PFNGLSECONDARYCOLOR3IEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);")
(define-entry-point glSecondaryColor3ivEXT PFNGLSECONDARYCOLOR3IVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);")
(define-entry-point glSecondaryColor3sEXT PFNGLSECONDARYCOLOR3SEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);")
(define-entry-point glSecondaryColor3svEXT PFNGLSECONDARYCOLOR3SVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);")
(define-entry-point glSecondaryColor3ubEXT PFNGLSECONDARYCOLOR3UBEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);")
(define-entry-point glSecondaryColor3ubvEXT PFNGLSECONDARYCOLOR3UBVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);")
(define-entry-point glSecondaryColor3uiEXT PFNGLSECONDARYCOLOR3UIEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);")
(define-entry-point glSecondaryColor3uivEXT PFNGLSECONDARYCOLOR3UIVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);")
(define-entry-point glSecondaryColor3usEXT PFNGLSECONDARYCOLOR3USEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);")
(define-entry-point glSecondaryColor3usvEXT PFNGLSECONDARYCOLOR3USVEXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);")
(define-entry-point glSecondaryColorPointerEXT PFNGLSECONDARYCOLORPOINTEREXTPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glUseShaderProgramEXT PFNGLUSESHADERPROGRAMEXTPROC "typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);")
(define-entry-point glActiveProgramEXT PFNGLACTIVEPROGRAMEXTPROC "typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);")
(define-entry-point glCreateShaderProgramEXT PFNGLCREATESHADERPROGRAMEXTPROC "typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);")
(define-entry-point glBindImageTextureEXT PFNGLBINDIMAGETEXTUREEXTPROC "typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);")
(define-entry-point glMemoryBarrierEXT PFNGLMEMORYBARRIEREXTPROC "typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);")
(define-entry-point glStencilClearTagEXT PFNGLSTENCILCLEARTAGEXTPROC "typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);")
(define-entry-point glActiveStencilFaceEXT PFNGLACTIVESTENCILFACEEXTPROC "typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);")
(define-entry-point glTexSubImage1DEXT PFNGLTEXSUBIMAGE1DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTexSubImage2DEXT PFNGLTEXSUBIMAGE2DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTexImage3DEXT PFNGLTEXIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTexSubImage3DEXT PFNGLTEXSUBIMAGE3DEXTPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glFramebufferTextureLayerEXT PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);")
(define-entry-point glTexBufferEXT PFNGLTEXBUFFEREXTPROC "typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);")
(define-entry-point glTexParameterIivEXT PFNGLTEXPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glTexParameterIuivEXT PFNGLTEXPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);")
(define-entry-point glGetTexParameterIivEXT PFNGLGETTEXPARAMETERIIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetTexParameterIuivEXT PFNGLGETTEXPARAMETERIUIVEXTPROC "typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);")
(define-entry-point glClearColorIiEXT PFNGLCLEARCOLORIIEXTPROC "typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);")
(define-entry-point glClearColorIuiEXT PFNGLCLEARCOLORIUIEXTPROC "typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);")
(define-entry-point glAreTexturesResidentEXT PFNGLARETEXTURESRESIDENTEXTPROC "typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);")
(define-entry-point glBindTextureEXT PFNGLBINDTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);")
(define-entry-point glDeleteTexturesEXT PFNGLDELETETEXTURESEXTPROC "typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);")
(define-entry-point glGenTexturesEXT PFNGLGENTEXTURESEXTPROC "typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);")
(define-entry-point glIsTextureEXT PFNGLISTEXTUREEXTPROC "typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);")
(define-entry-point glPrioritizeTexturesEXT PFNGLPRIORITIZETEXTURESEXTPROC "typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);")
(define-entry-point glTextureNormalEXT PFNGLTEXTURENORMALEXTPROC "typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);")
(define-entry-point glGetQueryObjecti64vEXT PFNGLGETQUERYOBJECTI64VEXTPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);")
(define-entry-point glGetQueryObjectui64vEXT PFNGLGETQUERYOBJECTUI64VEXTPROC "typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);")
(define-entry-point glBeginTransformFeedbackEXT PFNGLBEGINTRANSFORMFEEDBACKEXTPROC "typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);")
(define-entry-point glEndTransformFeedbackEXT PFNGLENDTRANSFORMFEEDBACKEXTPROC "typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);")
(define-entry-point glBindBufferRangeEXT PFNGLBINDBUFFERRANGEEXTPROC "typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);")
(define-entry-point glBindBufferOffsetEXT PFNGLBINDBUFFEROFFSETEXTPROC "typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);")
(define-entry-point glBindBufferBaseEXT PFNGLBINDBUFFERBASEEXTPROC "typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);")
(define-entry-point glTransformFeedbackVaryingsEXT PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);")
(define-entry-point glGetTransformFeedbackVaryingEXT PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);")
(define-entry-point glArrayElementEXT PFNGLARRAYELEMENTEXTPROC "typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);")
(define-entry-point glColorPointerEXT PFNGLCOLORPOINTEREXTPROC "typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);")
(define-entry-point glDrawArraysEXT PFNGLDRAWARRAYSEXTPROC "typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);")
(define-entry-point glEdgeFlagPointerEXT PFNGLEDGEFLAGPOINTEREXTPROC "typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);")
(define-entry-point glGetPointervEXT PFNGLGETPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);")
(define-entry-point glIndexPointerEXT PFNGLINDEXPOINTEREXTPROC "typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);")
(define-entry-point glNormalPointerEXT PFNGLNORMALPOINTEREXTPROC "typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);")
(define-entry-point glTexCoordPointerEXT PFNGLTEXCOORDPOINTEREXTPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);")
(define-entry-point glVertexPointerEXT PFNGLVERTEXPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);")
(define-entry-point glVertexAttribL1dEXT PFNGLVERTEXATTRIBL1DEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttribL2dEXT PFNGLVERTEXATTRIBL2DEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttribL3dEXT PFNGLVERTEXATTRIBL3DEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttribL4dEXT PFNGLVERTEXATTRIBL4DEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttribL1dvEXT PFNGLVERTEXATTRIBL1DVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL2dvEXT PFNGLVERTEXATTRIBL2DVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL3dvEXT PFNGLVERTEXATTRIBL3DVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribL4dvEXT PFNGLVERTEXATTRIBL4DVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttribLPointerEXT PFNGLVERTEXATTRIBLPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glGetVertexAttribLdvEXT PFNGLGETVERTEXATTRIBLDVEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glBeginVertexShaderEXT PFNGLBEGINVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);")
(define-entry-point glEndVertexShaderEXT PFNGLENDVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);")
(define-entry-point glBindVertexShaderEXT PFNGLBINDVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);")
(define-entry-point glGenVertexShadersEXT PFNGLGENVERTEXSHADERSEXTPROC "typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);")
(define-entry-point glDeleteVertexShaderEXT PFNGLDELETEVERTEXSHADEREXTPROC "typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);")
(define-entry-point glShaderOp1EXT PFNGLSHADEROP1EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);")
(define-entry-point glShaderOp2EXT PFNGLSHADEROP2EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);")
(define-entry-point glShaderOp3EXT PFNGLSHADEROP3EXTPROC "typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);")
(define-entry-point glSwizzleEXT PFNGLSWIZZLEEXTPROC "typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);")
(define-entry-point glWriteMaskEXT PFNGLWRITEMASKEXTPROC "typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);")
(define-entry-point glInsertComponentEXT PFNGLINSERTCOMPONENTEXTPROC "typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);")
(define-entry-point glExtractComponentEXT PFNGLEXTRACTCOMPONENTEXTPROC "typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);")
(define-entry-point glGenSymbolsEXT PFNGLGENSYMBOLSEXTPROC "typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);")
(define-entry-point glSetInvariantEXT PFNGLSETINVARIANTEXTPROC "typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);")
(define-entry-point glSetLocalConstantEXT PFNGLSETLOCALCONSTANTEXTPROC "typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr);")
(define-entry-point glVariantbvEXT PFNGLVARIANTBVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);")
(define-entry-point glVariantsvEXT PFNGLVARIANTSVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);")
(define-entry-point glVariantivEXT PFNGLVARIANTIVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);")
(define-entry-point glVariantfvEXT PFNGLVARIANTFVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);")
(define-entry-point glVariantdvEXT PFNGLVARIANTDVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);")
(define-entry-point glVariantubvEXT PFNGLVARIANTUBVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);")
(define-entry-point glVariantusvEXT PFNGLVARIANTUSVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);")
(define-entry-point glVariantuivEXT PFNGLVARIANTUIVEXTPROC "typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);")
(define-entry-point glVariantPointerEXT PFNGLVARIANTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const void *addr);")
(define-entry-point glEnableVariantClientStateEXT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC "typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);")
(define-entry-point glDisableVariantClientStateEXT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC "typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);")
(define-entry-point glBindLightParameterEXT PFNGLBINDLIGHTPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);")
(define-entry-point glBindMaterialParameterEXT PFNGLBINDMATERIALPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);")
(define-entry-point glBindTexGenParameterEXT PFNGLBINDTEXGENPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);")
(define-entry-point glBindTextureUnitParameterEXT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);")
(define-entry-point glBindParameterEXT PFNGLBINDPARAMETEREXTPROC "typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);")
(define-entry-point glIsVariantEnabledEXT PFNGLISVARIANTENABLEDEXTPROC "typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);")
(define-entry-point glGetVariantBooleanvEXT PFNGLGETVARIANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetVariantIntegervEXT PFNGLGETVARIANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetVariantFloatvEXT PFNGLGETVARIANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glGetVariantPointervEXT PFNGLGETVARIANTPOINTERVEXTPROC "typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);")
(define-entry-point glGetInvariantBooleanvEXT PFNGLGETINVARIANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetInvariantIntegervEXT PFNGLGETINVARIANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetInvariantFloatvEXT PFNGLGETINVARIANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glGetLocalConstantBooleanvEXT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);")
(define-entry-point glGetLocalConstantIntegervEXT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);")
(define-entry-point glGetLocalConstantFloatvEXT PFNGLGETLOCALCONSTANTFLOATVEXTPROC "typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);")
(define-entry-point glVertexWeightfEXT PFNGLVERTEXWEIGHTFEXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);")
(define-entry-point glVertexWeightfvEXT PFNGLVERTEXWEIGHTFVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);")
(define-entry-point glVertexWeightPointerEXT PFNGLVERTEXWEIGHTPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glImportSyncEXT PFNGLIMPORTSYNCEXTPROC "typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);")
(define-entry-point glFrameTerminatorGREMEDY PFNGLFRAMETERMINATORGREMEDYPROC "typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);")
(define-entry-point glStringMarkerGREMEDY PFNGLSTRINGMARKERGREMEDYPROC "typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);")
(define-entry-point glImageTransformParameteriHP PFNGLIMAGETRANSFORMPARAMETERIHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);")
(define-entry-point glImageTransformParameterfHP PFNGLIMAGETRANSFORMPARAMETERFHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);")
(define-entry-point glImageTransformParameterivHP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glImageTransformParameterfvHP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC "typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glGetImageTransformParameterivHP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC "typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetImageTransformParameterfvHP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC "typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glMultiModeDrawArraysIBM PFNGLMULTIMODEDRAWARRAYSIBMPROC "typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);")
(define-entry-point glMultiModeDrawElementsIBM PFNGLMULTIMODEDRAWELEMENTSIBMPROC "typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);")
(define-entry-point glFlushStaticDataIBM PFNGLFLUSHSTATICDATAIBMPROC "typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);")
(define-entry-point glColorPointerListIBM PFNGLCOLORPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glSecondaryColorPointerListIBM PFNGLSECONDARYCOLORPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glEdgeFlagPointerListIBM PFNGLEDGEFLAGPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointer, GLint ptrstride);")
(define-entry-point glFogCoordPointerListIBM PFNGLFOGCOORDPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glIndexPointerListIBM PFNGLINDEXPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glNormalPointerListIBM PFNGLNORMALPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glTexCoordPointerListIBM PFNGLTEXCOORDPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glVertexPointerListIBM PFNGLVERTEXPOINTERLISTIBMPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);")
(define-entry-point glBlendFuncSeparateINGR PFNGLBLENDFUNCSEPARATEINGRPROC "typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);")
(define-entry-point glSyncTextureINTEL PFNGLSYNCTEXTUREINTELPROC "typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);")
(define-entry-point glUnmapTexture2DINTEL PFNGLUNMAPTEXTURE2DINTELPROC "typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);")
(define-entry-point glMapTexture2DINTEL PFNGLMAPTEXTURE2DINTELPROC "typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);")
(define-entry-point glVertexPointervINTEL PFNGLVERTEXPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);")
(define-entry-point glNormalPointervINTEL PFNGLNORMALPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);")
(define-entry-point glColorPointervINTEL PFNGLCOLORPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);")
(define-entry-point glTexCoordPointervINTEL PFNGLTEXCOORDPOINTERVINTELPROC "typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);")
(define-entry-point glBeginPerfQueryINTEL PFNGLBEGINPERFQUERYINTELPROC "typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);")
(define-entry-point glCreatePerfQueryINTEL PFNGLCREATEPERFQUERYINTELPROC "typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);")
(define-entry-point glDeletePerfQueryINTEL PFNGLDELETEPERFQUERYINTELPROC "typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);")
(define-entry-point glEndPerfQueryINTEL PFNGLENDPERFQUERYINTELPROC "typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);")
(define-entry-point glGetFirstPerfQueryIdINTEL PFNGLGETFIRSTPERFQUERYIDINTELPROC "typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);")
(define-entry-point glGetNextPerfQueryIdINTEL PFNGLGETNEXTPERFQUERYIDINTELPROC "typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);")
(define-entry-point glGetPerfCounterInfoINTEL PFNGLGETPERFCOUNTERINFOINTELPROC "typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);")
(define-entry-point glGetPerfQueryDataINTEL PFNGLGETPERFQUERYDATAINTELPROC "typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);")
(define-entry-point glGetPerfQueryIdByNameINTEL PFNGLGETPERFQUERYIDBYNAMEINTELPROC "typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);")
(define-entry-point glGetPerfQueryInfoINTEL PFNGLGETPERFQUERYINFOINTELPROC "typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);")
(define-entry-point glResizeBuffersMESA PFNGLRESIZEBUFFERSMESAPROC "typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);")
(define-entry-point glWindowPos2dMESA PFNGLWINDOWPOS2DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);")
(define-entry-point glWindowPos2dvMESA PFNGLWINDOWPOS2DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos2fMESA PFNGLWINDOWPOS2FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);")
(define-entry-point glWindowPos2fvMESA PFNGLWINDOWPOS2FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos2iMESA PFNGLWINDOWPOS2IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);")
(define-entry-point glWindowPos2ivMESA PFNGLWINDOWPOS2IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos2sMESA PFNGLWINDOWPOS2SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);")
(define-entry-point glWindowPos2svMESA PFNGLWINDOWPOS2SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);")
(define-entry-point glWindowPos3dMESA PFNGLWINDOWPOS3DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glWindowPos3dvMESA PFNGLWINDOWPOS3DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos3fMESA PFNGLWINDOWPOS3FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glWindowPos3fvMESA PFNGLWINDOWPOS3FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos3iMESA PFNGLWINDOWPOS3IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);")
(define-entry-point glWindowPos3ivMESA PFNGLWINDOWPOS3IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos3sMESA PFNGLWINDOWPOS3SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);")
(define-entry-point glWindowPos3svMESA PFNGLWINDOWPOS3SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);")
(define-entry-point glWindowPos4dMESA PFNGLWINDOWPOS4DMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glWindowPos4dvMESA PFNGLWINDOWPOS4DVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);")
(define-entry-point glWindowPos4fMESA PFNGLWINDOWPOS4FMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glWindowPos4fvMESA PFNGLWINDOWPOS4FVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);")
(define-entry-point glWindowPos4iMESA PFNGLWINDOWPOS4IMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glWindowPos4ivMESA PFNGLWINDOWPOS4IVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);")
(define-entry-point glWindowPos4sMESA PFNGLWINDOWPOS4SMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glWindowPos4svMESA PFNGLWINDOWPOS4SVMESAPROC "typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);")
(define-entry-point glBeginConditionalRenderNVX PFNGLBEGINCONDITIONALRENDERNVXPROC "typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);")
(define-entry-point glEndConditionalRenderNVX PFNGLENDCONDITIONALRENDERNVXPROC "typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);")
(define-entry-point glMultiDrawArraysIndirectBindlessNV PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);")
(define-entry-point glMultiDrawElementsIndirectBindlessNV PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);")
(define-entry-point glMultiDrawArraysIndirectBindlessCountNV PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC "typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);")
(define-entry-point glMultiDrawElementsIndirectBindlessCountNV PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC "typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);")
(define-entry-point glGetTextureHandleNV PFNGLGETTEXTUREHANDLENVPROC "typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);")
(define-entry-point glGetTextureSamplerHandleNV PFNGLGETTEXTURESAMPLERHANDLENVPROC "typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);")
(define-entry-point glMakeTextureHandleResidentNV PFNGLMAKETEXTUREHANDLERESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);")
(define-entry-point glMakeTextureHandleNonResidentNV PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);")
(define-entry-point glGetImageHandleNV PFNGLGETIMAGEHANDLENVPROC "typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);")
(define-entry-point glMakeImageHandleResidentNV PFNGLMAKEIMAGEHANDLERESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);")
(define-entry-point glMakeImageHandleNonResidentNV PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);")
(define-entry-point glUniformHandleui64NV PFNGLUNIFORMHANDLEUI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);")
(define-entry-point glUniformHandleui64vNV PFNGLUNIFORMHANDLEUI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);")
(define-entry-point glProgramUniformHandleui64NV PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);")
(define-entry-point glProgramUniformHandleui64vNV PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);")
(define-entry-point glIsTextureHandleResidentNV PFNGLISTEXTUREHANDLERESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);")
(define-entry-point glIsImageHandleResidentNV PFNGLISIMAGEHANDLERESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);")
(define-entry-point glBlendParameteriNV PFNGLBLENDPARAMETERINVPROC "typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);")
(define-entry-point glBlendBarrierNV PFNGLBLENDBARRIERNVPROC "typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);")
(define-entry-point glBeginConditionalRenderNV PFNGLBEGINCONDITIONALRENDERNVPROC "typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);")
(define-entry-point glEndConditionalRenderNV PFNGLENDCONDITIONALRENDERNVPROC "typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);")
(define-entry-point glSubpixelPrecisionBiasNV PFNGLSUBPIXELPRECISIONBIASNVPROC "typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);")
(define-entry-point glCopyImageSubDataNV PFNGLCOPYIMAGESUBDATANVPROC "typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);")
(define-entry-point glDepthRangedNV PFNGLDEPTHRANGEDNVPROC "typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);")
(define-entry-point glClearDepthdNV PFNGLCLEARDEPTHDNVPROC "typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);")
(define-entry-point glDepthBoundsdNV PFNGLDEPTHBOUNDSDNVPROC "typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);")
(define-entry-point glDrawTextureNV PFNGLDRAWTEXTURENVPROC "typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);")
(define-entry-point glMapControlPointsNV PFNGLMAPCONTROLPOINTSNVPROC "typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);")
(define-entry-point glMapParameterivNV PFNGLMAPPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glMapParameterfvNV PFNGLMAPPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glGetMapControlPointsNV PFNGLGETMAPCONTROLPOINTSNVPROC "typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);")
(define-entry-point glGetMapParameterivNV PFNGLGETMAPPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glGetMapParameterfvNV PFNGLGETMAPPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetMapAttribParameterivNV PFNGLGETMAPATTRIBPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetMapAttribParameterfvNV PFNGLGETMAPATTRIBPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glEvalMapsNV PFNGLEVALMAPSNVPROC "typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);")
(define-entry-point glGetMultisamplefvNV PFNGLGETMULTISAMPLEFVNVPROC "typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);")
(define-entry-point glSampleMaskIndexedNV PFNGLSAMPLEMASKINDEXEDNVPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);")
(define-entry-point glTexRenderbufferNV PFNGLTEXRENDERBUFFERNVPROC "typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);")
(define-entry-point glDeleteFencesNV PFNGLDELETEFENCESNVPROC "typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);")
(define-entry-point glGenFencesNV PFNGLGENFENCESNVPROC "typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);")
(define-entry-point glIsFenceNV PFNGLISFENCENVPROC "typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);")
(define-entry-point glTestFenceNV PFNGLTESTFENCENVPROC "typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);")
(define-entry-point glGetFenceivNV PFNGLGETFENCEIVNVPROC "typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);")
(define-entry-point glFinishFenceNV PFNGLFINISHFENCENVPROC "typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);")
(define-entry-point glSetFenceNV PFNGLSETFENCENVPROC "typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);")
(define-entry-point glFragmentCoverageColorNV PFNGLFRAGMENTCOVERAGECOLORNVPROC "typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);")
(define-entry-point glProgramNamedParameter4fNV PFNGLPROGRAMNAMEDPARAMETER4FNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramNamedParameter4fvNV PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);")
(define-entry-point glProgramNamedParameter4dNV PFNGLPROGRAMNAMEDPARAMETER4DNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramNamedParameter4dvNV PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);")
(define-entry-point glGetProgramNamedParameterfvNV PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);")
(define-entry-point glGetProgramNamedParameterdvNV PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);")
(define-entry-point glCoverageModulationTableNV PFNGLCOVERAGEMODULATIONTABLENVPROC "typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);")
(define-entry-point glGetCoverageModulationTableNV PFNGLGETCOVERAGEMODULATIONTABLENVPROC "typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);")
(define-entry-point glCoverageModulationNV PFNGLCOVERAGEMODULATIONNVPROC "typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);")
(define-entry-point glRenderbufferStorageMultisampleCoverageNV PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC "typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);")
(define-entry-point glProgramVertexLimitNV PFNGLPROGRAMVERTEXLIMITNVPROC "typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);")
(define-entry-point glFramebufferTextureEXT PFNGLFRAMEBUFFERTEXTUREEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);")
(define-entry-point glFramebufferTextureFaceEXT PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);")
(define-entry-point glProgramLocalParameterI4iNV PFNGLPROGRAMLOCALPARAMETERI4INVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glProgramLocalParameterI4ivNV PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);")
(define-entry-point glProgramLocalParametersI4ivNV PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);")
(define-entry-point glProgramLocalParameterI4uiNV PFNGLPROGRAMLOCALPARAMETERI4UINVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);")
(define-entry-point glProgramLocalParameterI4uivNV PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);")
(define-entry-point glProgramLocalParametersI4uivNV PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);")
(define-entry-point glProgramEnvParameterI4iNV PFNGLPROGRAMENVPARAMETERI4INVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glProgramEnvParameterI4ivNV PFNGLPROGRAMENVPARAMETERI4IVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);")
(define-entry-point glProgramEnvParametersI4ivNV PFNGLPROGRAMENVPARAMETERSI4IVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);")
(define-entry-point glProgramEnvParameterI4uiNV PFNGLPROGRAMENVPARAMETERI4UINVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);")
(define-entry-point glProgramEnvParameterI4uivNV PFNGLPROGRAMENVPARAMETERI4UIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);")
(define-entry-point glProgramEnvParametersI4uivNV PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);")
(define-entry-point glGetProgramLocalParameterIivNV PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);")
(define-entry-point glGetProgramLocalParameterIuivNV PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);")
(define-entry-point glGetProgramEnvParameterIivNV PFNGLGETPROGRAMENVPARAMETERIIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);")
(define-entry-point glGetProgramEnvParameterIuivNV PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);")
(define-entry-point glProgramSubroutineParametersuivNV PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);")
(define-entry-point glGetProgramSubroutineParameteruivNV PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);")
(define-entry-point glVertex2hNV PFNGLVERTEX2HNVPROC "typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);")
(define-entry-point glVertex2hvNV PFNGLVERTEX2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertex3hNV PFNGLVERTEX3HNVPROC "typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);")
(define-entry-point glVertex3hvNV PFNGLVERTEX3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertex4hNV PFNGLVERTEX4HNVPROC "typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);")
(define-entry-point glVertex4hvNV PFNGLVERTEX4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glNormal3hNV PFNGLNORMAL3HNVPROC "typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);")
(define-entry-point glNormal3hvNV PFNGLNORMAL3HVNVPROC "typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glColor3hNV PFNGLCOLOR3HNVPROC "typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);")
(define-entry-point glColor3hvNV PFNGLCOLOR3HVNVPROC "typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glColor4hNV PFNGLCOLOR4HNVPROC "typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);")
(define-entry-point glColor4hvNV PFNGLCOLOR4HVNVPROC "typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord1hNV PFNGLTEXCOORD1HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);")
(define-entry-point glTexCoord1hvNV PFNGLTEXCOORD1HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord2hNV PFNGLTEXCOORD2HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);")
(define-entry-point glTexCoord2hvNV PFNGLTEXCOORD2HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord3hNV PFNGLTEXCOORD3HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);")
(define-entry-point glTexCoord3hvNV PFNGLTEXCOORD3HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glTexCoord4hNV PFNGLTEXCOORD4HNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);")
(define-entry-point glTexCoord4hvNV PFNGLTEXCOORD4HVNVPROC "typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glMultiTexCoord1hNV PFNGLMULTITEXCOORD1HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);")
(define-entry-point glMultiTexCoord1hvNV PFNGLMULTITEXCOORD1HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord2hNV PFNGLMULTITEXCOORD2HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);")
(define-entry-point glMultiTexCoord2hvNV PFNGLMULTITEXCOORD2HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord3hNV PFNGLMULTITEXCOORD3HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);")
(define-entry-point glMultiTexCoord3hvNV PFNGLMULTITEXCOORD3HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glMultiTexCoord4hNV PFNGLMULTITEXCOORD4HNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);")
(define-entry-point glMultiTexCoord4hvNV PFNGLMULTITEXCOORD4HVNVPROC "typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);")
(define-entry-point glFogCoordhNV PFNGLFOGCOORDHNVPROC "typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);")
(define-entry-point glFogCoordhvNV PFNGLFOGCOORDHVNVPROC "typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);")
(define-entry-point glSecondaryColor3hNV PFNGLSECONDARYCOLOR3HNVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);")
(define-entry-point glSecondaryColor3hvNV PFNGLSECONDARYCOLOR3HVNVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);")
(define-entry-point glVertexWeighthNV PFNGLVERTEXWEIGHTHNVPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);")
(define-entry-point glVertexWeighthvNV PFNGLVERTEXWEIGHTHVNVPROC "typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);")
(define-entry-point glVertexAttrib1hNV PFNGLVERTEXATTRIB1HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);")
(define-entry-point glVertexAttrib1hvNV PFNGLVERTEXATTRIB1HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib2hNV PFNGLVERTEXATTRIB2HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);")
(define-entry-point glVertexAttrib2hvNV PFNGLVERTEXATTRIB2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib3hNV PFNGLVERTEXATTRIB3HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);")
(define-entry-point glVertexAttrib3hvNV PFNGLVERTEXATTRIB3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttrib4hNV PFNGLVERTEXATTRIB4HNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);")
(define-entry-point glVertexAttrib4hvNV PFNGLVERTEXATTRIB4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);")
(define-entry-point glVertexAttribs1hvNV PFNGLVERTEXATTRIBS1HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs2hvNV PFNGLVERTEXATTRIBS2HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs3hvNV PFNGLVERTEXATTRIBS3HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glVertexAttribs4hvNV PFNGLVERTEXATTRIBS4HVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);")
(define-entry-point glGetInternalformatSampleivNV PFNGLGETINTERNALFORMATSAMPLEIVNVPROC "typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);")
(define-entry-point glGenOcclusionQueriesNV PFNGLGENOCCLUSIONQUERIESNVPROC "typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glDeleteOcclusionQueriesNV PFNGLDELETEOCCLUSIONQUERIESNVPROC "typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glIsOcclusionQueryNV PFNGLISOCCLUSIONQUERYNVPROC "typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);")
(define-entry-point glBeginOcclusionQueryNV PFNGLBEGINOCCLUSIONQUERYNVPROC "typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);")
(define-entry-point glEndOcclusionQueryNV PFNGLENDOCCLUSIONQUERYNVPROC "typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);")
(define-entry-point glGetOcclusionQueryivNV PFNGLGETOCCLUSIONQUERYIVNVPROC "typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetOcclusionQueryuivNV PFNGLGETOCCLUSIONQUERYUIVNVPROC "typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);")
(define-entry-point glProgramBufferParametersfvNV PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);")
(define-entry-point glProgramBufferParametersIivNV PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);")
(define-entry-point glProgramBufferParametersIuivNV PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);")
(define-entry-point glGenPathsNV PFNGLGENPATHSNVPROC "typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);")
(define-entry-point glDeletePathsNV PFNGLDELETEPATHSNVPROC "typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);")
(define-entry-point glIsPathNV PFNGLISPATHNVPROC "typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);")
(define-entry-point glPathCommandsNV PFNGLPATHCOMMANDSNVPROC "typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);")
(define-entry-point glPathCoordsNV PFNGLPATHCOORDSNVPROC "typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);")
(define-entry-point glPathSubCommandsNV PFNGLPATHSUBCOMMANDSNVPROC "typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);")
(define-entry-point glPathSubCoordsNV PFNGLPATHSUBCOORDSNVPROC "typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);")
(define-entry-point glPathStringNV PFNGLPATHSTRINGNVPROC "typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);")
(define-entry-point glPathGlyphsNV PFNGLPATHGLYPHSNVPROC "typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);")
(define-entry-point glPathGlyphRangeNV PFNGLPATHGLYPHRANGENVPROC "typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);")
(define-entry-point glWeightPathsNV PFNGLWEIGHTPATHSNVPROC "typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);")
(define-entry-point glCopyPathNV PFNGLCOPYPATHNVPROC "typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);")
(define-entry-point glInterpolatePathsNV PFNGLINTERPOLATEPATHSNVPROC "typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);")
(define-entry-point glTransformPathNV PFNGLTRANSFORMPATHNVPROC "typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glPathParameterivNV PFNGLPATHPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);")
(define-entry-point glPathParameteriNV PFNGLPATHPARAMETERINVPROC "typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);")
(define-entry-point glPathParameterfvNV PFNGLPATHPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);")
(define-entry-point glPathParameterfNV PFNGLPATHPARAMETERFNVPROC "typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);")
(define-entry-point glPathDashArrayNV PFNGLPATHDASHARRAYNVPROC "typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);")
(define-entry-point glPathStencilFuncNV PFNGLPATHSTENCILFUNCNVPROC "typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);")
(define-entry-point glPathStencilDepthOffsetNV PFNGLPATHSTENCILDEPTHOFFSETNVPROC "typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);")
(define-entry-point glStencilFillPathNV PFNGLSTENCILFILLPATHNVPROC "typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);")
(define-entry-point glStencilStrokePathNV PFNGLSTENCILSTROKEPATHNVPROC "typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);")
(define-entry-point glStencilFillPathInstancedNV PFNGLSTENCILFILLPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glStencilStrokePathInstancedNV PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glPathCoverDepthFuncNV PFNGLPATHCOVERDEPTHFUNCNVPROC "typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);")
(define-entry-point glCoverFillPathNV PFNGLCOVERFILLPATHNVPROC "typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);")
(define-entry-point glCoverStrokePathNV PFNGLCOVERSTROKEPATHNVPROC "typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);")
(define-entry-point glCoverFillPathInstancedNV PFNGLCOVERFILLPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glCoverStrokePathInstancedNV PFNGLCOVERSTROKEPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glGetPathParameterivNV PFNGLGETPATHPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);")
(define-entry-point glGetPathParameterfvNV PFNGLGETPATHPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);")
(define-entry-point glGetPathCommandsNV PFNGLGETPATHCOMMANDSNVPROC "typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);")
(define-entry-point glGetPathCoordsNV PFNGLGETPATHCOORDSNVPROC "typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);")
(define-entry-point glGetPathDashArrayNV PFNGLGETPATHDASHARRAYNVPROC "typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);")
(define-entry-point glGetPathMetricsNV PFNGLGETPATHMETRICSNVPROC "typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);")
(define-entry-point glGetPathMetricRangeNV PFNGLGETPATHMETRICRANGENVPROC "typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);")
(define-entry-point glGetPathSpacingNV PFNGLGETPATHSPACINGNVPROC "typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);")
(define-entry-point glIsPointInFillPathNV PFNGLISPOINTINFILLPATHNVPROC "typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);")
(define-entry-point glIsPointInStrokePathNV PFNGLISPOINTINSTROKEPATHNVPROC "typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);")
(define-entry-point glGetPathLengthNV PFNGLGETPATHLENGTHNVPROC "typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);")
(define-entry-point glPointAlongPathNV PFNGLPOINTALONGPATHNVPROC "typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);")
(define-entry-point glMatrixLoad3x2fNV PFNGLMATRIXLOAD3X2FNVPROC "typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glMatrixLoad3x3fNV PFNGLMATRIXLOAD3X3FNVPROC "typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glMatrixLoadTranspose3x3fNV PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC "typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glMatrixMult3x2fNV PFNGLMATRIXMULT3X2FNVPROC "typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glMatrixMult3x3fNV PFNGLMATRIXMULT3X3FNVPROC "typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glMatrixMultTranspose3x3fNV PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC "typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);")
(define-entry-point glStencilThenCoverFillPathNV PFNGLSTENCILTHENCOVERFILLPATHNVPROC "typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);")
(define-entry-point glStencilThenCoverStrokePathNV PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC "typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);")
(define-entry-point glStencilThenCoverFillPathInstancedNV PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glStencilThenCoverStrokePathInstancedNV PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC "typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);")
(define-entry-point glPathGlyphIndexRangeNV PFNGLPATHGLYPHINDEXRANGENVPROC "typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);")
(define-entry-point glPathGlyphIndexArrayNV PFNGLPATHGLYPHINDEXARRAYNVPROC "typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);")
(define-entry-point glPathMemoryGlyphIndexArrayNV PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC "typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);")
(define-entry-point glProgramPathFragmentInputGenNV PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);")
(define-entry-point glGetProgramResourcefvNV PFNGLGETPROGRAMRESOURCEFVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);")
(define-entry-point glPathColorGenNV PFNGLPATHCOLORGENNVPROC "typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);")
(define-entry-point glPathTexGenNV PFNGLPATHTEXGENNVPROC "typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);")
(define-entry-point glPathFogGenNV PFNGLPATHFOGGENNVPROC "typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);")
(define-entry-point glGetPathColorGenivNV PFNGLGETPATHCOLORGENIVNVPROC "typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);")
(define-entry-point glGetPathColorGenfvNV PFNGLGETPATHCOLORGENFVNVPROC "typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);")
(define-entry-point glGetPathTexGenivNV PFNGLGETPATHTEXGENIVNVPROC "typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);")
(define-entry-point glGetPathTexGenfvNV PFNGLGETPATHTEXGENFVNVPROC "typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);")
(define-entry-point glPixelDataRangeNV PFNGLPIXELDATARANGENVPROC "typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *pointer);")
(define-entry-point glFlushPixelDataRangeNV PFNGLFLUSHPIXELDATARANGENVPROC "typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);")
(define-entry-point glPointParameteriNV PFNGLPOINTPARAMETERINVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);")
(define-entry-point glPointParameterivNV PFNGLPOINTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glPresentFrameKeyedNV PFNGLPRESENTFRAMEKEYEDNVPROC "typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);")
(define-entry-point glPresentFrameDualFillNV PFNGLPRESENTFRAMEDUALFILLNVPROC "typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);")
(define-entry-point glGetVideoivNV PFNGLGETVIDEOIVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);")
(define-entry-point glGetVideouivNV PFNGLGETVIDEOUIVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);")
(define-entry-point glGetVideoi64vNV PFNGLGETVIDEOI64VNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);")
(define-entry-point glGetVideoui64vNV PFNGLGETVIDEOUI64VNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);")
(define-entry-point glPrimitiveRestartNV PFNGLPRIMITIVERESTARTNVPROC "typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);")
(define-entry-point glPrimitiveRestartIndexNV PFNGLPRIMITIVERESTARTINDEXNVPROC "typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);")
(define-entry-point glCombinerParameterfvNV PFNGLCOMBINERPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glCombinerParameterfNV PFNGLCOMBINERPARAMETERFNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);")
(define-entry-point glCombinerParameterivNV PFNGLCOMBINERPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);")
(define-entry-point glCombinerParameteriNV PFNGLCOMBINERPARAMETERINVPROC "typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);")
(define-entry-point glCombinerInputNV PFNGLCOMBINERINPUTNVPROC "typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);")
(define-entry-point glCombinerOutputNV PFNGLCOMBINEROUTPUTNVPROC "typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);")
(define-entry-point glFinalCombinerInputNV PFNGLFINALCOMBINERINPUTNVPROC "typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);")
(define-entry-point glGetCombinerInputParameterfvNV PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);")
(define-entry-point glGetCombinerInputParameterivNV PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);")
(define-entry-point glGetCombinerOutputParameterfvNV PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);")
(define-entry-point glGetCombinerOutputParameterivNV PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);")
(define-entry-point glGetFinalCombinerInputParameterfvNV PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);")
(define-entry-point glGetFinalCombinerInputParameterivNV PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);")
(define-entry-point glCombinerStageParameterfvNV PFNGLCOMBINERSTAGEPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);")
(define-entry-point glGetCombinerStageParameterfvNV PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);")
(define-entry-point glFramebufferSampleLocationsfvNV PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC "typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);")
(define-entry-point glNamedFramebufferSampleLocationsfvNV PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC "typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);")
(define-entry-point glResolveDepthValuesNV PFNGLRESOLVEDEPTHVALUESNVPROC "typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);")
(define-entry-point glMakeBufferResidentNV PFNGLMAKEBUFFERRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);")
(define-entry-point glMakeBufferNonResidentNV PFNGLMAKEBUFFERNONRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);")
(define-entry-point glIsBufferResidentNV PFNGLISBUFFERRESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);")
(define-entry-point glMakeNamedBufferResidentNV PFNGLMAKENAMEDBUFFERRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);")
(define-entry-point glMakeNamedBufferNonResidentNV PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC "typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);")
(define-entry-point glIsNamedBufferResidentNV PFNGLISNAMEDBUFFERRESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);")
(define-entry-point glGetBufferParameterui64vNV PFNGLGETBUFFERPARAMETERUI64VNVPROC "typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);")
(define-entry-point glGetNamedBufferParameterui64vNV PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC "typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);")
(define-entry-point glGetIntegerui64vNV PFNGLGETINTEGERUI64VNVPROC "typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);")
(define-entry-point glUniformui64NV PFNGLUNIFORMUI64NVPROC "typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);")
(define-entry-point glUniformui64vNV PFNGLUNIFORMUI64VNVPROC "typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glProgramUniformui64NV PFNGLPROGRAMUNIFORMUI64NVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);")
(define-entry-point glProgramUniformui64vNV PFNGLPROGRAMUNIFORMUI64VNVPROC "typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);")
(define-entry-point glTextureBarrierNV PFNGLTEXTUREBARRIERNVPROC "typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);")
(define-entry-point glTexImage2DMultisampleCoverageNV PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC "typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);")
(define-entry-point glTexImage3DMultisampleCoverageNV PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC "typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);")
(define-entry-point glTextureImage2DMultisampleNV PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);")
(define-entry-point glTextureImage3DMultisampleNV PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);")
(define-entry-point glTextureImage2DMultisampleCoverageNV PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);")
(define-entry-point glTextureImage3DMultisampleCoverageNV PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC "typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);")
(define-entry-point glBeginTransformFeedbackNV PFNGLBEGINTRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);")
(define-entry-point glEndTransformFeedbackNV PFNGLENDTRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);")
(define-entry-point glTransformFeedbackAttribsNV PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLenum bufferMode);")
(define-entry-point glBindBufferRangeNV PFNGLBINDBUFFERRANGENVPROC "typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);")
(define-entry-point glBindBufferOffsetNV PFNGLBINDBUFFEROFFSETNVPROC "typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);")
(define-entry-point glBindBufferBaseNV PFNGLBINDBUFFERBASENVPROC "typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);")
(define-entry-point glTransformFeedbackVaryingsNV PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);")
(define-entry-point glActiveVaryingNV PFNGLACTIVEVARYINGNVPROC "typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetVaryingLocationNV PFNGLGETVARYINGLOCATIONNVPROC "typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);")
(define-entry-point glGetActiveVaryingNV PFNGLGETACTIVEVARYINGNVPROC "typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);")
(define-entry-point glGetTransformFeedbackVaryingNV PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC "typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);")
(define-entry-point glTransformFeedbackStreamAttribsNV PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC "typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);")
(define-entry-point glBindTransformFeedbackNV PFNGLBINDTRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);")
(define-entry-point glDeleteTransformFeedbacksNV PFNGLDELETETRANSFORMFEEDBACKSNVPROC "typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);")
(define-entry-point glGenTransformFeedbacksNV PFNGLGENTRANSFORMFEEDBACKSNVPROC "typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);")
(define-entry-point glIsTransformFeedbackNV PFNGLISTRANSFORMFEEDBACKNVPROC "typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);")
(define-entry-point glPauseTransformFeedbackNV PFNGLPAUSETRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);")
(define-entry-point glResumeTransformFeedbackNV PFNGLRESUMETRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);")
(define-entry-point glDrawTransformFeedbackNV PFNGLDRAWTRANSFORMFEEDBACKNVPROC "typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);")
(define-entry-point glVDPAUInitNV PFNGLVDPAUINITNVPROC "typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress);")
(define-entry-point glVDPAUFiniNV PFNGLVDPAUFININVPROC "typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);")
(define-entry-point glVDPAURegisterVideoSurfaceNV PFNGLVDPAUREGISTERVIDEOSURFACENVPROC "typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);")
(define-entry-point glVDPAURegisterOutputSurfaceNV PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC "typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);")
(define-entry-point glVDPAUIsSurfaceNV PFNGLVDPAUISSURFACENVPROC "typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);")
(define-entry-point glVDPAUUnregisterSurfaceNV PFNGLVDPAUUNREGISTERSURFACENVPROC "typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);")
(define-entry-point glVDPAUGetSurfaceivNV PFNGLVDPAUGETSURFACEIVNVPROC "typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);")
(define-entry-point glVDPAUSurfaceAccessNV PFNGLVDPAUSURFACEACCESSNVPROC "typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);")
(define-entry-point glVDPAUMapSurfacesNV PFNGLVDPAUMAPSURFACESNVPROC "typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);")
(define-entry-point glVDPAUUnmapSurfacesNV PFNGLVDPAUUNMAPSURFACESNVPROC "typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);")
(define-entry-point glFlushVertexArrayRangeNV PFNGLFLUSHVERTEXARRAYRANGENVPROC "typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);")
(define-entry-point glVertexArrayRangeNV PFNGLVERTEXARRAYRANGENVPROC "typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);")
(define-entry-point glVertexAttribL1i64NV PFNGLVERTEXATTRIBL1I64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);")
(define-entry-point glVertexAttribL2i64NV PFNGLVERTEXATTRIBL2I64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);")
(define-entry-point glVertexAttribL3i64NV PFNGLVERTEXATTRIBL3I64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);")
(define-entry-point glVertexAttribL4i64NV PFNGLVERTEXATTRIBL4I64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);")
(define-entry-point glVertexAttribL1i64vNV PFNGLVERTEXATTRIBL1I64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);")
(define-entry-point glVertexAttribL2i64vNV PFNGLVERTEXATTRIBL2I64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);")
(define-entry-point glVertexAttribL3i64vNV PFNGLVERTEXATTRIBL3I64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);")
(define-entry-point glVertexAttribL4i64vNV PFNGLVERTEXATTRIBL4I64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);")
(define-entry-point glVertexAttribL1ui64NV PFNGLVERTEXATTRIBL1UI64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);")
(define-entry-point glVertexAttribL2ui64NV PFNGLVERTEXATTRIBL2UI64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);")
(define-entry-point glVertexAttribL3ui64NV PFNGLVERTEXATTRIBL3UI64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);")
(define-entry-point glVertexAttribL4ui64NV PFNGLVERTEXATTRIBL4UI64NVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);")
(define-entry-point glVertexAttribL1ui64vNV PFNGLVERTEXATTRIBL1UI64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);")
(define-entry-point glVertexAttribL2ui64vNV PFNGLVERTEXATTRIBL2UI64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);")
(define-entry-point glVertexAttribL3ui64vNV PFNGLVERTEXATTRIBL3UI64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);")
(define-entry-point glVertexAttribL4ui64vNV PFNGLVERTEXATTRIBL4UI64VNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);")
(define-entry-point glGetVertexAttribLi64vNV PFNGLGETVERTEXATTRIBLI64VNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);")
(define-entry-point glGetVertexAttribLui64vNV PFNGLGETVERTEXATTRIBLUI64VNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);")
(define-entry-point glVertexAttribLFormatNV PFNGLVERTEXATTRIBLFORMATNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);")
(define-entry-point glBufferAddressRangeNV PFNGLBUFFERADDRESSRANGENVPROC "typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);")
(define-entry-point glVertexFormatNV PFNGLVERTEXFORMATNVPROC "typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);")
(define-entry-point glNormalFormatNV PFNGLNORMALFORMATNVPROC "typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);")
(define-entry-point glColorFormatNV PFNGLCOLORFORMATNVPROC "typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);")
(define-entry-point glIndexFormatNV PFNGLINDEXFORMATNVPROC "typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);")
(define-entry-point glTexCoordFormatNV PFNGLTEXCOORDFORMATNVPROC "typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);")
(define-entry-point glEdgeFlagFormatNV PFNGLEDGEFLAGFORMATNVPROC "typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);")
(define-entry-point glSecondaryColorFormatNV PFNGLSECONDARYCOLORFORMATNVPROC "typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);")
(define-entry-point glFogCoordFormatNV PFNGLFOGCOORDFORMATNVPROC "typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);")
(define-entry-point glVertexAttribFormatNV PFNGLVERTEXATTRIBFORMATNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);")
(define-entry-point glVertexAttribIFormatNV PFNGLVERTEXATTRIBIFORMATNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);")
(define-entry-point glGetIntegerui64i_vNV PFNGLGETINTEGERUI64I_VNVPROC "typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);")
(define-entry-point glAreProgramsResidentNV PFNGLAREPROGRAMSRESIDENTNVPROC "typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);")
(define-entry-point glBindProgramNV PFNGLBINDPROGRAMNVPROC "typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);")
(define-entry-point glDeleteProgramsNV PFNGLDELETEPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glExecuteProgramNV PFNGLEXECUTEPROGRAMNVPROC "typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);")
(define-entry-point glGenProgramsNV PFNGLGENPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);")
(define-entry-point glGetProgramParameterdvNV PFNGLGETPROGRAMPARAMETERDVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetProgramParameterfvNV PFNGLGETPROGRAMPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetProgramivNV PFNGLGETPROGRAMIVNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);")
(define-entry-point glGetProgramStringNV PFNGLGETPROGRAMSTRINGNVPROC "typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);")
(define-entry-point glGetTrackMatrixivNV PFNGLGETTRACKMATRIXIVNVPROC "typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribdvNV PFNGLGETVERTEXATTRIBDVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);")
(define-entry-point glGetVertexAttribfvNV PFNGLGETVERTEXATTRIBFVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);")
(define-entry-point glGetVertexAttribivNV PFNGLGETVERTEXATTRIBIVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribPointervNV PFNGLGETVERTEXATTRIBPOINTERVNVPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **pointer);")
(define-entry-point glIsProgramNV PFNGLISPROGRAMNVPROC "typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);")
(define-entry-point glLoadProgramNV PFNGLLOADPROGRAMNVPROC "typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);")
(define-entry-point glProgramParameter4dNV PFNGLPROGRAMPARAMETER4DNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glProgramParameter4dvNV PFNGLPROGRAMPARAMETER4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);")
(define-entry-point glProgramParameter4fNV PFNGLPROGRAMPARAMETER4FNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glProgramParameter4fvNV PFNGLPROGRAMPARAMETER4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);")
(define-entry-point glProgramParameters4dvNV PFNGLPROGRAMPARAMETERS4DVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glProgramParameters4fvNV PFNGLPROGRAMPARAMETERS4FVNVPROC "typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glRequestResidentProgramsNV PFNGLREQUESTRESIDENTPROGRAMSNVPROC "typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);")
(define-entry-point glTrackMatrixNV PFNGLTRACKMATRIXNVPROC "typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);")
(define-entry-point glVertexAttribPointerNV PFNGLVERTEXATTRIBPOINTERNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glVertexAttrib1dNV PFNGLVERTEXATTRIB1DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);")
(define-entry-point glVertexAttrib1dvNV PFNGLVERTEXATTRIB1DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib1fNV PFNGLVERTEXATTRIB1FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);")
(define-entry-point glVertexAttrib1fvNV PFNGLVERTEXATTRIB1FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib1sNV PFNGLVERTEXATTRIB1SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);")
(define-entry-point glVertexAttrib1svNV PFNGLVERTEXATTRIB1SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib2dNV PFNGLVERTEXATTRIB2DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);")
(define-entry-point glVertexAttrib2dvNV PFNGLVERTEXATTRIB2DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib2fNV PFNGLVERTEXATTRIB2FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);")
(define-entry-point glVertexAttrib2fvNV PFNGLVERTEXATTRIB2FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib2sNV PFNGLVERTEXATTRIB2SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);")
(define-entry-point glVertexAttrib2svNV PFNGLVERTEXATTRIB2SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib3dNV PFNGLVERTEXATTRIB3DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);")
(define-entry-point glVertexAttrib3dvNV PFNGLVERTEXATTRIB3DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib3fNV PFNGLVERTEXATTRIB3FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glVertexAttrib3fvNV PFNGLVERTEXATTRIB3FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib3sNV PFNGLVERTEXATTRIB3SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);")
(define-entry-point glVertexAttrib3svNV PFNGLVERTEXATTRIB3SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4dNV PFNGLVERTEXATTRIB4DNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);")
(define-entry-point glVertexAttrib4dvNV PFNGLVERTEXATTRIB4DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);")
(define-entry-point glVertexAttrib4fNV PFNGLVERTEXATTRIB4FNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glVertexAttrib4fvNV PFNGLVERTEXATTRIB4FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);")
(define-entry-point glVertexAttrib4sNV PFNGLVERTEXATTRIB4SNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);")
(define-entry-point glVertexAttrib4svNV PFNGLVERTEXATTRIB4SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttrib4ubNV PFNGLVERTEXATTRIB4UBNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);")
(define-entry-point glVertexAttrib4ubvNV PFNGLVERTEXATTRIB4UBVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttribs1dvNV PFNGLVERTEXATTRIBS1DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs1fvNV PFNGLVERTEXATTRIBS1FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs1svNV PFNGLVERTEXATTRIBS1SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs2dvNV PFNGLVERTEXATTRIBS2DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs2fvNV PFNGLVERTEXATTRIBS2FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs2svNV PFNGLVERTEXATTRIBS2SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs3dvNV PFNGLVERTEXATTRIBS3DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs3fvNV PFNGLVERTEXATTRIBS3FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs3svNV PFNGLVERTEXATTRIBS3SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs4dvNV PFNGLVERTEXATTRIBS4DVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);")
(define-entry-point glVertexAttribs4fvNV PFNGLVERTEXATTRIBS4FVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);")
(define-entry-point glVertexAttribs4svNV PFNGLVERTEXATTRIBS4SVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);")
(define-entry-point glVertexAttribs4ubvNV PFNGLVERTEXATTRIBS4UBVNVPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);")
(define-entry-point glVertexAttribI1iEXT PFNGLVERTEXATTRIBI1IEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);")
(define-entry-point glVertexAttribI2iEXT PFNGLVERTEXATTRIBI2IEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);")
(define-entry-point glVertexAttribI3iEXT PFNGLVERTEXATTRIBI3IEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);")
(define-entry-point glVertexAttribI4iEXT PFNGLVERTEXATTRIBI4IEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);")
(define-entry-point glVertexAttribI1uiEXT PFNGLVERTEXATTRIBI1UIEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);")
(define-entry-point glVertexAttribI2uiEXT PFNGLVERTEXATTRIBI2UIEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);")
(define-entry-point glVertexAttribI3uiEXT PFNGLVERTEXATTRIBI3UIEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);")
(define-entry-point glVertexAttribI4uiEXT PFNGLVERTEXATTRIBI4UIEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);")
(define-entry-point glVertexAttribI1ivEXT PFNGLVERTEXATTRIBI1IVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI2ivEXT PFNGLVERTEXATTRIBI2IVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI3ivEXT PFNGLVERTEXATTRIBI3IVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI4ivEXT PFNGLVERTEXATTRIBI4IVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);")
(define-entry-point glVertexAttribI1uivEXT PFNGLVERTEXATTRIBI1UIVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI2uivEXT PFNGLVERTEXATTRIBI2UIVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI3uivEXT PFNGLVERTEXATTRIBI3UIVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI4uivEXT PFNGLVERTEXATTRIBI4UIVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);")
(define-entry-point glVertexAttribI4bvEXT PFNGLVERTEXATTRIBI4BVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);")
(define-entry-point glVertexAttribI4svEXT PFNGLVERTEXATTRIBI4SVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);")
(define-entry-point glVertexAttribI4ubvEXT PFNGLVERTEXATTRIBI4UBVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);")
(define-entry-point glVertexAttribI4usvEXT PFNGLVERTEXATTRIBI4USVEXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);")
(define-entry-point glVertexAttribIPointerEXT PFNGLVERTEXATTRIBIPOINTEREXTPROC "typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);")
(define-entry-point glGetVertexAttribIivEXT PFNGLGETVERTEXATTRIBIIVEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);")
(define-entry-point glGetVertexAttribIuivEXT PFNGLGETVERTEXATTRIBIUIVEXTPROC "typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);")
(define-entry-point glBeginVideoCaptureNV PFNGLBEGINVIDEOCAPTURENVPROC "typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);")
(define-entry-point glBindVideoCaptureStreamBufferNV PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC "typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);")
(define-entry-point glBindVideoCaptureStreamTextureNV PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC "typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);")
(define-entry-point glEndVideoCaptureNV PFNGLENDVIDEOCAPTURENVPROC "typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);")
(define-entry-point glGetVideoCaptureivNV PFNGLGETVIDEOCAPTUREIVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);")
(define-entry-point glGetVideoCaptureStreamivNV PFNGLGETVIDEOCAPTURESTREAMIVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);")
(define-entry-point glGetVideoCaptureStreamfvNV PFNGLGETVIDEOCAPTURESTREAMFVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);")
(define-entry-point glGetVideoCaptureStreamdvNV PFNGLGETVIDEOCAPTURESTREAMDVNVPROC "typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);")
(define-entry-point glVideoCaptureNV PFNGLVIDEOCAPTURENVPROC "typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);")
(define-entry-point glVideoCaptureStreamParameterivNV PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC "typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);")
(define-entry-point glVideoCaptureStreamParameterfvNV PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC "typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);")
(define-entry-point glVideoCaptureStreamParameterdvNV PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC "typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);")
(define-entry-point glHintPGI PFNGLHINTPGIPROC "typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);")
(define-entry-point glDetailTexFuncSGIS PFNGLDETAILTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);")
(define-entry-point glGetDetailTexFuncSGIS PFNGLGETDETAILTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);")
(define-entry-point glFogFuncSGIS PFNGLFOGFUNCSGISPROC "typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);")
(define-entry-point glGetFogFuncSGIS PFNGLGETFOGFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);")
(define-entry-point glSampleMaskSGIS PFNGLSAMPLEMASKSGISPROC "typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);")
(define-entry-point glSamplePatternSGIS PFNGLSAMPLEPATTERNSGISPROC "typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);")
(define-entry-point glPixelTexGenParameteriSGIS PFNGLPIXELTEXGENPARAMETERISGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);")
(define-entry-point glPixelTexGenParameterivSGIS PFNGLPIXELTEXGENPARAMETERIVSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);")
(define-entry-point glPixelTexGenParameterfSGIS PFNGLPIXELTEXGENPARAMETERFSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPixelTexGenParameterfvSGIS PFNGLPIXELTEXGENPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glGetPixelTexGenParameterivSGIS PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC "typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);")
(define-entry-point glGetPixelTexGenParameterfvSGIS PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);")
(define-entry-point glPointParameterfSGIS PFNGLPOINTPARAMETERFSGISPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);")
(define-entry-point glPointParameterfvSGIS PFNGLPOINTPARAMETERFVSGISPROC "typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glSharpenTexFuncSGIS PFNGLSHARPENTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);")
(define-entry-point glGetSharpenTexFuncSGIS PFNGLGETSHARPENTEXFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);")
(define-entry-point glTexImage4DSGIS PFNGLTEXIMAGE4DSGISPROC "typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTexSubImage4DSGIS PFNGLTEXSUBIMAGE4DSGISPROC "typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);")
(define-entry-point glTextureColorMaskSGIS PFNGLTEXTURECOLORMASKSGISPROC "typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);")
(define-entry-point glGetTexFilterFuncSGIS PFNGLGETTEXFILTERFUNCSGISPROC "typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);")
(define-entry-point glTexFilterFuncSGIS PFNGLTEXFILTERFUNCSGISPROC "typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);")
(define-entry-point glAsyncMarkerSGIX PFNGLASYNCMARKERSGIXPROC "typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);")
(define-entry-point glFinishAsyncSGIX PFNGLFINISHASYNCSGIXPROC "typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);")
(define-entry-point glPollAsyncSGIX PFNGLPOLLASYNCSGIXPROC "typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);")
(define-entry-point glGenAsyncMarkersSGIX PFNGLGENASYNCMARKERSSGIXPROC "typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);")
(define-entry-point glDeleteAsyncMarkersSGIX PFNGLDELETEASYNCMARKERSSGIXPROC "typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);")
(define-entry-point glIsAsyncMarkerSGIX PFNGLISASYNCMARKERSGIXPROC "typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);")
(define-entry-point glFlushRasterSGIX PFNGLFLUSHRASTERSGIXPROC "typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);")
(define-entry-point glFragmentColorMaterialSGIX PFNGLFRAGMENTCOLORMATERIALSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);")
(define-entry-point glFragmentLightfSGIX PFNGLFRAGMENTLIGHTFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);")
(define-entry-point glFragmentLightfvSGIX PFNGLFRAGMENTLIGHTFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentLightiSGIX PFNGLFRAGMENTLIGHTISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);")
(define-entry-point glFragmentLightivSGIX PFNGLFRAGMENTLIGHTIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);")
(define-entry-point glFragmentLightModelfSGIX PFNGLFRAGMENTLIGHTMODELFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);")
(define-entry-point glFragmentLightModelfvSGIX PFNGLFRAGMENTLIGHTMODELFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentLightModeliSGIX PFNGLFRAGMENTLIGHTMODELISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glFragmentLightModelivSGIX PFNGLFRAGMENTLIGHTMODELIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);")
(define-entry-point glFragmentMaterialfSGIX PFNGLFRAGMENTMATERIALFSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);")
(define-entry-point glFragmentMaterialfvSGIX PFNGLFRAGMENTMATERIALFVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);")
(define-entry-point glFragmentMaterialiSGIX PFNGLFRAGMENTMATERIALISGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);")
(define-entry-point glFragmentMaterialivSGIX PFNGLFRAGMENTMATERIALIVSGIXPROC "typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);")
(define-entry-point glGetFragmentLightfvSGIX PFNGLGETFRAGMENTLIGHTFVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);")
(define-entry-point glGetFragmentLightivSGIX PFNGLGETFRAGMENTLIGHTIVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);")
(define-entry-point glGetFragmentMaterialfvSGIX PFNGLGETFRAGMENTMATERIALFVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);")
(define-entry-point glGetFragmentMaterialivSGIX PFNGLGETFRAGMENTMATERIALIVSGIXPROC "typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);")
(define-entry-point glLightEnviSGIX PFNGLLIGHTENVISGIXPROC "typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glFrameZoomSGIX PFNGLFRAMEZOOMSGIXPROC "typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);")
(define-entry-point glIglooInterfaceSGIX PFNGLIGLOOINTERFACESGIXPROC "typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);")
(define-entry-point glGetInstrumentsSGIX PFNGLGETINSTRUMENTSSGIXPROC "typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);")
(define-entry-point glInstrumentsBufferSGIX PFNGLINSTRUMENTSBUFFERSGIXPROC "typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);")
(define-entry-point glPollInstrumentsSGIX PFNGLPOLLINSTRUMENTSSGIXPROC "typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);")
(define-entry-point glReadInstrumentsSGIX PFNGLREADINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);")
(define-entry-point glStartInstrumentsSGIX PFNGLSTARTINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);")
(define-entry-point glStopInstrumentsSGIX PFNGLSTOPINSTRUMENTSSGIXPROC "typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);")
(define-entry-point glGetListParameterfvSGIX PFNGLGETLISTPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);")
(define-entry-point glGetListParameterivSGIX PFNGLGETLISTPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);")
(define-entry-point glListParameterfSGIX PFNGLLISTPARAMETERFSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);")
(define-entry-point glListParameterfvSGIX PFNGLLISTPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);")
(define-entry-point glListParameteriSGIX PFNGLLISTPARAMETERISGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);")
(define-entry-point glListParameterivSGIX PFNGLLISTPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);")
(define-entry-point glPixelTexGenSGIX PFNGLPIXELTEXGENSGIXPROC "typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);")
(define-entry-point glDeformationMap3dSGIX PFNGLDEFORMATIONMAP3DSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);")
(define-entry-point glDeformationMap3fSGIX PFNGLDEFORMATIONMAP3FSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);")
(define-entry-point glDeformSGIX PFNGLDEFORMSGIXPROC "typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);")
(define-entry-point glLoadIdentityDeformationMapSGIX PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC "typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);")
(define-entry-point glReferencePlaneSGIX PFNGLREFERENCEPLANESGIXPROC "typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);")
(define-entry-point glSpriteParameterfSGIX PFNGLSPRITEPARAMETERFSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);")
(define-entry-point glSpriteParameterfvSGIX PFNGLSPRITEPARAMETERFVSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);")
(define-entry-point glSpriteParameteriSGIX PFNGLSPRITEPARAMETERISGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);")
(define-entry-point glSpriteParameterivSGIX PFNGLSPRITEPARAMETERIVSGIXPROC "typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);")
(define-entry-point glTagSampleBufferSGIX PFNGLTAGSAMPLEBUFFERSGIXPROC "typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);")
(define-entry-point glColorTableSGI PFNGLCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);")
(define-entry-point glColorTableParameterfvSGI PFNGLCOLORTABLEPARAMETERFVSGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);")
(define-entry-point glColorTableParameterivSGI PFNGLCOLORTABLEPARAMETERIVSGIPROC "typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);")
(define-entry-point glCopyColorTableSGI PFNGLCOPYCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);")
(define-entry-point glGetColorTableSGI PFNGLGETCOLORTABLESGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, void *table);")
(define-entry-point glGetColorTableParameterfvSGI PFNGLGETCOLORTABLEPARAMETERFVSGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);")
(define-entry-point glGetColorTableParameterivSGI PFNGLGETCOLORTABLEPARAMETERIVSGIPROC "typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);")
(define-entry-point glFinishTextureSUNX PFNGLFINISHTEXTURESUNXPROC "typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);")
(define-entry-point glGlobalAlphaFactorbSUN PFNGLGLOBALALPHAFACTORBSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);")
(define-entry-point glGlobalAlphaFactorsSUN PFNGLGLOBALALPHAFACTORSSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);")
(define-entry-point glGlobalAlphaFactoriSUN PFNGLGLOBALALPHAFACTORISUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);")
(define-entry-point glGlobalAlphaFactorfSUN PFNGLGLOBALALPHAFACTORFSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);")
(define-entry-point glGlobalAlphaFactordSUN PFNGLGLOBALALPHAFACTORDSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);")
(define-entry-point glGlobalAlphaFactorubSUN PFNGLGLOBALALPHAFACTORUBSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);")
(define-entry-point glGlobalAlphaFactorusSUN PFNGLGLOBALALPHAFACTORUSSUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);")
(define-entry-point glGlobalAlphaFactoruiSUN PFNGLGLOBALALPHAFACTORUISUNPROC "typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);")
(define-entry-point glDrawMeshArraysSUN PFNGLDRAWMESHARRAYSSUNPROC "typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);")
(define-entry-point glReplacementCodeuiSUN PFNGLREPLACEMENTCODEUISUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);")
(define-entry-point glReplacementCodeusSUN PFNGLREPLACEMENTCODEUSSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);")
(define-entry-point glReplacementCodeubSUN PFNGLREPLACEMENTCODEUBSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);")
(define-entry-point glReplacementCodeuivSUN PFNGLREPLACEMENTCODEUIVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);")
(define-entry-point glReplacementCodeusvSUN PFNGLREPLACEMENTCODEUSVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);")
(define-entry-point glReplacementCodeubvSUN PFNGLREPLACEMENTCODEUBVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);")
(define-entry-point glReplacementCodePointerSUN PFNGLREPLACEMENTCODEPOINTERSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const void **pointer);")
(define-entry-point glColor4ubVertex2fSUN PFNGLCOLOR4UBVERTEX2FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);")
(define-entry-point glColor4ubVertex2fvSUN PFNGLCOLOR4UBVERTEX2FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);")
(define-entry-point glColor4ubVertex3fSUN PFNGLCOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor4ubVertex3fvSUN PFNGLCOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);")
(define-entry-point glColor3fVertex3fSUN PFNGLCOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor3fVertex3fvSUN PFNGLCOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);")
(define-entry-point glNormal3fVertex3fSUN PFNGLNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glNormal3fVertex3fvSUN PFNGLNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);")
(define-entry-point glColor4fNormal3fVertex3fSUN PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glColor4fNormal3fVertex3fvSUN PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord2fVertex3fSUN PFNGLTEXCOORD2FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fVertex3fvSUN PFNGLTEXCOORD2FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);")
(define-entry-point glTexCoord4fVertex4fSUN PFNGLTEXCOORD4FVERTEX4FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glTexCoord4fVertex4fvSUN PFNGLTEXCOORD4FVERTEX4FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);")
(define-entry-point glTexCoord2fColor4ubVertex3fSUN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor4ubVertex3fvSUN PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);")
(define-entry-point glTexCoord2fColor3fVertex3fSUN PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor3fVertex3fvSUN PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);")
(define-entry-point glTexCoord2fNormal3fVertex3fSUN PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fNormal3fVertex3fvSUN PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord2fColor4fNormal3fVertex3fSUN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glTexCoord2fColor4fNormal3fVertex3fvSUN PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glTexCoord4fColor4fNormal3fVertex4fSUN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);")
(define-entry-point glTexCoord4fColor4fNormal3fVertex4fvSUN PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC "typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiVertex3fSUN PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiVertex3fvSUN PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor4ubVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor4ubVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor3fVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor3fVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);")
(define-entry-point glReplacementCodeuiNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiColor4fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiColor4fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);")
(define-entry-point glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);")
(define-entry-point glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC "typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);")
